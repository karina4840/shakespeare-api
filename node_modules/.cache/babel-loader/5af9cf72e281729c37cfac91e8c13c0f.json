{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [allData, setAllData] = useState([]);\n  const [filteredData, setFilteredData] = useState(allData); // fetching the data from API and store values \n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search');\n    const itemsObj = await data.json();\n    const items = itemsObj.hits.hits;\n    console.log(items);\n    setItems(items);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Shakespeare Work Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for characters or plays\",\n        onChange: event => {\n          setSearch(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), items.map(_source => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: text_entry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"sWj98Ubr4/93JU8LkxKwlpW8zu8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx"],"names":["React","useState","useEffect","App","allData","setAllData","filteredData","setFilteredData","fetchItems","data","fetch","itemsObj","json","items","hits","console","log","setItems","event","setSearch","target","value","map","_source","text_entry"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBJ,QAAQ,CAAC,EAAD,CAArC;AACJ,QAAM,CAACK,YAAD,EAAcC,eAAd,IAAiCN,QAAQ,CAACG,OAAD,CAA/C,CAHe,CAKf;;AAEGF,EAAAA,SAAS,CAAC,MAAM;AACfM,IAAAA,UAAU;AACV,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMA,UAAU,GAAG,YAAW;AACzB,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,uDAAD,CAAxB;AAEA,UAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAvB;AACA,UAAMC,KAAK,GAAGF,QAAQ,CAACG,IAAT,CAAcA,IAA5B;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEAI,IAAAA,QAAQ,CAACJ,KAAD,CAAR;AAEH,GAVF;;AAaC,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,gCAFhB;AAGI,QAAA,QAAQ,EAAEK,KAAK,IAAI;AAACC,UAAAA,SAAS,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAT;AAA8B;AAHtD;AAAA;AAAA;AAAA;AAAA,cADJ,EAMSR,KAAK,CAACS,GAAN,CAAWC,OAAD,iBACX;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cADC,CANT;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAxCQrB,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nfunction App() {\n\n    const [allData,setAllData] = useState([]);\nconst [filteredData,setFilteredData] = useState(allData);\n\n// fetching the data from API and store values \n\n   useEffect(() => {\n    fetchItems();\n   }, []);\n\n\n   const fetchItems = async() => {\n        const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search');\n\n        const itemsObj = await data.json();\n        const items = itemsObj.hits.hits;\n\n        console.log(items);   \n\n        setItems(items);\n        \n    }\n\n\n    return (\n        <div className=\"App\">\n            <h1 className=\"heading\">Shakespeare Work Library</h1>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search for characters or plays\"\n                    onChange={event => {setSearch(event.target.value)}}\n                    />\n                    {items.map((_source) => \n                    <li>{text_entry}</li>\n                    )}\n            </div>\n        </div>\n    );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}