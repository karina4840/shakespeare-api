{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nexport default function buildResponseAdapterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var additionalFacetValueFields = Object.entries(config.facets || {}).reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        fieldName = _ref2[0],\n        facetConfig = _ref2[1];\n\n    if (facetConfig.unit && facetConfig.center) {\n      return _objectSpread(_objectSpread({}, acc || {}), {}, _defineProperty({}, fieldName, _objectSpread(_objectSpread({}, facetConfig.unit && {\n        unit: facetConfig.unit\n      }), facetConfig.center && {\n        center: facetConfig.center\n      })));\n    }\n\n    return acc;\n  }, null);\n  return _objectSpread({}, additionalFacetValueFields && {\n    additionalFacetValueFields: additionalFacetValueFields\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,eAAe,SAASA,2BAAT,GAAkD;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AAC/D,MAAMC,0BAA0B,GAAGC,MAAM,CAACC,OAAPD,CAAeF,MAAM,CAACI,MAAPJ,IAAiB,EAAhCE,EAAoCG,MAApCH,CACjC,UAACI,GAAD,QAAmC;AAAA;AAAA,QAA5BC,SAA4B;AAAA,QAAjBC,WAAiB;;AACjC,QAAIA,WAAW,CAACC,IAAZD,IAAoBA,WAAW,CAACE,MAApC,EAA4C;AAC1C,6CACMJ,GAAG,IAAI,EADb,2BAEGC,SAFH,kCAGQC,WAAW,CAACC,IAAZD,IAAoB;AAAEC,YAAI,EAAED,WAAW,CAACC;AAApB,OAH5B,GAIQD,WAAW,CAACE,MAAZF,IAAsB;AAAEE,cAAM,EAAEF,WAAW,CAACE;AAAtB,OAJ9B;AAOD;;AAED,WAAOJ,GAAP;AAZ+B,KAcjC,IAdiCJ,CAAnC;AAiBA,2BACMD,0BAA0B,IAAI;AAAEA,8BAA0B,EAA1BA;AAAF,GADpC;AAGD","names":["buildResponseAdapterOptions","config","additionalFacetValueFields","Object","entries","facets","reduce","acc","fieldName","facetConfig","unit","center"],"sources":["/Users/karina/Main/Study/Web Dev/elasticsearch-test-api/node_modules/@elastic/search-ui-app-search-connector/src/buildResponseAdapterOptions.js"],"sourcesContent":["export default function buildResponseAdapterOptions(config = {}) {\n  const additionalFacetValueFields = Object.entries(config.facets || {}).reduce(\n    (acc, [fieldName, facetConfig]) => {\n      if (facetConfig.unit && facetConfig.center) {\n        return {\n          ...(acc || {}),\n          [fieldName]: {\n            ...(facetConfig.unit && { unit: facetConfig.unit }),\n            ...(facetConfig.center && { center: facetConfig.center })\n          }\n        };\n      }\n\n      return acc;\n    },\n    null\n  );\n\n  return {\n    ...(additionalFacetValueFields && { additionalFacetValueFields })\n  };\n}\n"]},"metadata":{},"sourceType":"module"}