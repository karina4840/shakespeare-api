{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/test-api/src/Components/App.jsx\";\nimport React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport { PagingInfo, ResultsPerPage, Paging, SearchProvider, Results, SearchBox } from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\"; // ============== retrieving credentials from my account ==============\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst connector = new AppSearchAPIConnector({\n  searchKey: \"search-j2upnixcxa1k28efrs8sugrv\",\n  engineName: \"play-search\",\n  endpointBase: \"https://play-search.ent.us-central1.gcp.cloud.es.io\",\n  cacheResponses: false\n}); // ============== setting configurations for connection and searches ==============\n\nconst searchkitConfig = {\n  query: new MultiMatchQuery({\n    fields: ['play_name', 'text_entry']\n  })\n};\nconst config = {\n  apiConnector: connector,\n  searchQuery: {\n    //Results display: name of the play, its speaker, text entry, and speech number.\n    result_fields: {\n      play_name: {\n        snippet: {\n          size: 35,\n          fallback: true\n        }\n      },\n      speaker: {\n        snippet: {\n          size: 50,\n          fallback: true\n        }\n      },\n      text_entry: {\n        snippet: {\n          size: 70,\n          fallback: true\n        }\n      }\n    }\n  }\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(SearchProvider, {\n    config: config,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"Shakespeare Work Library\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        header: /*#__PURE__*/_jsxDEV(SearchBox, {\n          inputProps: {\n            placeholder: \"type a character name or a text line\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this),\n        bodyContent: /*#__PURE__*/_jsxDEV(Results, {\n          titleField: \"play_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }, this),\n        bodyHeader: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(PagingInfo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(ResultsPerPage, {\n            options: [5, 10, 20]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true),\n        bodyFooter: /*#__PURE__*/_jsxDEV(Paging, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/test-api/src/Components/App.jsx"],"names":["React","AppSearchAPIConnector","PagingInfo","ResultsPerPage","Paging","SearchProvider","Results","SearchBox","Layout","connector","searchKey","engineName","endpointBase","cacheResponses","searchkitConfig","query","MultiMatchQuery","fields","config","apiConnector","searchQuery","result_fields","play_name","snippet","size","fallback","speaker","text_entry","App","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,SACIC,UADJ,EAEIC,cAFJ,EAGIC,MAHJ,EAIIC,cAJJ,EAKIC,OALJ,EAMIC,SANJ,QAOO,0BAPP;AAQA,SAAQC,MAAR,QAAqB,gCAArB;AACA,OAAO,sDAAP,C,CAEA;;;;AACA,MAAMC,SAAS,GAAG,IAAIR,qBAAJ,CAA0B;AAC1CS,EAAAA,SAAS,EAAE,iCAD+B;AAE1CC,EAAAA,UAAU,EAAE,aAF8B;AAG1CC,EAAAA,YAAY,EAAE,qDAH4B;AAI1CC,EAAAA,cAAc,EAAE;AAJ0B,CAA1B,CAAlB,C,CAQA;;AACA,MAAMC,eAAe,GAAG;AAClBC,EAAAA,KAAK,EAAE,IAAIC,eAAJ,CAAoB;AAACC,IAAAA,MAAM,EAAE,CAAC,WAAD,EAAc,YAAd;AAAT,GAApB;AADW,CAAxB;AAGA,MAAMC,MAAM,GAAG;AACXC,EAAAA,YAAY,EAAEV,SADH;AAKXW,EAAAA,WAAW,EAAE;AACT;AACAC,IAAAA,aAAa,EAAE;AACXC,MAAAA,SAAS,EAAE;AACPC,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,EADD;AAELC,UAAAA,QAAQ,EAAE;AAFL;AADF,OADA;AAOXC,MAAAA,OAAO,EAAE;AACLH,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,EADD;AAELC,UAAAA,QAAQ,EAAE;AAFL;AADJ,OAPE;AAaXE,MAAAA,UAAU,EAAE;AACRJ,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,EADD;AAELC,UAAAA,QAAQ,EAAE;AAFL;AADD;AAbD;AAFN;AALF,CAAf;;AA8BA,SAASG,GAAT,GAAe;AACX,sBACI,QAAC,cAAD;AACA,IAAA,MAAM,EAAEV,MADR;AAAA,2BAGI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEI,QAAC,MAAD;AACI,QAAA,MAAM,eACN,QAAC,SAAD;AACE,UAAA,UAAU,EAAE;AAAEW,YAAAA,WAAW,EAAE;AAAf;AADd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAOI,QAAA,WAAW,eACT,QAAC,OAAD;AAAS,UAAA,UAAU,EAAG;AAAtB;AAAA;AAAA;AAAA;AAAA,gBARN;AASQ,QAAA,UAAU,eACV;AAAA,kCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,cAAD;AAAgB,YAAA,OAAO,EAAI,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,wBAVR;AAeQ,QAAA,UAAU,eAAE,QAAE,MAAF;AAAA;AAAA;AAAA;AAAA;AAfpB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;KA3BQD,G;AA4BT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport {\n    PagingInfo,\n    ResultsPerPage,\n    Paging,\n    SearchProvider,\n    Results,\n    SearchBox\n} from \"@elastic/react-search-ui\";\nimport {Layout} from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\n// ============== retrieving credentials from my account ==============\nconst connector = new AppSearchAPIConnector({\n  searchKey: \"search-j2upnixcxa1k28efrs8sugrv\", \n  engineName: \"play-search\", \n  endpointBase: \"https://play-search.ent.us-central1.gcp.cloud.es.io\", \n  cacheResponses: false});\n\n\n\n// ============== setting configurations for connection and searches ==============\nconst searchkitConfig = {\n      query: new MultiMatchQuery({fields: ['play_name', 'text_entry']}),\n    };\nconst config = {\n    apiConnector: connector,\n\n    \n\n    searchQuery: {\n        //Results display: name of the play, its speaker, text entry, and speech number.\n        result_fields: {\n            play_name: {\n                snippet: {\n                    size: 35,\n                    fallback: true\n                }\n            },\n            speaker: {\n                snippet: {\n                    size: 50,\n                    fallback: true\n                }\n            },\n            text_entry: {\n                snippet: {\n                    size: 70,\n                    fallback: true\n                }\n            }\n        }\n    }\n};\n\nfunction App() {\n    return (\n        <SearchProvider \n        config={config}>\n\n            <div className=\"App\">\n              <h1 className=\"heading\">Shakespeare Work Library</h1>\n                <Layout\n                    header={\n                    <SearchBox \n                      inputProps={{ placeholder: \"type a character name or a text line\"}}\n                      \n                    />}\n                     \n                    bodyContent={\n                      <Results titleField = \"play_name\"/>}\n                        bodyHeader={\n                        <> \n                          <PagingInfo/> \n                          <ResultsPerPage options = {[5, 10, 20]}/> \n                        </>\n                        }\n                        bodyFooter={< Paging />}\n                />\n            </div>\n        </SearchProvider>\n    );\n}\nexport default App; \n"]},"metadata":{},"sourceType":"module"}