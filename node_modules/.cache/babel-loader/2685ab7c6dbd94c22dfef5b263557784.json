{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBox from './SearchBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // setting the initial states for items and search\n  const [items, setItems] = useState([]);\n  const [search, setSearch] = useState(\"\"); // fetching the data from API and store values\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search');\n    const itemsObj = await data.json();\n    const items = itemsObj.hits.hits; // fetching the data from API and store values   \n\n    setItems(items);\n  };\n\n  const filteredPlays = items.filter(play => {\n    return play._source.text_entry.toLowerCase().includes(setSearch.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Shakespeare Work Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: event => setSearch(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        plays: filteredPlays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"o//etK5j5LFRE3IE0SuRJVNgnkA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx"],"names":["React","useState","useEffect","CardList","SearchBox","App","items","setItems","search","setSearch","fetchItems","data","fetch","itemsObj","json","hits","filteredPlays","filter","play","_source","text_entry","toLowerCase","includes","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb;AACE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CAJW,CAMb;;AACEC,EAAAA,SAAS,CAAC,MAAM;AAACQ,IAAAA,UAAU;AAAG,GAArB,EAAuB,EAAvB,CAAT;;AAEA,QAAMA,UAAU,GAAG,YAAW;AAC1B,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,uDAAD,CAAxB;AACA,UAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAvB;AACA,UAAMR,KAAK,GAAGO,QAAQ,CAACE,IAAT,CAAcA,IAA5B,CAH0B,CAK9B;;AACIR,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAPD;;AASA,QAAMU,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAcC,IAAD,IAAU;AACzC,WAAOA,IAAI,CACNC,OADE,CAEFC,UAFE,CAGFC,WAHE,GAIFC,QAJE,CAIOb,SAAS,CAACY,WAAV,EAJP,CAAP;AAKH,GANqB,CAAtB;AAQA,sBAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,YAAY,EAAGE,KAAD,IAAWd,SAAS,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA7C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAET;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAUH;;GApCQX,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBox from './SearchBox';\n\nfunction App() {\n\n  // setting the initial states for items and search\n    const [items, setItems] = useState([]);\n    const [search, setSearch] = useState(\"\");\n\n  // fetching the data from API and store values\n    useEffect(() => {fetchItems()}, []);\n\n    const fetchItems = async() => {\n        const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search');\n        const itemsObj = await data.json();\n        const items = itemsObj.hits.hits;\n    \n    // fetching the data from API and store values   \n        setItems(items);\n    }\n\n    const filteredPlays = items.filter((play) => {\n        return play\n            ._source\n            .text_entry\n            .toLowerCase()\n            .includes(setSearch.toLowerCase());\n    });\n\n    return (\n\n        <div className=\"App\">\n            <h1 className=\"heading\">Shakespeare Work Library</h1>\n            <div>\n                <SearchBox searchChange={(event) => setSearch(event.target.value)}/>\n                <CardList plays={filteredPlays}/>\n            </div>\n        </div>\n    );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}