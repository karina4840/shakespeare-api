{"ast":null,"code":"// ============== importing necessary modules==============\nimport React from\"react\";import AppSearchAPIConnector from\"@elastic/search-ui-app-search-connector\";import{PagingInfo,ResultsPerPage,Paging,SearchProvider,Results,SearchBox}from\"@elastic/react-search-ui\";import{Layout}from\"@elastic/react-search-ui-views\";import\"@elastic/react-search-ui-views/lib/styles/styles.css\";// ============== retrieving credentials from my account ==============\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var connector=new AppSearchAPIConnector({searchKey:\"search-j2upnixcxa1k28efrs8sugrv\",engineName:\"play-search\",endpointBase:\"https://play-search.ent.us-central1.gcp.cloud.es.io\",cacheResponses:false});// ============== setting configurations for connection and searches ==============\nvar config={apiConnector:connector,//Search by play names and entries\nsearchQuery:{//Results display: name of the play, its speaker, and text entry.\nresult_fields:{play_name:{// A snippet means that matching search terms will be highlighted via <em> tags.\nsnippet:{size:35,// 35 characters highlighted max.\nfallback:true// Fallback to a \"raw\" result.\n}},speaker:{snippet:{size:50,fallback:true}},text_entry:{snippet:{size:50,fallback:true}}}}};function App(){return/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(SearchProvider,{config:config,children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"heading\",children:\"Shakespeare Work Library\"}),/*#__PURE__*/_jsx(Layout,{header:/*#__PURE__*/_jsx(SearchBox,{inputProps:{placeholder:\"Search for characters or plays\"}}),bodyContent:/*#__PURE__*/_jsx(Results,{titleField:\"play_name\"}),bodyHeader:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PagingInfo,{}),/*#__PURE__*/_jsx(ResultsPerPage,{options:[5,10,20]})]}),bodyFooter:/*#__PURE__*/_jsx(Paging,{})})]})})});}export default App;","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/elasticsearch-api-test/src/Components/App.jsx"],"names":["React","AppSearchAPIConnector","PagingInfo","ResultsPerPage","Paging","SearchProvider","Results","SearchBox","Layout","connector","searchKey","engineName","endpointBase","cacheResponses","config","apiConnector","searchQuery","result_fields","play_name","snippet","size","fallback","speaker","text_entry","App","placeholder"],"mappings":"AAAA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yCAAlC,CACA,OACIC,UADJ,CAEIC,cAFJ,CAGIC,MAHJ,CAIIC,cAJJ,CAKIC,OALJ,CAMIC,SANJ,KAOO,0BAPP,CAQA,OAAQC,MAAR,KAAqB,gCAArB,CACA,MAAO,sDAAP,CAGA;6IACA,GAAMC,CAAAA,SAAS,CAAG,GAAIR,CAAAA,qBAAJ,CAA0B,CAC1CS,SAAS,CAAE,iCAD+B,CAE1CC,UAAU,CAAE,aAF8B,CAG1CC,YAAY,CAAE,qDAH4B,CAI1CC,cAAc,CAAE,KAJ0B,CAA1B,CAAlB,CAOA;AAEA,GAAMC,CAAAA,MAAM,CAAG,CACXC,YAAY,CAAEN,SADH,CAGX;AACAO,WAAW,CAAE,CAET;AACAC,aAAa,CAAE,CACXC,SAAS,CAAE,CACT;AACEC,OAAO,CAAE,CACLC,IAAI,CAAE,EADD,CACK;AACVC,QAAQ,CAAE,IAAK;AAFV,CAFF,CADA,CAQXC,OAAO,CAAE,CACLH,OAAO,CAAE,CACLC,IAAI,CAAE,EADD,CAELC,QAAQ,CAAE,IAFL,CADJ,CARE,CAcXE,UAAU,CAAC,CACTJ,OAAO,CAAE,CACPC,IAAI,CAAE,EADC,CAEPC,QAAQ,CAAE,IAFH,CADA,CAdA,CAHN,CAJF,CAAf,CA+BA,QAASG,CAAAA,GAAT,EAAe,CACX,mBACE,KAAC,KAAD,CAAO,UAAP,wBACE,KAAC,cAAD,EAAgB,MAAM,CAAEV,MAAxB,uBACI,aAAK,SAAS,CAAC,KAAf,wBACE,WAAI,SAAS,CAAC,SAAd,sCADF,cAEI,KAAC,MAAD,EACE,MAAM,cACN,KAAC,SAAD,EACA,UAAU,CAAE,CACVW,WAAW,CAAE,gCADH,CADZ,EAFF,CAQE,WAAW,cAAE,KAAC,OAAD,EAAS,UAAU,CAAG,WAAtB,EARf,CASE,UAAU,cACR,wCACE,KAAC,UAAD,IADF,cAEE,KAAC,cAAD,EAAgB,OAAO,CAAI,CAAC,CAAD,CAAI,EAAJ,CAAQ,EAAR,CAA3B,EAFF,GAVJ,CAeE,UAAU,cAAE,KAAE,MAAF,IAfd,EAFJ,GADJ,EADF,EADF,CA0BH,CACD,cAAeD,CAAAA,GAAf","sourcesContent":["// ============== importing necessary modules==============\n\nimport React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport {\n    PagingInfo,\n    ResultsPerPage,\n    Paging,\n    SearchProvider,\n    Results,\n    SearchBox\n} from \"@elastic/react-search-ui\";\nimport {Layout} from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\n\n// ============== retrieving credentials from my account ==============\nconst connector = new AppSearchAPIConnector({\n  searchKey: \"search-j2upnixcxa1k28efrs8sugrv\", \n  engineName: \"play-search\", \n  endpointBase: \"https://play-search.ent.us-central1.gcp.cloud.es.io\", \n  cacheResponses: false});\n\n\n// ============== setting configurations for connection and searches ==============\n\nconst config = {\n    apiConnector: connector,\n\n    //Search by play names and entries\n    searchQuery: {\n      \n        //Results display: name of the play, its speaker, and text entry.\n        result_fields: {\n            play_name: {\n              // A snippet means that matching search terms will be highlighted via <em> tags.\n                snippet: {\n                    size: 35, // 35 characters highlighted max.\n                    fallback: true // Fallback to a \"raw\" result.\n                }\n            },\n            speaker: {\n                snippet: {\n                    size: 50, \n                    fallback: true \n                }\n            },\n            text_entry:{\n              snippet: {\n                size: 50, \n                fallback: true \n            }\n            }\n        }\n    }\n};\n\nfunction App() {\n    return (\n      <React.StrictMode>\n        <SearchProvider config={config}>\n            <div className=\"App\">\n              <h1 className=\"heading\">Shakespeare Work Library</h1>\n                <Layout \n                  header={\n                  <SearchBox \n                  inputProps={{\n                    placeholder: \"Search for characters or plays\"\n                  }}\n                   \n                    />}\n                  bodyContent={<Results titleField = \"play_name\"/>}\n                  bodyHeader={\n                    <> \n                      <PagingInfo/> \n                      <ResultsPerPage options = {[5, 10, 20]}/> \n                    </>\n                  }\n                  bodyFooter={< Paging />}\n                />\n            </div>\n        </SearchProvider>\n      </React.StrictMode>\n    );\n}\nexport default App; \n"]},"metadata":{},"sourceType":"module"}