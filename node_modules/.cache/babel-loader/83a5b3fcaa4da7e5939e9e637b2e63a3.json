{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/Pagination.jsx\";\n// import React, { useState } from \"react\";\n// function usePagination(items, itemsPerPage) {\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const maxPage = Math.ceil(items.length / itemsPerPage);\n//   function currentData() {\n//     const begin = (currentPage - 1) * itemsPerPage;\n//     const end = begin + itemsPerPage;\n//     return items.slice(begin, end);\n//   }\n//   function next() {\n//     setCurrentPage(currentPage => Math.min(currentPage + 1, maxPage));\n//   }\n//   function prev() {\n//     setCurrentPage(currentPage => Math.max(currentPage - 1, 1));\n//   }\n//   function jump(page) {\n//     const pageNumber = Math.max(1, page);\n//     setCurrentPage(currentPage => Math.min(pageNumber, maxPage));\n//   }\n//   return { next, prev, jump, currentData, currentPage, maxPage };\n// }\n// export default usePagination;\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  let {\n    postsPerPage,\n    totalPosts,\n    paginate\n  } = _ref;\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => paginate(number),\n          href: \"!#\",\n          className: \"page-link\",\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/Pagination.jsx"],"names":["React","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","map","number"],"mappings":";AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAG,QAA4C;AAAA,MAA3C;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,UAAhB;AAA4BC,IAAAA;AAA5B,GAA2C;AAC7D,QAAMC,WAAW,GAAG,EAApB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUL,UAAU,GAAGD,YAAvB,CAArB,EAA2DI,CAAC,EAA5D,EAAgE;AAC9DD,IAAAA,WAAW,CAACI,IAAZ,CAAiBH,CAAjB;AACD;;AAED,sBACE;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACGD,WAAW,CAACK,GAAZ,CAAgBC,MAAM,iBACrB;AAAiB,QAAA,SAAS,EAAC,WAA3B;AAAA,+BACE;AAAG,UAAA,OAAO,EAAE,MAAMP,QAAQ,CAACO,MAAD,CAA1B;AAAoC,UAAA,IAAI,EAAC,IAAzC;AAA8C,UAAA,SAAS,EAAC,WAAxD;AAAA,oBACGA;AADH;AAAA;AAAA;AAAA;AAAA;AADF,SAASA,MAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CApBD;;KAAMV,U;AAsBN,eAAeA,UAAf","sourcesContent":["// import React, { useState } from \"react\";\n\n// function usePagination(items, itemsPerPage) {\n//   const [currentPage, setCurrentPage] = useState(1);\n  \n//   const maxPage = Math.ceil(items.length / itemsPerPage);\n\n//   function currentData() {\n//     const begin = (currentPage - 1) * itemsPerPage;\n//     const end = begin + itemsPerPage;\n//     return items.slice(begin, end);\n//   }\n\n//   function next() {\n//     setCurrentPage(currentPage => Math.min(currentPage + 1, maxPage));\n//   }\n\n//   function prev() {\n//     setCurrentPage(currentPage => Math.max(currentPage - 1, 1));\n//   }\n\n//   function jump(page) {\n//     const pageNumber = Math.max(1, page);\n//     setCurrentPage(currentPage => Math.min(pageNumber, maxPage));\n//   }\n\n//   return { next, prev, jump, currentData, currentPage, maxPage };\n// }\n\n// export default usePagination;\n\n\nimport React from 'react';\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <a onClick={() => paginate(number)} href='!#' className='page-link'>\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}