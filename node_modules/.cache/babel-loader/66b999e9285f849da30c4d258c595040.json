{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/test-api/src/Components/App.jsx\";\n// ============== importing necessary modules==============\nimport React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport { PagingInfo, ResultsPerPage, Paging, SearchProvider, Results, SearchBox, Sorting } from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\"; // ============== retrieving credentials from my account ==============\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst connector = new AppSearchAPIConnector({\n  searchKey: \"search-j2upnixcxa1k28efrs8sugrv\",\n  engineName: \"play-search\",\n  endpointBase: \"https://play-search.ent.us-central1.gcp.cloud.es.io\",\n  cacheResponses: false\n}); // ============== setting configurations for connection and searches ==============\n\nconst config = {\n  apiConnector: connector,\n  //Search by play names and entries\n  searchQuery: {\n    search_fields: {\n      play_name: {},\n      text_entry: {}\n    },\n    //Results display: name of the play, its speaker, text entry, and speech number.\n    result_fields: {\n      play_name: {\n        // A snippet means that matching search terms will be highlighted via <em> tags.\n        snippet: {\n          size: 35,\n          // Only 75 characters.\n          fallback: true // Fallback to a \"raw\" result.\n\n        }\n      },\n      speaker: {\n        snippet: {\n          size: 50,\n          fallback: true\n        }\n      },\n      text_entry: {\n        snippet: {\n          size: 70,\n          fallback: true\n        }\n      }\n    }\n  }\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(SearchProvider, {\n    config: config,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"Shakespeare Work Library\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        header: /*#__PURE__*/_jsxDEV(SearchBox, {\n          inputProps: {\n            placeholder: \"type a character name or a text line\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this),\n        bodyContent: /*#__PURE__*/_jsxDEV(Results, {\n          titleField: \"play_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 23\n        }, this),\n        bodyHeader: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(PagingInfo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Sorting, {\n            label: \"Sort by\",\n            sortOptions: [{\n              name: \"Relevance\",\n              value: \"\",\n              direction: \"\"\n            }, {\n              name: \"Name\",\n              value: \"name\",\n              direction: \"asc\"\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(ResultsPerPage, {\n            options: [5, 10, 20]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true),\n        bodyFooter: /*#__PURE__*/_jsxDEV(Paging, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/test-api/src/Components/App.jsx"],"names":["React","AppSearchAPIConnector","PagingInfo","ResultsPerPage","Paging","SearchProvider","Results","SearchBox","Sorting","Layout","connector","searchKey","engineName","endpointBase","cacheResponses","config","apiConnector","searchQuery","search_fields","play_name","text_entry","result_fields","snippet","size","fallback","speaker","App","placeholder","name","value","direction"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,SACIC,UADJ,EAEIC,cAFJ,EAGIC,MAHJ,EAIIC,cAJJ,EAKIC,OALJ,EAMIC,SANJ,EAOIC,OAPJ,QAQO,0BARP;AASA,SAAQC,MAAR,QAAqB,gCAArB;AACA,OAAO,sDAAP,C,CAGA;;;;AACA,MAAMC,SAAS,GAAG,IAAIT,qBAAJ,CAA0B;AAC1CU,EAAAA,SAAS,EAAE,iCAD+B;AAE1CC,EAAAA,UAAU,EAAE,aAF8B;AAG1CC,EAAAA,YAAY,EAAE,qDAH4B;AAI1CC,EAAAA,cAAc,EAAE;AAJ0B,CAA1B,CAAlB,C,CAOA;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,YAAY,EAAEN,SADH;AAGX;AACAO,EAAAA,WAAW,EAAE;AACXC,IAAAA,aAAa,EAAE;AACbC,MAAAA,SAAS,EAAE,EADE;AAEbC,MAAAA,UAAU,EAAE;AAFC,KADJ;AAKT;AACAC,IAAAA,aAAa,EAAE;AACXF,MAAAA,SAAS,EAAE;AACT;AACEG,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,EADD;AACK;AACVC,UAAAA,QAAQ,EAAE,IAFL,CAEU;;AAFV;AAFF,OADA;AAQXC,MAAAA,OAAO,EAAE;AACLH,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,EADD;AAELC,UAAAA,QAAQ,EAAE;AAFL;AADJ,OARE;AAcXJ,MAAAA,UAAU,EAAE;AACRE,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,EADD;AAELC,UAAAA,QAAQ,EAAE;AAFL;AADD;AAdD;AANN;AAJF,CAAf;;AAkCA,SAASE,GAAT,GAAe;AACX,sBACI,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEX,MAAxB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEI,QAAC,MAAD;AACI,QAAA,MAAM,eACN,QAAC,SAAD;AACE,UAAA,UAAU,EAAE;AAAEY,YAAAA,WAAW,EAAE;AAAf;AADd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAKI,QAAA,WAAW,eACT,QAAC,OAAD;AAAS,UAAA,UAAU,EAAG;AAAtB;AAAA;AAAA;AAAA;AAAA,gBANN;AAOQ,QAAA,UAAU,eACV;AAAA,kCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,OAAD;AACV,YAAA,KAAK,EAAE,SADG;AAEV,YAAA,WAAW,EAAE,CACX;AACEC,cAAAA,IAAI,EAAE,WADR;AAEEC,cAAAA,KAAK,EAAE,EAFT;AAGEC,cAAAA,SAAS,EAAE;AAHb,aADW,EAMX;AACEF,cAAAA,IAAI,EAAE,MADR;AAEEC,cAAAA,KAAK,EAAE,MAFT;AAGEC,cAAAA,SAAS,EAAE;AAHb,aANW;AAFH;AAAA;AAAA;AAAA;AAAA,kBAFF,eAiBE,QAAC,cAAD;AAAgB,YAAA,OAAO,EAAI,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA,wBARR;AA4BQ,QAAA,UAAU,eAAE,QAAE,MAAF;AAAA;AAAA;AAAA;AAAA;AA5BpB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH;;KAtCQJ,G;AAuCT,eAAeA,GAAf","sourcesContent":["// ============== importing necessary modules==============\n\nimport React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport {\n    PagingInfo,\n    ResultsPerPage,\n    Paging,\n    SearchProvider,\n    Results,\n    SearchBox,\n    Sorting\n} from \"@elastic/react-search-ui\";\nimport {Layout} from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\n\n// ============== retrieving credentials from my account ==============\nconst connector = new AppSearchAPIConnector({\n  searchKey: \"search-j2upnixcxa1k28efrs8sugrv\", \n  engineName: \"play-search\", \n  endpointBase: \"https://play-search.ent.us-central1.gcp.cloud.es.io\", \n  cacheResponses: false});\n\n\n// ============== setting configurations for connection and searches ==============\n\nconst config = {\n    apiConnector: connector,\n\n    //Search by play names and entries\n    searchQuery: {\n      search_fields: {\n        play_name: {},\n        text_entry: {}\n      },\n        //Results display: name of the play, its speaker, text entry, and speech number.\n        result_fields: {\n            play_name: {\n              // A snippet means that matching search terms will be highlighted via <em> tags.\n                snippet: {\n                    size: 35, // Only 75 characters.\n                    fallback: true // Fallback to a \"raw\" result.\n                }\n            },\n            speaker: {\n                snippet: {\n                    size: 50,\n                    fallback: true\n                }\n            },\n            text_entry: {\n                snippet: {\n                    size: 70,\n                    fallback: true\n                }\n            }\n        }\n    }\n};\n\nfunction App() {\n    return (\n        <SearchProvider config={config}>\n            <div className=\"App\">\n              <h1 className=\"heading\">Shakespeare Work Library</h1>\n                <Layout\n                    header={\n                    <SearchBox \n                      inputProps={{ placeholder: \"type a character name or a text line\"}}\n                    />}\n                    bodyContent={\n                      <Results titleField = \"play_name\"/>}\n                        bodyHeader={\n                        <> \n                          <PagingInfo/> \n                          <Sorting\n                label={\"Sort by\"}\n                sortOptions={[\n                  {\n                    name: \"Relevance\",\n                    value: \"\",\n                    direction: \"\"\n                  },\n                  {\n                    name: \"Name\",\n                    value: \"name\",\n                    direction: \"asc\"\n                  }\n                ]}\n              />\n                          <ResultsPerPage options = {[5, 10, 20]}/> \n                        </>\n                        }\n                        bodyFooter={< Paging />}\n                />\n            </div>\n        </SearchProvider>\n    );\n}\nexport default App; \n"]},"metadata":{},"sourceType":"module"}