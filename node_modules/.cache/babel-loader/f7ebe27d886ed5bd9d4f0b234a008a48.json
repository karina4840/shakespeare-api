{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"addFilter\", \"className\", \"facets\", \"field\", \"filterType\", \"filters\", \"label\", \"removeFilter\", \"setFilter\", \"view\", \"isFilterable\", \"a11yNotify\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport { MultiCheckboxFacet } from \"@elastic/react-search-ui-views\";\nimport { helpers } from \"@elastic/search-ui\";\nimport { Facet, Filter, FilterType } from \"../types\";\nimport { accentFold } from \"../helpers\";\nimport { withSearch } from \"..\";\nvar markSelectedFacetValuesFromFilters = helpers.markSelectedFacetValuesFromFilters;\nexport var FacetContainer = /*#__PURE__*/function (_Component) {\n  _inherits(FacetContainer, _Component);\n\n  var _super = _createSuper(FacetContainer);\n\n  function FacetContainer(_ref) {\n    var _this;\n\n    var _ref$show = _ref.show,\n        show = _ref$show === void 0 ? 5 : _ref$show;\n\n    _classCallCheck(this, FacetContainer);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickMore\", function (totalOptions) {\n      _this.setState(function (_ref2) {\n        var more = _ref2.more;\n        var visibleOptionsCount = more + 10;\n        var showingAll = visibleOptionsCount >= totalOptions;\n        if (showingAll) visibleOptionsCount = totalOptions;\n\n        _this.props.a11yNotify(\"moreFilters\", {\n          visibleOptionsCount: visibleOptionsCount,\n          showingAll: showingAll\n        });\n\n        return {\n          more: visibleOptionsCount\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFacetSearch\", function (searchTerm) {\n      _this.setState({\n        searchTerm: searchTerm\n      });\n    });\n\n    _this.state = {\n      more: show,\n      searchTerm: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(FacetContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          more = _this$state.more,\n          searchTerm = _this$state.searchTerm;\n\n      var _this$props = this.props,\n          addFilter = _this$props.addFilter,\n          className = _this$props.className,\n          facets = _this$props.facets,\n          field = _this$props.field,\n          filterType = _this$props.filterType,\n          filters = _this$props.filters,\n          label = _this$props.label,\n          removeFilter = _this$props.removeFilter,\n          setFilter = _this$props.setFilter,\n          view = _this$props.view,\n          isFilterable = _this$props.isFilterable,\n          a11yNotify = _this$props.a11yNotify,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      var facetsForField = facets[field];\n      if (!facetsForField) return null; // By using `[0]`, we are currently assuming only 1 facet per field. This will likely be enforced\n      // in future version, so instead of an array, there will only be one facet allowed per field.\n\n      var facet = facetsForField[0];\n      var facetValues = markSelectedFacetValuesFromFilters(facet, filters, field, filterType).data;\n      var selectedValues = facetValues.filter(function (fv) {\n        return fv.selected;\n      }).map(function (fv) {\n        return fv.value;\n      });\n      if (!facetValues.length && !selectedValues.length) return null;\n\n      if (searchTerm.trim()) {\n        facetValues = facetValues.filter(function (option) {\n          return accentFold(option.value).toLowerCase().includes(accentFold(searchTerm).toLowerCase());\n        });\n      }\n\n      var View = view || MultiCheckboxFacet;\n\n      var viewProps = _objectSpread({\n        className: className,\n        label: label,\n        onMoreClick: this.handleClickMore.bind(this, facetValues.length),\n        onRemove: function onRemove(value) {\n          removeFilter(field, value, filterType);\n        },\n        onChange: function onChange(value) {\n          setFilter(field, value, filterType);\n        },\n        onSelect: function onSelect(value) {\n          addFilter(field, value, filterType);\n        },\n        options: facetValues.slice(0, more),\n        showMore: facetValues.length > more,\n        values: selectedValues,\n        showSearch: isFilterable,\n        onSearch: function onSearch(value) {\n          _this2.handleFacetSearch(value);\n        },\n        searchPlaceholder: \"Filter \".concat(field)\n      }, rest);\n\n      return /*#__PURE__*/React.createElement(View, viewProps);\n    }\n  }]);\n\n  return FacetContainer;\n}(Component);\n\n_defineProperty(FacetContainer, \"propTypes\", {\n  // Props\n  className: PropTypes.string,\n  field: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  filterType: FilterType,\n  show: PropTypes.number,\n  view: PropTypes.func,\n  isFilterable: PropTypes.bool,\n  // State\n  filters: PropTypes.arrayOf(Filter).isRequired,\n  facets: PropTypes.objectOf(PropTypes.arrayOf(Facet)).isRequired,\n  // Actions\n  addFilter: PropTypes.func.isRequired,\n  removeFilter: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  a11yNotify: PropTypes.func.isRequired\n});\n\n_defineProperty(FacetContainer, \"defaultProps\", {\n  filterType: \"all\",\n  isFilterable: false\n});\n\nexport default withSearch(function (_ref3) {\n  var filters = _ref3.filters,\n      facets = _ref3.facets,\n      addFilter = _ref3.addFilter,\n      removeFilter = _ref3.removeFilter,\n      setFilter = _ref3.setFilter,\n      a11yNotify = _ref3.a11yNotify;\n  return {\n    filters: filters,\n    facets: facets,\n    addFilter: addFilter,\n    removeFilter: removeFilter,\n    setFilter: setFilter,\n    a11yNotify: a11yNotify\n  };\n})(FacetContainer);","map":{"version":3,"mappings":"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","names":["React","PropTypes","Component","MultiCheckboxFacet","helpers","Facet","Filter","FilterType","accentFold","withSearch","markSelectedFacetValuesFromFilters","FacetContainer","_inherits","show","_classCallCheck","_this","_defineProperty","setState","more","visibleOptionsCount","showingAll","totalOptions","props","a11yNotify","searchTerm","state","_createClass","key","value","addFilter","className","facets","field","filterType","filters","label","removeFilter","setFilter","view","isFilterable","rest","facetsForField","facet","facetValues","data","selectedValues","filter","fv","selected","map","length","trim","option","toLowerCase","includes","View","viewProps","onMoreClick","handleClickMore","bind","onRemove","onChange","onSelect","options","slice","showMore","values","showSearch","onSearch","_this2","handleFacetSearch","searchPlaceholder","string","isRequired","number","func","bool","arrayOf","objectOf"],"sources":["/Users/karina/Main/Study/Web Dev/elasticsearch-api-test/node_modules/@elastic/react-search-ui/src/containers/Facet.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport { MultiCheckboxFacet } from \"@elastic/react-search-ui-views\";\nimport { helpers } from \"@elastic/search-ui\";\n\nimport { Facet, Filter, FilterType } from \"../types\";\nimport { accentFold } from \"../helpers\";\nimport { withSearch } from \"..\";\n\nconst { markSelectedFacetValuesFromFilters } = helpers;\n\nexport class FacetContainer extends Component {\n  static propTypes = {\n    // Props\n    className: PropTypes.string,\n    field: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    filterType: FilterType,\n    show: PropTypes.number,\n    view: PropTypes.func,\n    isFilterable: PropTypes.bool,\n    // State\n    filters: PropTypes.arrayOf(Filter).isRequired,\n    facets: PropTypes.objectOf(PropTypes.arrayOf(Facet)).isRequired,\n    // Actions\n    addFilter: PropTypes.func.isRequired,\n    removeFilter: PropTypes.func.isRequired,\n    setFilter: PropTypes.func.isRequired,\n    a11yNotify: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    filterType: \"all\",\n    isFilterable: false\n  };\n\n  constructor({ show = 5 }) {\n    super();\n    this.state = {\n      more: show,\n      searchTerm: \"\"\n    };\n  }\n\n  handleClickMore = totalOptions => {\n    this.setState(({ more }) => {\n      let visibleOptionsCount = more + 10;\n      const showingAll = visibleOptionsCount >= totalOptions;\n      if (showingAll) visibleOptionsCount = totalOptions;\n\n      this.props.a11yNotify(\"moreFilters\", { visibleOptionsCount, showingAll });\n\n      return { more: visibleOptionsCount };\n    });\n  };\n\n  handleFacetSearch = searchTerm => {\n    this.setState({ searchTerm });\n  };\n\n  render() {\n    const { more, searchTerm } = this.state;\n    const {\n      addFilter,\n      className,\n      facets,\n      field,\n      filterType,\n      filters,\n      label,\n      removeFilter,\n      setFilter,\n      view,\n      isFilterable,\n      // eslint-disable-next-line no-unused-vars\n      a11yNotify,\n      ...rest\n    } = this.props;\n    const facetsForField = facets[field];\n\n    if (!facetsForField) return null;\n\n    // By using `[0]`, we are currently assuming only 1 facet per field. This will likely be enforced\n    // in future version, so instead of an array, there will only be one facet allowed per field.\n    const facet = facetsForField[0];\n\n    let facetValues = markSelectedFacetValuesFromFilters(\n      facet,\n      filters,\n      field,\n      filterType\n    ).data;\n\n    const selectedValues = facetValues\n      .filter(fv => fv.selected)\n      .map(fv => fv.value);\n\n    if (!facetValues.length && !selectedValues.length) return null;\n\n    if (searchTerm.trim()) {\n      facetValues = facetValues.filter(option =>\n        accentFold(option.value)\n          .toLowerCase()\n          .includes(accentFold(searchTerm).toLowerCase())\n      );\n    }\n\n    const View = view || MultiCheckboxFacet;\n\n    const viewProps = {\n      className,\n      label: label,\n      onMoreClick: this.handleClickMore.bind(this, facetValues.length),\n      onRemove: value => {\n        removeFilter(field, value, filterType);\n      },\n      onChange: value => {\n        setFilter(field, value, filterType);\n      },\n      onSelect: value => {\n        addFilter(field, value, filterType);\n      },\n      options: facetValues.slice(0, more),\n      showMore: facetValues.length > more,\n      values: selectedValues,\n      showSearch: isFilterable,\n      onSearch: value => {\n        this.handleFacetSearch(value);\n      },\n      searchPlaceholder: `Filter ${field}`,\n      ...rest\n    };\n\n    return <View {...viewProps} />;\n  }\n}\n\nexport default withSearch(\n  ({ filters, facets, addFilter, removeFilter, setFilter, a11yNotify }) => ({\n    filters,\n    facets,\n    addFilter,\n    removeFilter,\n    setFilter,\n    a11yNotify\n  })\n)(FacetContainer);\n"]},"metadata":{},"sourceType":"module"}