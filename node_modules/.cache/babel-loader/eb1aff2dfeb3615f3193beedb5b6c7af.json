{"ast":null,"code":"import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { FacetValue, FilterValue } from \"./types\";\nimport { appendClassName } from \"./view-helpers\";\n\nfunction BooleanFacet(_ref) {\n  var className = _ref.className,\n      label = _ref.label,\n      options = _ref.options,\n      onChange = _ref.onChange,\n      onRemove = _ref.onRemove,\n      values = _ref.values;\n  var trueOptions = options.find(function (option) {\n    return option.value === \"true\";\n  });\n  if (!trueOptions) return null;\n  var isSelected = values.includes(\"true\");\n\n  var apply = function apply() {\n    return onChange(\"true\");\n  };\n\n  var remove = function remove() {\n    return onRemove(\"true\");\n  };\n\n  var toggle = function toggle() {\n    isSelected ? remove() : apply();\n  };\n\n  return /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: appendClassName(\"sui-facet\", className)\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    className: \"sui-facet__title\"\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-boolean-facet\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-boolean-facet__option-input-wrapper\"\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"sui-boolean-facet__option-label\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-boolean-facet__option-input-wrapper\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"sui-boolean-facet__checkbox\",\n    type: \"checkbox\",\n    onChange: toggle,\n    checked: isSelected\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sui-boolean-facet__input-text\"\n  }, label)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sui-boolean-facet__option-count\"\n  }, trueOptions.count)))));\n}\n\nBooleanFacet.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(FacetValue).isRequired,\n  values: PropTypes.arrayOf(FilterValue).isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default BooleanFacet;","map":{"version":3,"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,SAAxC;AACA,SAASC,eAAT,QAAgC,gBAAhC;;AAEA,SAASC,YAAT,OAOG;AAAA,MANDC,SAMC,QANDA,SAMC;AAAA,MALDC,KAKC,QALDA,KAKC;AAAA,MAJDC,OAIC,QAJDA,OAIC;AAAA,MAHDC,QAGC,QAHDA,QAGC;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MADDC,MACC,QADDA,MACC;AACD,MAAMC,WAAW,GAAGJ,OAAO,CAACK,IAARL,CAAa,kBAAM;AAAA,WAAIM,MAAM,CAACC,KAAPD,KAAiB,MAArB;AAAnB,IAApB;AACA,MAAI,CAACF,WAAL,EAAkB,OAAO,IAAP;AAClB,MAAMI,UAAU,GAAGL,MAAM,CAACM,QAAPN,CAAgB,MAAhBA,CAAnB;;AAEA,MAAMO,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAMT,QAAQ,CAAC,MAAD,CAAd;AAAd;;AACA,MAAMU,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMT,QAAQ,CAAC,MAAD,CAAd;AAAf;;AACA,MAAMU,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBJ,cAAU,GAAGG,MAAM,EAAT,GAAcD,KAAK,EAA7BF;AADF;;AAIA,sBACEf;AAAUK,aAAS,EAAEF,eAAe,CAAC,WAAD,EAAcE,SAAd;AAApC,kBACEL;AAAQK,aAAS,EAAC;AAAlB,KAAsCC,KAAtC,CADF,eAEEN;AAAKK,aAAS,EAAC;AAAf,kBACEL;AAAKK,aAAS,EAAE;AAAhB,kBACEL;AAAOK,aAAS,EAAC;AAAjB,kBACEL;AAAKK,aAAS,EAAC;AAAf,kBACEL;AACEK,aAAS,EAAC,6BADZ;AAEEe,QAAI,EAAC,UAFP;AAGEZ,YAAQ,EAAEW,MAHZ;AAIEE,WAAO,EAAEN;AAJX,IADF,eAOEf;AAAMK,aAAS,EAAC;AAAhB,KAAiDC,KAAjD,CAPF,CADF,eAUEN;AAAMK,aAAS,EAAC;AAAhB,KACGM,WAAW,CAACW,KADf,CAVF,CADF,CADF,CAFF,CADF;AAuBD;;AAEDlB,YAAY,CAACmB,SAAbnB,GAAyB;AACvBC,WAAS,EAAEN,SAAS,CAACyB,MADE;AAEvBlB,OAAK,EAAEP,SAAS,CAACyB,MAAVzB,CAAiB0B,UAFD;AAGvBhB,UAAQ,EAAEV,SAAS,CAAC2B,IAAV3B,CAAe0B,UAHF;AAIvBlB,SAAO,EAAER,SAAS,CAAC4B,OAAV5B,CAAkBE,UAAlBF,EAA8B0B,UAJhB;AAKvBf,QAAM,EAAEX,SAAS,CAAC4B,OAAV5B,CAAkBG,WAAlBH,EAA+B0B,UALhB;AAMvBjB,UAAQ,EAAET,SAAS,CAAC2B,IAAV3B,CAAe0B;AANF,CAAzBrB;AASA,eAAeA,YAAf","names":["PropTypes","React","FacetValue","FilterValue","appendClassName","BooleanFacet","className","label","options","onChange","onRemove","values","trueOptions","find","option","value","isSelected","includes","apply","remove","toggle","type","checked","count","propTypes","string","isRequired","func","arrayOf"],"sources":["/Users/karina/Main/Study/Web Dev/elasticsearch-test-api/node_modules/@elastic/react-search-ui-views/src/BooleanFacet.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { FacetValue, FilterValue } from \"./types\";\nimport { appendClassName } from \"./view-helpers\";\n\nfunction BooleanFacet({\n  className,\n  label,\n  options,\n  onChange,\n  onRemove,\n  values\n}) {\n  const trueOptions = options.find(option => option.value === \"true\");\n  if (!trueOptions) return null;\n  const isSelected = values.includes(\"true\");\n\n  const apply = () => onChange(\"true\");\n  const remove = () => onRemove(\"true\");\n  const toggle = () => {\n    isSelected ? remove() : apply();\n  };\n\n  return (\n    <fieldset className={appendClassName(\"sui-facet\", className)}>\n      <legend className=\"sui-facet__title\">{label}</legend>\n      <div className=\"sui-boolean-facet\">\n        <div className={\"sui-boolean-facet__option-input-wrapper\"}>\n          <label className=\"sui-boolean-facet__option-label\">\n            <div className=\"sui-boolean-facet__option-input-wrapper\">\n              <input\n                className=\"sui-boolean-facet__checkbox\"\n                type=\"checkbox\"\n                onChange={toggle}\n                checked={isSelected}\n              />\n              <span className=\"sui-boolean-facet__input-text\">{label}</span>\n            </div>\n            <span className=\"sui-boolean-facet__option-count\">\n              {trueOptions.count}\n            </span>\n          </label>\n        </div>\n      </div>\n    </fieldset>\n  );\n}\n\nBooleanFacet.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(FacetValue).isRequired,\n  values: PropTypes.arrayOf(FilterValue).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default BooleanFacet;\n"]},"metadata":{},"sourceType":"module"}