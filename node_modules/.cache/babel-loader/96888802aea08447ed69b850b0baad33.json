{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"position\", \"top\", \"transform\", \"maxWidth\"],\n    _excluded2 = [\"className\", \"onChange\", \"options\", \"value\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport { appendClassName } from \"./view-helpers\";\nvar setDefaultStyle = {\n  option: function option() {\n    return {};\n  },\n  control: function control() {\n    return {};\n  },\n  dropdownIndicator: function dropdownIndicator() {\n    return {};\n  },\n  indicatorSeparator: function indicatorSeparator() {\n    return {};\n  },\n  singleValue: function singleValue(provided) {\n    // Pulling out CSS that we don't want\n    // eslint-disable-next-line no-unused-vars\n    var position = provided.position,\n        top = provided.top,\n        transform = provided.transform,\n        maxWidth = provided.maxWidth,\n        rest = _objectWithoutProperties(provided, _excluded);\n\n    return _objectSpread(_objectSpread({}, rest), {}, {\n      lineHeight: 1,\n      marginRight: 0\n    });\n  },\n  valueContainer: function valueContainer(provided) {\n    return _objectSpread(_objectSpread({}, provided), {}, {\n      paddingRight: 0\n    });\n  }\n};\n\nvar wrapOption = function wrapOption(option) {\n  return {\n    label: option,\n    value: option\n  };\n};\n\nfunction ResultsPerPage(_ref) {\n  var className = _ref.className,\n      _onChange = _ref.onChange,\n      options = _ref.options,\n      selectedValue = _ref.value,\n      rest = _objectWithoutProperties(_ref, _excluded2);\n\n  var selectedOption = null;\n\n  if (selectedValue) {\n    selectedOption = wrapOption(selectedValue);\n    if (!options.includes(selectedValue)) options = [selectedValue].concat(_toConsumableArray(options));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: appendClassName(\"sui-results-per-page\", className)\n  }, rest), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-results-per-page__label\"\n  }, \"Show\"), /*#__PURE__*/React.createElement(Select, {\n    className: \"sui-select sui-select--inline\",\n    classNamePrefix: \"sui-select\",\n    value: selectedOption,\n    onChange: function onChange(o) {\n      return _onChange(o.value);\n    },\n    options: options.map(wrapOption),\n    isSearchable: false,\n    styles: setDefaultStyle\n  }));\n}\n\nResultsPerPage.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.number).isRequired,\n  className: PropTypes.string,\n  value: PropTypes.number\n};\nexport default ResultsPerPage;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,eAAT,QAAgC,gBAAhC;AAEA,IAAMC,eAAe,GAAG;AACtBC,QAAM,EAAE;AAAA,WAAO,EAAP;AADc;AAEtBC,SAAO,EAAE;AAAA,WAAO,EAAP;AAFa;AAGtBC,mBAAiB,EAAE;AAAA,WAAO,EAAP;AAHG;AAItBC,oBAAkB,EAAE;AAAA,WAAO,EAAP;AAJE;AAKtBC,aAAW,EAAE,+BAAY;AACvB;AACA;AACA,QAAQC,QAAR,GAAwDC,QAAxD,CAAQD,QAAR;AAAA,QAAkBE,GAAlB,GAAwDD,QAAxD,CAAkBC,GAAlB;AAAA,QAAuBC,SAAvB,GAAwDF,QAAxD,CAAuBE,SAAvB;AAAA,QAAkCC,QAAlC,GAAwDH,QAAxD,CAAkCG,QAAlC;AAAA,QAA+CC,IAA/C,4BAAwDJ,QAAxD;;AACA,2CAAYI,IAAZ;AAAkBC,gBAAU,EAAE,CAA9B;AAAiCC,iBAAW,EAAE;AAA9C;AAToB;AAWtBC,gBAAc,EAAE,kCAAQ;AAAA,2CAAUP,QAAV;AAAoBQ,kBAAY,EAAE;AAAlC;AAAA;AAXF,CAAxB;;AAcA,IAAMC,UAAU,GAAG,SAAbA,UAAa,SAAM;AAAA,SAAK;AAAEC,SAAK,EAAEhB,MAAT;AAAiBiB,SAAK,EAAEjB;AAAxB,GAAL;AAAzB;;AAEA,SAASkB,cAAT,OAMG;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDC,SAIC,QAJDA,QAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFMC,aAEN,QAFDL,KAEC;AAAA,MADEP,IACF;;AACD,MAAIa,cAAc,GAAG,IAArB;;AAEA,MAAID,aAAJ,EAAmB;AACjBC,kBAAc,GAAGR,UAAU,CAACO,aAAD,CAA3BC;AAEA,QAAI,CAACF,OAAO,CAACG,QAARH,CAAiBC,aAAjBD,CAAL,EAAsCA,OAAO,IAAIC,aAAJ,4BAAsBD,OAAtB,EAAPA;AACvC;;AAED,sBACEzB;AACEuB,aAAS,EAAErB,eAAe,CAAC,sBAAD,EAAyBqB,SAAzB;AAD5B,KAEMT,IAFN,gBAIEd;AAAKuB,aAAS,EAAC;AAAf,YAJF,eAKEvB,oBAACC,MAAD;AACEsB,aAAS,EAAC,+BADZ;AAEEM,mBAAe,EAAC,YAFlB;AAGER,SAAK,EAAEM,cAHT;AAIEH,YAAQ,EAAE,qBAAC;AAAA,aAAIA,SAAQ,CAACM,CAAC,CAACT,KAAH,CAAZ;AAJb;AAKEI,WAAO,EAAEA,OAAO,CAACM,GAARN,CAAYN,UAAZM,CALX;AAMEO,gBAAY,EAAE,KANhB;AAOEC,UAAM,EAAE9B;AAPV,IALF,CADF;AAiBD;;AAEDmB,cAAc,CAACY,SAAfZ,GAA2B;AACzBE,UAAQ,EAAEzB,SAAS,CAACoC,IAAVpC,CAAeqC,UADA;AAEzBX,SAAO,EAAE1B,SAAS,CAACsC,OAAVtC,CAAkBA,SAAS,CAACuC,MAA5BvC,EAAoCqC,UAFpB;AAGzBb,WAAS,EAAExB,SAAS,CAACwC,MAHI;AAIzBlB,OAAK,EAAEtB,SAAS,CAACuC;AAJQ,CAA3BhB;AAOA,eAAeA,cAAf","names":["PropTypes","React","Select","appendClassName","setDefaultStyle","option","control","dropdownIndicator","indicatorSeparator","singleValue","position","provided","top","transform","maxWidth","rest","lineHeight","marginRight","valueContainer","paddingRight","wrapOption","label","value","ResultsPerPage","className","onChange","options","selectedValue","selectedOption","includes","classNamePrefix","o","map","isSearchable","styles","propTypes","func","isRequired","arrayOf","number","string"],"sources":["/Users/karina/Main/Study/Web Dev/test-api/node_modules/@elastic/react-search-ui-views/src/ResultsPerPage.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Select from \"react-select\";\n\nimport { appendClassName } from \"./view-helpers\";\n\nconst setDefaultStyle = {\n  option: () => ({}),\n  control: () => ({}),\n  dropdownIndicator: () => ({}),\n  indicatorSeparator: () => ({}),\n  singleValue: provided => {\n    // Pulling out CSS that we don't want\n    // eslint-disable-next-line no-unused-vars\n    const { position, top, transform, maxWidth, ...rest } = provided;\n    return { ...rest, lineHeight: 1, marginRight: 0 };\n  },\n  valueContainer: provided => ({ ...provided, paddingRight: 0 })\n};\n\nconst wrapOption = option => ({ label: option, value: option });\n\nfunction ResultsPerPage({\n  className,\n  onChange,\n  options,\n  value: selectedValue,\n  ...rest\n}) {\n  let selectedOption = null;\n\n  if (selectedValue) {\n    selectedOption = wrapOption(selectedValue);\n\n    if (!options.includes(selectedValue)) options = [selectedValue, ...options];\n  }\n\n  return (\n    <div\n      className={appendClassName(\"sui-results-per-page\", className)}\n      {...rest}\n    >\n      <div className=\"sui-results-per-page__label\">Show</div>\n      <Select\n        className=\"sui-select sui-select--inline\"\n        classNamePrefix=\"sui-select\"\n        value={selectedOption}\n        onChange={o => onChange(o.value)}\n        options={options.map(wrapOption)}\n        isSearchable={false}\n        styles={setDefaultStyle}\n      />\n    </div>\n  );\n}\n\nResultsPerPage.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.number).isRequired,\n  className: PropTypes.string,\n  value: PropTypes.number\n};\n\nexport default ResultsPerPage;\n"]},"metadata":{},"sourceType":"module"}