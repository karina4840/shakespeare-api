{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n/**\n * Set the current search term\n *\n * Will trigger new search\n *\n * @param searchTerm String\n * @param options Object Additional objects\n * @param autocompleteMinimumCharacters Number Only trigger autocomplete if\n * searchTerm has at least this number of characters\n * @param options.autocompleteResults Boolean Fetch autocomplete\n * results?\n * @param options.refresh Boolean Refresh search results?\n * @param options.debounce Length to debounce API calls\n */\n\n\nexport default function setSearchTerm(searchTerm) {\n  var _console;\n\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$autocompleteMini = _ref.autocompleteMinimumCharacters,\n      autocompleteMinimumCharacters = _ref$autocompleteMini === void 0 ? 0 : _ref$autocompleteMini,\n      _ref$autocompleteResu = _ref.autocompleteResults,\n      autocompleteResults = _ref$autocompleteResu === void 0 ? false : _ref$autocompleteResu,\n      _ref$autocompleteSugg = _ref.autocompleteSuggestions,\n      autocompleteSuggestions = _ref$autocompleteSugg === void 0 ? false : _ref$autocompleteSugg,\n      _ref$shouldClearFilte = _ref.shouldClearFilters,\n      shouldClearFilters = _ref$shouldClearFilte === void 0 ? true : _ref$shouldClearFilte,\n      _ref$refresh = _ref.refresh,\n      refresh = _ref$refresh === void 0 ? true : _ref$refresh,\n      _ref$debounce = _ref.debounce,\n      debounce = _ref$debounce === void 0 ? 0 : _ref$debounce;\n\n  if (this.debug) // eslint-disable-next-line no-console\n    (_console = console).log.apply(_console, [\"Search UI: Action\", \"setSearchTerm\"].concat(Array.prototype.slice.call(arguments)));\n\n  this._setState({\n    searchTerm: searchTerm\n  });\n\n  if (refresh) {\n    this.debounceManager.runWithDebounce(debounce, \"_updateSearchResults\", this._updateSearchResults, _objectSpread({\n      current: 1\n    }, shouldClearFilters && {\n      filters: []\n    }));\n  }\n\n  if ((autocompleteResults || autocompleteSuggestions) && searchTerm.length >= autocompleteMinimumCharacters) {\n    this.debounceManager.runWithDebounce(debounce, \"_updateAutocomplete\", this._updateAutocomplete, searchTerm, {\n      autocompleteResults: autocompleteResults,\n      autocompleteSuggestions: autocompleteSuggestions\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASA,aAAT,CACbC,UADa,EAUb;AAAA;;AAAA,iFADI,EACJ;AAAA,mCAPEC,6BAOF;AAAA,MAPEA,6BAOF,sCAPkC,CAOlC;AAAA,mCANEC,mBAMF;AAAA,MANEA,mBAMF,sCANwB,KAMxB;AAAA,mCALEC,uBAKF;AAAA,MALEA,uBAKF,sCAL4B,KAK5B;AAAA,mCAJEC,kBAIF;AAAA,MAJEA,kBAIF,sCAJuB,IAIvB;AAAA,0BAHEC,OAGF;AAAA,MAHEA,OAGF,6BAHY,IAGZ;AAAA,2BAFEC,QAEF;AAAA,MAFEA,QAEF,8BAFa,CAEb;;AACA,MAAI,KAAKC,KAAT,EACE;AACA,yBAAQC,GAAR,kBAAY,mBAAZ,EAAiC,eAAjC,oCAAqDC,SAArD;;AAEF,OAAKC,SAAL,CAAe;AAAEV,cAAU,EAAVA;AAAF,GAAf;;AAEA,MAAIK,OAAJ,EAAa;AACX,SAAKM,eAAL,CAAqBC,eAArB,CACEN,QADF,EAEE,sBAFF,EAGE,KAAKO,oBAHP;AAKIC,aAAO,EAAE;AALb,OAMQV,kBAAkB,IAAI;AAAEW,aAAO,EAAE;AAAX,KAN9B;AASD;;AAED,MACE,CAACb,mBAAmB,IAAIC,uBAAxB,KACAH,UAAU,CAACgB,MAAXhB,IAAqBC,6BAFvB,EAGE;AACA,SAAKU,eAAL,CAAqBC,eAArB,CACEN,QADF,EAEE,qBAFF,EAGE,KAAKW,mBAHP,EAIEjB,UAJF,EAKE;AACEE,yBAAmB,EAAnBA,mBADF;AAEEC,6BAAuB,EAAvBA;AAFF,KALF;AAUD;AACF","names":["setSearchTerm","searchTerm","autocompleteMinimumCharacters","autocompleteResults","autocompleteSuggestions","shouldClearFilters","refresh","debounce","debug","log","arguments","_setState","debounceManager","runWithDebounce","_updateSearchResults","current","filters","length","_updateAutocomplete"],"sources":["/Users/karina/Main/Study/Web Dev/7. Complited Projects/elasticsearch-test-api/node_modules/@elastic/search-ui/src/actions/setSearchTerm.js"],"sourcesContent":["/**\n * Set the current search term\n *\n * Will trigger new search\n *\n * @param searchTerm String\n * @param options Object Additional objects\n * @param autocompleteMinimumCharacters Number Only trigger autocomplete if\n * searchTerm has at least this number of characters\n * @param options.autocompleteResults Boolean Fetch autocomplete\n * results?\n * @param options.refresh Boolean Refresh search results?\n * @param options.debounce Length to debounce API calls\n */\nexport default function setSearchTerm(\n  searchTerm,\n  {\n    autocompleteMinimumCharacters = 0,\n    autocompleteResults = false,\n    autocompleteSuggestions = false,\n    shouldClearFilters = true,\n    refresh = true,\n    debounce = 0\n  } = {}\n) {\n  if (this.debug)\n    // eslint-disable-next-line no-console\n    console.log(\"Search UI: Action\", \"setSearchTerm\", ...arguments);\n\n  this._setState({ searchTerm });\n\n  if (refresh) {\n    this.debounceManager.runWithDebounce(\n      debounce,\n      \"_updateSearchResults\",\n      this._updateSearchResults,\n      {\n        current: 1,\n        ...(shouldClearFilters && { filters: [] })\n      }\n    );\n  }\n\n  if (\n    (autocompleteResults || autocompleteSuggestions) &&\n    searchTerm.length >= autocompleteMinimumCharacters\n  ) {\n    this.debounceManager.runWithDebounce(\n      debounce,\n      \"_updateAutocomplete\",\n      this._updateAutocomplete,\n      searchTerm,\n      {\n        autocompleteResults,\n        autocompleteSuggestions\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}