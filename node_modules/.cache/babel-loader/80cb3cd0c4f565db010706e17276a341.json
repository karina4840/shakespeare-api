{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBox from './SearchBox';\nimport Pagination from '@mui/material/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // ============ setting the initial states for items and search ============\n  const [items, setItems] = useState([]);\n  const [search, setSearch] = useState(\"\"); // ============ fetching the data from API and store values ============\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search?size=100');\n    const itemsObj = await data.json();\n    const items = itemsObj.hits.hits; // ============ store just fetched items in an array ============   \n\n    setItems(items);\n  }; // ============ filtering the plays according to the input ============\n\n\n  const filteredPlays = items.filter(play => {\n    return play._source.text_entry.toLowerCase().includes(search.toLowerCase());\n  }); // pagination\n\n  const [page, setPage] = useState(1);\n  const perPage = 10;\n  return !items.length ?\n  /*#__PURE__*/\n  // renders a loading page while fetching data       \n  _jsxDEV(\"div\", {\n    className: \"loading-page\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"loading-page-text\",\n      children: \" Loading, please wait... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 36\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 6\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Shakespeare Work Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-body\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: event => setSearch(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        plays: filteredPlays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        count: 10,\n        page: page,\n        onChange: handleChange,\n        variant: \"outlined\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"8W8vcRsKrWG1HpIO0wEAgCpsVXY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx"],"names":["React","useState","useEffect","CardList","SearchBox","Pagination","App","items","setItems","search","setSearch","fetchItems","data","fetch","itemsObj","json","hits","filteredPlays","filter","play","_source","text_entry","toLowerCase","includes","page","setPage","perPage","length","event","target","value","handleChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC,CAJW,CAOX;;AACAC,EAAAA,SAAS,CAAC,MAAM;AAACS,IAAAA,UAAU;AAAG,GAArB,EAAuB,EAAvB,CAAT;;AACA,QAAMA,UAAU,GAAG,YAAW;AAC1B,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,gEAAD,CAAxB;AACA,UAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAvB;AACA,UAAMR,KAAK,GAAGO,QAAQ,CAACE,IAAT,CAAcA,IAA5B,CAH0B,CAK1B;;AACAR,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAPD,CATW,CAmBX;;;AACA,QAAMU,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAcC,IAAD,IAAU;AACzC,WAAOA,IAAI,CAACC,OAAL,CAAaC,UAAb,CAAwBC,WAAxB,GAAsCC,QAAtC,CAA+Cd,MAAM,CAACa,WAAP,EAA/C,CAAP;AACH,GAFqB,CAAtB,CApBW,CAyBX;;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAMyB,OAAO,GAAG,EAAhB;AAIA,SAAO,CAACnB,KAAK,CAACoB,MAAP;AAAA;AAEP;AACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BAA8B;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,UAHM,gBAMH;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,YAAY,EAAGC,KAAD,IAAWlB,SAAS,CAACkB,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA7C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEb;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,UAAD;AACA,QAAA,KAAK,EAAE,EADP;AAEA,QAAA,IAAI,EAAEO,IAFN;AAGA,QAAA,QAAQ,EAAEO,YAHV;AAIA,QAAA,OAAO,EAAC,UAJR;AAKA,QAAA,KAAK,EAAC;AALN;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ;AAsBH;;GArDQzB,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBox from './SearchBox';\nimport Pagination from '@mui/material/Pagination';\n\nfunction App() {\n\n    // ============ setting the initial states for items and search ============\n    const [items, setItems] = useState([]);\n    const [search, setSearch] = useState(\"\");\n\n\n    // ============ fetching the data from API and store values ============\n    useEffect(() => {fetchItems()}, []);\n    const fetchItems = async() => {\n        const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search?size=100');\n        const itemsObj = await data.json();\n        const items = itemsObj.hits.hits;\n    \n        // ============ store just fetched items in an array ============   \n        setItems(items);\n    }\n\n\n    // ============ filtering the plays according to the input ============\n    const filteredPlays = items.filter((play) => {\n        return play._source.text_entry.toLowerCase().includes(search.toLowerCase());\n    });\n \n\n    // pagination\n    const [page, setPage] = useState(1);\n    const perPage = 10;\n\n\n    \n    return !items.length ? ( \n\n    // renders a loading page while fetching data       \n     <div className=\"loading-page\"><h1 className=\"loading-page-text\"> Loading, please wait... </h1></div> \n     ) : ( \n\n        <div className=\"App\">\n            <h1 className=\"heading\">Shakespeare Work Library</h1>\n            <div className=\"app-body\">\n                <SearchBox searchChange={(event) => setSearch(event.target.value)}/>\n                <CardList plays={filteredPlays}/>\n                <Pagination \n                count={10}\n                page={page}\n                onChange={handleChange}\n                variant=\"outlined\" \n                color=\"primary\"\n\n                />\n            </div>\n        </div> \n    );\n}\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}