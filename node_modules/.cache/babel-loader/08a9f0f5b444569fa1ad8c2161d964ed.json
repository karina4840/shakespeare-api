{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const fetchItems = async () => {\n    const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search');\n    const items = await data.json();\n    console.log(items);\n    setItems();\n  };\n\n  useEffect(() => {\n    axios.get(\"\").then(res => {\n      setCountries(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  useEffect(() => {\n    setFilteredCountries(countries.filter(country => country.name.toLowerCase().includes(search.toLowerCase())));\n  }, [search, countries]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Countries Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search Countries\",\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), filteredCountries.map((country, idx) => /*#__PURE__*/_jsxDEV(CountryDetail, { ...country\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5PTDd/I5xDpzg1+5QF4CbUcBRUg=\");\n\n_c = App;\n\nconst CountryDetail = props => {\n  const {\n    name,\n    flag\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: flag,\n        alt: name,\n        style: {\n          width: \"20px\",\n          height: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = CountryDetail;\nexport default App; // function App() {\n//   useEffect(() => {\n//     fetchItems();\n//   }, []);\n//   const [items, setItems] = useState([]);\n//   const searchItems = () => {\n//   }\n// const fetchItems = async () => {\n//   const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search');\n//   const items = await data.json();\n//   console.log(items);\n//   setItems();\n// }\n//     return (\n//           <div className=\"App\">\n//             <h1 className=\"heading\">Shakespeare Work Library</h1>\n//             <div>\n//               <input type=\"text\" placeholder=\"Search for characters or plays\" className=\"inputbox\" />\n//             </div>\n//           </div>\n//     );\n// }\n// export default App; \n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"CountryDetail\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx"],"names":["React","useState","useEffect","axios","App","items","setItems","search","setSearch","searchResults","setSearchResults","fetchItems","data","fetch","json","console","log","get","then","res","setCountries","catch","err","setFilteredCountries","countries","filter","country","name","toLowerCase","includes","e","target","value","filteredCountries","map","idx","CountryDetail","props","flag","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMU,UAAU,GAAG,YAAY;AAC7B,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,uDAAD,CAAxB;AAEA,UAAMR,KAAK,GAAG,MAAMO,IAAI,CAACE,IAAL,EAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACAC,IAAAA,QAAQ;AACT,GAND;;AAWAJ,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFc,GADH,CACO,EADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbC,MAAAA,YAAY,CAACD,GAAG,CAACP,IAAL,CAAZ;AACD,KAJH,EAKGS,KALH,CAKUC,GAAD,IAAS;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAWApB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,oBAAoB,CAClBC,SAAS,CAACC,MAAV,CAAkBC,OAAD,IACfA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCtB,MAAM,CAACqB,WAAP,EAApC,CADF,CADkB,CAApB;AAKD,GANQ,EAMN,CAACrB,MAAD,EAASiB,SAAT,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,kBAFd;AAGE,MAAA,QAAQ,EAAGM,CAAD,IAAOtB,SAAS,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV;AAH5B;AAAA;AAAA;AAAA;AAAA,YAFF,EAQGC,iBAAiB,CAACC,GAAlB,CAAsB,CAACR,OAAD,EAAUS,GAAV,kBACrB,QAAC,aAAD,OAA6BT;AAA7B,OAAoBS,GAApB;AAAA;AAAA;AAAA;AAAA,YADD,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAjDQ/B,G;;KAAAA,G;;AAmDT,MAAMgC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEV,IAAAA,IAAF;AAAQW,IAAAA;AAAR,MAAiBD,KAAvB;AAEA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEC,IAAV;AAAgB,QAAA,GAAG,EAAEX,IAArB;AAA2B,QAAA,KAAK,EAAE;AAAEY,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAAIb;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CAXD;;MAAMS,a;AAaN,eAAehC,GAAf,C,CAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEE;AACA;AAEA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const fetchItems = async () => {\n    const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search');\n\n    const items = await data.json();\n    console.log(items);\n    setItems();\n  }\n\n\n\n\n  useEffect(() => {\n    axios\n      .get(\"\")\n      .then((res) => {\n        setCountries(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    setFilteredCountries(\n      countries.filter((country) =>\n        country.name.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  }, [search, countries]);\n\n  return (\n    <div className=\"App\">\n      <h1>Countries Lists</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search Countries\"\n        onChange={(e) => setSearch(e.target.value)}\n      />\n\n      {filteredCountries.map((country, idx) => (\n        <CountryDetail key={idx} {...country} />\n      ))}\n    </div>\n  );\n}\n\nconst CountryDetail = (props) => {\n  const { name, flag } = props;\n\n  return (\n    <>\n      <p>\n        <img src={flag} alt={name} style={{ width: \"20px\", height: \"20px\" }} />\n      </p>\n      <p>{name}</p>\n    </>\n  );\n};\n\nexport default App; \n\n\n// function App() {\n//   useEffect(() => {\n//     fetchItems();\n//   }, []);\n\n//   const [items, setItems] = useState([]);\n\n//   const searchItems = () => {\n        \n//   }\n\n  // const fetchItems = async () => {\n  //   const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search');\n\n  //   const items = await data.json();\n  //   console.log(items);\n  //   setItems();\n  // }\n\n//     return (\n//           <div className=\"App\">\n//             <h1 className=\"heading\">Shakespeare Work Library</h1>\n//             <div>\n//               <input type=\"text\" placeholder=\"Search for characters or plays\" className=\"inputbox\" />\n              \n//             </div>\n//           </div>\n//     );\n// }\n// export default App; \n"]},"metadata":{},"sourceType":"module"}