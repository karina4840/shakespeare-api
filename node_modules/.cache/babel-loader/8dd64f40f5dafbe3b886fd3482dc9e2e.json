{"ast":null,"code":"import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { FacetValue } from \"./types\";\nimport { getFilterValueDisplay } from \"./view-helpers\";\nimport { appendClassName } from \"./view-helpers\";\n\nfunction SingleLinksFacet(_ref) {\n  var className = _ref.className,\n      label = _ref.label,\n      onRemove = _ref.onRemove,\n      onSelect = _ref.onSelect,\n      options = _ref.options;\n  var value = options.filter(function (o) {\n    return o.selected;\n  }).map(function (o) {\n    return o.value;\n  })[0];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: appendClassName(\"sui-facet\", className)\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-facet__title\"\n  }, label), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"sui-single-option-facet\"\n  }, value && /*#__PURE__*/React.createElement(\"li\", {\n    className: \"sui-single-option-facet__selected\"\n  }, getFilterValueDisplay(value), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sui-single-option-facet__remove\"\n  }, \"(\", /*#__PURE__*/React.createElement(\"a\", {\n    onClick: function onClick(e) {\n      e.preventDefault();\n      onRemove(value);\n    },\n    href: \"/\"\n  }, \"Remove\"), \")\")), !value && options.map(function (option) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"sui-single-option-facet__item\",\n      key: getFilterValueDisplay(option.value)\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"sui-single-option-facet__link\",\n      href: \"/\",\n      onClick: function onClick(e) {\n        e.preventDefault();\n        onSelect(option.value);\n      }\n    }, getFilterValueDisplay(option.value)), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sui-facet__count\"\n    }, option.count));\n  }))));\n}\n\nSingleLinksFacet.propTypes = {\n  label: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(FacetValue).isRequired,\n  className: PropTypes.string\n};\nexport default SingleLinksFacet;","map":{"version":3,"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,SAA3B;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,SAASC,eAAT,QAAgC,gBAAhC;;AAEA,SAASC,gBAAT,OAA6E;AAAA,MAAjDC,SAAiD,QAAjDA,SAAiD;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC3E,MAAMC,KAAK,GAAGD,OAAO,CAACE,MAARF,CAAe,aAAC;AAAA,WAAIG,CAAC,CAACC,QAAN;AAAhB,KAAgCC,GAAhCL,CAAoC,aAAC;AAAA,WAAIG,CAAC,CAACF,KAAN;AAArC,KAAkD,CAAlDD,CAAd;AACA,sBACET;AAAKK,aAAS,EAAEF,eAAe,CAAC,WAAD,EAAcE,SAAd;AAA/B,kBACEL,8CACEA;AAAKK,aAAS,EAAC;AAAf,KAAmCC,KAAnC,CADF,eAEEN;AAAIK,aAAS,EAAC;AAAd,KACGK,KAAK,iBACJV;AAAIK,aAAS,EAAC;AAAd,KACGH,qBAAqB,CAACQ,KAAD,CADxB,EACiC,GADjC,eAEEV;AAAMK,aAAS,EAAC;AAAhB,uBAEEL;AACEe,WAAO,EAAE,oBAAK;AACZC,OAAC,CAACC,cAAFD;AACAT,cAAQ,CAACG,KAAD,CAARH;AAHJ;AAKEW,QAAI,EAAC;AALP,cAFF,MAFF,CAFJ,EAmBG,CAACR,KAAD,IACCD,OAAO,CAACK,GAARL,CAAY,kBAAM;AAAA,wBAChBT;AACEK,eAAS,EAAC,+BADZ;AAEEc,SAAG,EAAEjB,qBAAqB,CAACkB,MAAM,CAACV,KAAR;AAF5B,oBAIEV;AACEK,eAAS,EAAC,+BADZ;AAEEa,UAAI,EAAC,GAFP;AAGEH,aAAO,EAAE,oBAAK;AACZC,SAAC,CAACC,cAAFD;AACAR,gBAAQ,CAACY,MAAM,CAACV,KAAR,CAARF;AACD;AANH,OAQGN,qBAAqB,CAACkB,MAAM,CAACV,KAAR,CARxB,CAJF,EAaO,GAbP,eAcEV;AAAMK,eAAS,EAAC;AAAhB,OAAoCe,MAAM,CAACC,KAA3C,CAdF,CADgB;AAAlB,IApBJ,CAFF,CADF,CADF;AA8CD;;AAEDjB,gBAAgB,CAACkB,SAAjBlB,GAA6B;AAC3BE,OAAK,EAAEP,SAAS,CAACwB,MAAVxB,CAAiByB,UADG;AAE3BjB,UAAQ,EAAER,SAAS,CAAC0B,IAAV1B,CAAeyB,UAFE;AAG3BhB,UAAQ,EAAET,SAAS,CAAC0B,IAAV1B,CAAeyB,UAHE;AAI3Bf,SAAO,EAAEV,SAAS,CAAC2B,OAAV3B,CAAkBE,UAAlBF,EAA8ByB,UAJZ;AAK3BnB,WAAS,EAAEN,SAAS,CAACwB;AALM,CAA7BnB;AAQA,eAAeA,gBAAf","names":["PropTypes","React","FacetValue","getFilterValueDisplay","appendClassName","SingleLinksFacet","className","label","onRemove","onSelect","options","value","filter","o","selected","map","onClick","e","preventDefault","href","key","option","count","propTypes","string","isRequired","func","arrayOf"],"sources":["/Users/karina/Main/Study/Web Dev/elasticsearch-test-api/node_modules/@elastic/react-search-ui-views/src/SingleLinksFacet.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { FacetValue } from \"./types\";\nimport { getFilterValueDisplay } from \"./view-helpers\";\nimport { appendClassName } from \"./view-helpers\";\n\nfunction SingleLinksFacet({ className, label, onRemove, onSelect, options }) {\n  const value = options.filter(o => o.selected).map(o => o.value)[0];\n  return (\n    <div className={appendClassName(\"sui-facet\", className)}>\n      <div>\n        <div className=\"sui-facet__title\">{label}</div>\n        <ul className=\"sui-single-option-facet\">\n          {value && (\n            <li className=\"sui-single-option-facet__selected\">\n              {getFilterValueDisplay(value)}{\" \"}\n              <span className=\"sui-single-option-facet__remove\">\n                (\n                <a\n                  onClick={e => {\n                    e.preventDefault();\n                    onRemove(value);\n                  }}\n                  href=\"/\"\n                >\n                  Remove\n                </a>\n                )\n              </span>\n            </li>\n          )}\n          {!value &&\n            options.map(option => (\n              <li\n                className=\"sui-single-option-facet__item\"\n                key={getFilterValueDisplay(option.value)}\n              >\n                <a\n                  className=\"sui-single-option-facet__link\"\n                  href=\"/\"\n                  onClick={e => {\n                    e.preventDefault();\n                    onSelect(option.value);\n                  }}\n                >\n                  {getFilterValueDisplay(option.value)}\n                </a>{\" \"}\n                <span className=\"sui-facet__count\">{option.count}</span>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nSingleLinksFacet.propTypes = {\n  label: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(FacetValue).isRequired,\n  className: PropTypes.string\n};\n\nexport default SingleLinksFacet;\n"]},"metadata":{},"sourceType":"module"}