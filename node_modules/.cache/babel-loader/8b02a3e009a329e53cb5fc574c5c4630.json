{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/test-api/src/Components/App.jsx\";\nimport React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport { ErrorBoundary, Facet, SearchProvider, SearchBox, Results, PagingInfo, ResultsPerPage, Paging, Sorting, WithSearch } from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\nimport { buildAutocompleteQueryConfig, buildFacetConfigFromConfig, buildSearchOptionsFromConfig, buildSortOptionsFromConfig, getConfig, getFacetFields } from \"./config/config-helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  hostIdentifier,\n  searchKey,\n  endpointBase,\n  engineName\n} = getConfig();\nconst connector = new AppSearchAPIConnector({\n  searchKey: \"search-j2upnixcxa1k28efrs8sugrv\",\n  engineName: \"play-search\",\n  endpointBase: \"https://play-search.ent.us-central1.gcp.cloud.es.io\",\n  cacheResponses: false\n});\nconst config = {\n  searchQuery: {\n    facets: buildFacetConfigFromConfig(),\n    ...buildSearchOptionsFromConfig()\n  },\n  autocompleteQuery: buildAutocompleteQueryConfig(),\n  apiConnector: connector,\n  alwaysSearchOnInitialLoad: true\n};\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(SearchProvider, {\n    config: config,\n    children: /*#__PURE__*/_jsxDEV(WithSearch, {\n      mapContextToProps: _ref => {\n        let {\n          wasSearched\n        } = _ref;\n        return {\n          wasSearched\n        };\n      },\n      children: _ref2 => {\n        let {\n          wasSearched\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n            children: /*#__PURE__*/_jsxDEV(Layout, {\n              header: /*#__PURE__*/_jsxDEV(SearchBox, {\n                autocompleteSuggestions: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 27\n              }, this),\n              sideContent: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [wasSearched && /*#__PURE__*/_jsxDEV(Sorting, {\n                  label: \"Sort by\",\n                  sortOptions: buildSortOptionsFromConfig()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 25\n                }, this), getFacetFields().map(field => /*#__PURE__*/_jsxDEV(Facet, {\n                  field: field,\n                  label: field\n                }, field, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this),\n              bodyContent: /*#__PURE__*/_jsxDEV(Results, {\n                titleField: getConfig().titleField,\n                urlField: getConfig().urlField,\n                thumbnailField: getConfig().thumbnailField,\n                shouldTrackClickThrough: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this),\n              bodyHeader: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [wasSearched && /*#__PURE__*/_jsxDEV(PagingInfo, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 39\n                }, this), wasSearched && /*#__PURE__*/_jsxDEV(ResultsPerPage, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this),\n              bodyFooter: /*#__PURE__*/_jsxDEV(Paging, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/test-api/src/Components/App.jsx"],"names":["React","AppSearchAPIConnector","ErrorBoundary","Facet","SearchProvider","SearchBox","Results","PagingInfo","ResultsPerPage","Paging","Sorting","WithSearch","Layout","buildAutocompleteQueryConfig","buildFacetConfigFromConfig","buildSearchOptionsFromConfig","buildSortOptionsFromConfig","getConfig","getFacetFields","hostIdentifier","searchKey","endpointBase","engineName","connector","cacheResponses","config","searchQuery","facets","autocompleteQuery","apiConnector","alwaysSearchOnInitialLoad","App","wasSearched","map","field","titleField","urlField","thumbnailField"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\n\nimport {\n  ErrorBoundary,\n  Facet,\n  SearchProvider,\n  SearchBox,\n  Results,\n  PagingInfo,\n  ResultsPerPage,\n  Paging,\n  Sorting,\n  WithSearch\n} from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\nimport {\n  buildAutocompleteQueryConfig,\n  buildFacetConfigFromConfig,\n  buildSearchOptionsFromConfig,\n  buildSortOptionsFromConfig,\n  getConfig,\n  getFacetFields\n} from \"./config/config-helper\";\n\nconst { hostIdentifier, searchKey, endpointBase, engineName } = getConfig();\nconst connector = new AppSearchAPIConnector({\n  searchKey: \"search-j2upnixcxa1k28efrs8sugrv\",\n  engineName: \"play-search\",\n  endpointBase: \"https://play-search.ent.us-central1.gcp.cloud.es.io\",\n  cacheResponses: false\n});\n\nconst config = {\n  searchQuery: {\n    facets: buildFacetConfigFromConfig(),\n    ...buildSearchOptionsFromConfig()\n  },\n  autocompleteQuery: buildAutocompleteQueryConfig(),\n  apiConnector: connector,\n  alwaysSearchOnInitialLoad: true\n};\n\nexport default function App() {\n  return (\n    <SearchProvider config={config}>\n      <WithSearch mapContextToProps={({ wasSearched }) => ({ wasSearched })}>\n        {({ wasSearched }) => {\n          return (\n            <div className=\"App\">\n              <ErrorBoundary>\n                <Layout\n                  header={<SearchBox autocompleteSuggestions={true} />}\n                  sideContent={\n                    <div>\n                      {wasSearched && (\n                        <Sorting\n                          label={\"Sort by\"}\n                          sortOptions={buildSortOptionsFromConfig()}\n                        />\n                      )}\n                      {getFacetFields().map(field => (\n                        <Facet key={field} field={field} label={field} />\n                      ))}\n                    </div>\n                  }\n                  bodyContent={\n                    <Results\n                      titleField={getConfig().titleField}\n                      urlField={getConfig().urlField}\n                      thumbnailField={getConfig().thumbnailField}\n                      shouldTrackClickThrough={true}\n                    />\n                  }\n                  bodyHeader={\n                    <React.Fragment>\n                      {wasSearched && <PagingInfo />}\n                      {wasSearched && <ResultsPerPage />}\n                    </React.Fragment>\n                  }\n                  bodyFooter={<Paging />}\n                />\n              </ErrorBoundary>\n            </div>\n          );\n        }}\n      </WithSearch>\n    </SearchProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}