{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Search from 'Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [search, setSearch] = useState(\"\"); // fetching the data from API and store values \n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search');\n    const itemsObj = await data.json();\n    const items = itemsObj.hits.hits;\n    console.log(items);\n    setItems(items);\n  };\n\n  const handleChange = search => {\n    let matches = [];\n\n    if (search.length > 0) {\n      matches = items.filter(item => {\n        const regex = new RegExp(`${search}`, 'gi');\n        return item.text_entry.match(regex);\n      });\n    }\n\n    setSearch();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Shakespeare Work Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for characters or plays\",\n        onChange: event => handleChange(event.target.value),\n        value: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"o//etK5j5LFRE3IE0SuRJVNgnkA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx"],"names":["React","useState","useEffect","Search","App","items","setItems","search","setSearch","fetchItems","data","fetch","itemsObj","json","hits","console","log","handleChange","matches","length","filter","item","regex","RegExp","text_entry","match","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC,CAHW,CAKf;;AACGC,EAAAA,SAAS,CAAC,MAAM;AACfO,IAAAA,UAAU;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,YAAW;AACzB,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,uDAAD,CAAxB;AAEA,UAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAvB;AACA,UAAMR,KAAK,GAAGO,QAAQ,CAACE,IAAT,CAAcA,IAA5B;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAEAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GATF;;AAWC,QAAMY,YAAY,GAAIV,MAAD,IAAY;AAC/B,QAAIW,OAAO,GAAG,EAAd;;AACA,QAAIX,MAAM,CAACY,MAAP,GAAgB,CAApB,EAAuB;AACrBD,MAAAA,OAAO,GAAGb,KAAK,CAACe,MAAN,CAAaC,IAAI,IAAI;AAC7B,cAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEhB,MAAO,EAArB,EAAwB,IAAxB,CAAd;AACA,eAAOc,IAAI,CAACG,UAAL,CAAgBC,KAAhB,CAAsBH,KAAtB,CAAP;AACD,OAHS,CAAV;AAID;;AAEDd,IAAAA,SAAS;AACV,GAVD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,gCAFhB;AAGI,QAAA,QAAQ,EAAEkB,KAAK,IAAIT,YAAY,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAHnC;AAII,QAAA,KAAK,EAAErB;AAJX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA/CQH,G;;KAAAA,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Search from 'Search'; \n\n\nfunction App() {\n\n    const [items, setItems] = useState([]);\n    const [search, setSearch] = useState(\"\");\n\n// fetching the data from API and store values \n   useEffect(() => {\n    fetchItems();\n   }, []);\n\n   const fetchItems = async() => {\n        const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search');\n\n        const itemsObj = await data.json();\n        const items = itemsObj.hits.hits;\n\n        console.log(items);   \n\n        setItems(items);\n    }\n\n    const handleChange = (search) => {\n      let matches = []\n      if (search.length > 0) {\n        matches = items.filter(item => {\n          const regex = new RegExp(`${search}`, 'gi');\n          return item.text_entry.match(regex)\n        })\n      }\n\n      setSearch()\n    }\n\n\n    return (\n        <div className=\"App\">\n            <h1 className=\"heading\">Shakespeare Work Library</h1>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search for characters or plays\"\n                    onChange={event => handleChange(event.target.value)}\n                    value={search}\n                    />\n            </div>\n        </div>\n    );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}