{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Result } from \"./types\";\nimport { Suggestion } from \"./types\";\nimport { appendClassName } from \"./view-helpers\";\n\nfunction getRaw(result, value) {\n  if (!result[value] || !result[value].raw) return;\n  return result[value].raw;\n}\n\nfunction getSnippet(result, value) {\n  if (!result[value] || !result[value].snippet) return;\n  return result[value].snippet;\n}\n\nfunction getSuggestionTitle(suggestionType, autocompleteSuggestions) {\n  if (autocompleteSuggestions.sectionTitle) {\n    return autocompleteSuggestions.sectionTitle;\n  }\n\n  if (autocompleteSuggestions[suggestionType] && autocompleteSuggestions[suggestionType].sectionTitle) {\n    return autocompleteSuggestions[suggestionType].sectionTitle;\n  }\n}\n\nfunction Autocomplete(_ref) {\n  var autocompleteResults = _ref.autocompleteResults,\n      autocompletedResults = _ref.autocompletedResults,\n      autocompleteSuggestions = _ref.autocompleteSuggestions,\n      autocompletedSuggestions = _ref.autocompletedSuggestions,\n      className = _ref.className,\n      getItemProps = _ref.getItemProps,\n      getMenuProps = _ref.getMenuProps;\n  var index = 0;\n  return /*#__PURE__*/React.createElement(\"div\", getMenuProps({\n    className: appendClassName(\"sui-search-box__autocomplete-container\", className)\n  }), /*#__PURE__*/React.createElement(\"div\", null, !!autocompleteSuggestions && Object.entries(autocompletedSuggestions).map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        suggestionType = _ref3[0],\n        suggestions = _ref3[1];\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: suggestionType\n    }, getSuggestionTitle(suggestionType, autocompleteSuggestions) && suggestions.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sui-search-box__section-title\"\n    }, getSuggestionTitle(suggestionType, autocompleteSuggestions)), suggestions.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"sui-search-box__suggestion-list\"\n    }, suggestions.map(function (suggestion) {\n      index++;\n      return (\n        /*#__PURE__*/\n        // eslint-disable-next-line react/jsx-key\n        React.createElement(\"li\", getItemProps({\n          key: suggestion.suggestion || suggestion.highlight,\n          index: index - 1,\n          item: suggestion\n        }), suggestion.highlight ? /*#__PURE__*/React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: suggestion.highlight\n          }\n        }) : /*#__PURE__*/React.createElement(\"span\", null, suggestion.suggestion))\n      );\n    })));\n  }), !!autocompleteResults && !!autocompletedResults && autocompletedResults.length > 0 && autocompleteResults.sectionTitle && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-search-box__section-title\"\n  }, autocompleteResults.sectionTitle), !!autocompleteResults && !!autocompletedResults && autocompletedResults.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"sui-search-box__results-list\"\n  }, autocompletedResults.map(function (result) {\n    index++;\n    var titleSnippet = getSnippet(result, autocompleteResults.titleField);\n    var titleRaw = getRaw(result, autocompleteResults.titleField);\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/jsx-key\n      React.createElement(\"li\", getItemProps({\n        key: result.id.raw,\n        index: index - 1,\n        item: result\n      }), titleSnippet ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: titleSnippet\n        }\n      }) : /*#__PURE__*/React.createElement(\"span\", null, titleRaw))\n    );\n  }))));\n}\n\nAutocomplete.propTypes = {\n  allAutocompletedItemsCount: PropTypes.number.isRequired,\n  autocompleteResults: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    titleField: PropTypes.string.isRequired,\n    urlField: PropTypes.string.isRequired,\n    linkTarget: PropTypes.string,\n    sectionTitle: PropTypes.string\n  })]),\n  autocompletedResults: PropTypes.arrayOf(Result).isRequired,\n  autocompletedSuggestions: PropTypes.objectOf(PropTypes.arrayOf(Suggestion)).isRequired,\n  autocompletedSuggestionsCount: PropTypes.number.isRequired,\n  autocompleteSuggestions: PropTypes.oneOfType([PropTypes.bool, PropTypes.exact({\n    sectionTitle: PropTypes.string\n  }), PropTypes.objectOf(PropTypes.exact({\n    sectionTitle: PropTypes.string\n  }))]),\n  getItemProps: PropTypes.func.isRequired,\n  getMenuProps: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\nexport default Autocomplete;","map":{"version":3,"mappings":"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","names":["PropTypes","React","Result","Suggestion","appendClassName","getRaw","result","value","raw","getSnippet","snippet","getSuggestionTitle","suggestionType","autocompleteSuggestions","sectionTitle","Autocomplete","autocompleteResults","autocompletedResults","autocompletedSuggestions","className","getItemProps","getMenuProps","index","Object","entries","map","suggestions","Fragment","key","length","suggestion","highlight","item","dangerouslySetInnerHTML","__html","titleSnippet","titleField","titleRaw","id","propTypes","allAutocompletedItemsCount","number","isRequired","oneOfType","bool","shape","string","urlField","linkTarget","arrayOf","objectOf","autocompletedSuggestionsCount","exact","func"],"sources":["/Users/karina/Main/Study/Web Dev/7. Complited Projects/elasticsearch-test-api/node_modules/@elastic/react-search-ui-views/src/Autocomplete.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { Result } from \"./types\";\nimport { Suggestion } from \"./types\";\nimport { appendClassName } from \"./view-helpers\";\n\nfunction getRaw(result, value) {\n  if (!result[value] || !result[value].raw) return;\n  return result[value].raw;\n}\n\nfunction getSnippet(result, value) {\n  if (!result[value] || !result[value].snippet) return;\n  return result[value].snippet;\n}\n\nfunction getSuggestionTitle(suggestionType, autocompleteSuggestions) {\n  if (autocompleteSuggestions.sectionTitle) {\n    return autocompleteSuggestions.sectionTitle;\n  }\n\n  if (\n    autocompleteSuggestions[suggestionType] &&\n    autocompleteSuggestions[suggestionType].sectionTitle\n  ) {\n    return autocompleteSuggestions[suggestionType].sectionTitle;\n  }\n}\n\nfunction Autocomplete({\n  autocompleteResults,\n  autocompletedResults,\n  autocompleteSuggestions,\n  autocompletedSuggestions,\n  className,\n  getItemProps,\n  getMenuProps\n}) {\n  let index = 0;\n  return (\n    <div\n      {...getMenuProps({\n        className: appendClassName(\n          \"sui-search-box__autocomplete-container\",\n          className\n        )\n      })}\n    >\n      <div>\n        {!!autocompleteSuggestions &&\n          Object.entries(autocompletedSuggestions).map(\n            ([suggestionType, suggestions]) => {\n              return (\n                <React.Fragment key={suggestionType}>\n                  {getSuggestionTitle(\n                    suggestionType,\n                    autocompleteSuggestions\n                  ) &&\n                    suggestions.length > 0 && (\n                      <div className=\"sui-search-box__section-title\">\n                        {getSuggestionTitle(\n                          suggestionType,\n                          autocompleteSuggestions\n                        )}\n                      </div>\n                    )}\n                  {suggestions.length > 0 && (\n                    <ul className=\"sui-search-box__suggestion-list\">\n                      {suggestions.map(suggestion => {\n                        index++;\n                        return (\n                          // eslint-disable-next-line react/jsx-key\n                          <li\n                            {...getItemProps({\n                              key:\n                                suggestion.suggestion || suggestion.highlight,\n                              index: index - 1,\n                              item: suggestion\n                            })}\n                          >\n                            {suggestion.highlight ? (\n                              <span\n                                dangerouslySetInnerHTML={{\n                                  __html: suggestion.highlight\n                                }}\n                              />\n                            ) : (\n                              <span>{suggestion.suggestion}</span>\n                            )}\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  )}\n                </React.Fragment>\n              );\n            }\n          )}\n        {!!autocompleteResults &&\n          !!autocompletedResults &&\n          autocompletedResults.length > 0 &&\n          autocompleteResults.sectionTitle && (\n            <div className=\"sui-search-box__section-title\">\n              {autocompleteResults.sectionTitle}\n            </div>\n          )}\n        {!!autocompleteResults &&\n          !!autocompletedResults &&\n          autocompletedResults.length > 0 && (\n            <ul className=\"sui-search-box__results-list\">\n              {autocompletedResults.map(result => {\n                index++;\n                const titleSnippet = getSnippet(\n                  result,\n                  autocompleteResults.titleField\n                );\n                const titleRaw = getRaw(result, autocompleteResults.titleField);\n                return (\n                  // eslint-disable-next-line react/jsx-key\n                  <li\n                    {...getItemProps({\n                      key: result.id.raw,\n                      index: index - 1,\n                      item: result\n                    })}\n                  >\n                    {titleSnippet ? (\n                      <span\n                        dangerouslySetInnerHTML={{\n                          __html: titleSnippet\n                        }}\n                      />\n                    ) : (\n                      <span>{titleRaw}</span>\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n      </div>\n    </div>\n  );\n}\n\nAutocomplete.propTypes = {\n  allAutocompletedItemsCount: PropTypes.number.isRequired,\n  autocompleteResults: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      titleField: PropTypes.string.isRequired,\n      urlField: PropTypes.string.isRequired,\n      linkTarget: PropTypes.string,\n      sectionTitle: PropTypes.string\n    })\n  ]),\n  autocompletedResults: PropTypes.arrayOf(Result).isRequired,\n  autocompletedSuggestions: PropTypes.objectOf(PropTypes.arrayOf(Suggestion))\n    .isRequired,\n  autocompletedSuggestionsCount: PropTypes.number.isRequired,\n  autocompleteSuggestions: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.exact({\n      sectionTitle: PropTypes.string\n    }),\n    PropTypes.objectOf(\n      PropTypes.exact({\n        sectionTitle: PropTypes.string\n      })\n    )\n  ]),\n  getItemProps: PropTypes.func.isRequired,\n  getMenuProps: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nexport default Autocomplete;\n"]},"metadata":{},"sourceType":"module"}