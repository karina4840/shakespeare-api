{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [search, setSearch] = useState(\"\"); // fetching the data from API and store values \n  //  useEffect(() => {\n  //   fetchItems();\n  //  }, []);\n  //  const fetchItems = async() => {\n  //       const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search');\n  //       const items = await data.json();\n  //       console.log(items);\n  //       setItems(items);\n  //   }\n\n  fetch(`http://cosmic-elastic.eu.ngrok.io/shakespeare/_search`).then(res => res.json()).then(data => {\n    console.log(data.hits._sour);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Shakespeare Work Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for characters or plays\",\n        onChange: event => {\n          setSearch(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"mt5ag+M3HxnmtaK+pmUMcM8nNiA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx"],"names":["React","useState","useEffect","App","items","setItems","search","setSearch","fetch","then","res","json","data","console","log","hits","_sour","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC,CAHW,CAKf;AAEE;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;;AAEFO,EAAAA,KAAK,CAAE,uDAAF,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAL,CAAUC,KAAtB;AACD,GAJH;AAOI,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,gCAFhB;AAGI,QAAA,QAAQ,EAAEC,KAAK,IAAI;AAACV,UAAAA,SAAS,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AAA8B;AAHtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAxCQhB,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nfunction App() {\n\n    const [items, setItems] = useState([]);\n    const [search, setSearch] = useState(\"\");\n\n// fetching the data from API and store values \n\n  //  useEffect(() => {\n  //   fetchItems();\n  //  }, []);\n\n\n  //  const fetchItems = async() => {\n  //       const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search');\n\n  //       const items = await data.json();\n  //       console.log(items);\n  //       setItems(items);\n  //   }\n\nfetch(`http://cosmic-elastic.eu.ngrok.io/shakespeare/_search`)\n  .then((res) => res.json())\n  .then((data) => {\n    console.log(data.hits._sour);\n  });\n\n\n    return (\n        <div className=\"App\">\n            <h1 className=\"heading\">Shakespeare Work Library</h1>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search for characters or plays\"\n                    onChange={event => {setSearch(event.target.value)}}\n                    />\n                    \n            </div>\n        </div>\n    );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}