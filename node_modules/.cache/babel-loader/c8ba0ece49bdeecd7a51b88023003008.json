{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/7. Complited Projects/elasticsearch-test-api/src/Components/App.jsx\";\n// ============== importing necessary modules==============\nimport React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport { PagingInfo, ResultsPerPage, Paging, SearchProvider, Results, Facet, SearchBox } from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\"; // ============== retrieving credentials from my account ==============\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst connector = new AppSearchAPIConnector({\n  searchKey: \"search-j2upnixcxa1k28efrs8sugrv\",\n  engineName: \"play-search\",\n  endpointBase: \"https://play-search.ent.us-central1.gcp.cloud.es.io\",\n  cacheResponses: false\n}); // ============== setting configurations for connection and searches ==============\n\nconst config = {\n  apiConnector: connector,\n  searchQuery: {\n    //Results display: name of the play, its speaker, and text entry.\n    result_fields: {\n      play_name: {\n        // A snippet means that matching search terms will be highlighted via <em> tags.\n        snippet: {\n          size: 35,\n          // 35 characters highlighted max.\n          fallback: true // Fallback to a \"raw\" result.\n\n        }\n      },\n      speaker: {\n        snippet: {\n          size: 50,\n          fallback: true\n        }\n      },\n      text_entry: {\n        snippet: {\n          size: 50,\n          fallback: true\n        }\n      }\n    },\n    facets: {\n      states: {\n        type: \"value\",\n        size: 30\n      }\n    }\n  }\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(SearchProvider, {\n      config: config,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading\",\n          children: \"Shakespeare Work Library\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Layout, {\n          header: /*#__PURE__*/_jsxDEV(SearchBox, {\n            inputProps: {\n              placeholder: \"Search for characters or plays\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this),\n          bodyContent: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Results, {\n              titleField: \"play_name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Facet, {\n              field: \"states\",\n              label: \"States\",\n              view: MultiCheckboxFacet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true),\n          bodyHeader: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(PagingInfo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(ResultsPerPage, {\n              options: [5, 10, 20]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true),\n          bodyFooter: /*#__PURE__*/_jsxDEV(Paging, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/7. Complited Projects/elasticsearch-test-api/src/Components/App.jsx"],"names":["React","AppSearchAPIConnector","PagingInfo","ResultsPerPage","Paging","SearchProvider","Results","Facet","SearchBox","Layout","connector","searchKey","engineName","endpointBase","cacheResponses","config","apiConnector","searchQuery","result_fields","play_name","snippet","size","fallback","speaker","text_entry","facets","states","type","App","placeholder","MultiCheckboxFacet"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,SACIC,UADJ,EAEIC,cAFJ,EAGIC,MAHJ,EAIIC,cAJJ,EAKIC,OALJ,EAMIC,KANJ,EAOIC,SAPJ,QAQO,0BARP;AASA,SAAQC,MAAR,QAAqB,gCAArB;AACA,OAAO,sDAAP,C,CAGA;;;;AACA,MAAMC,SAAS,GAAG,IAAIT,qBAAJ,CAA0B;AAC1CU,EAAAA,SAAS,EAAE,iCAD+B;AAE1CC,EAAAA,UAAU,EAAE,aAF8B;AAG1CC,EAAAA,YAAY,EAAE,qDAH4B;AAI1CC,EAAAA,cAAc,EAAE;AAJ0B,CAA1B,CAAlB,C,CAOA;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,YAAY,EAAEN,SADH;AAGXO,EAAAA,WAAW,EAAE;AAET;AACAC,IAAAA,aAAa,EAAE;AACXC,MAAAA,SAAS,EAAE;AACT;AACEC,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,EADD;AACK;AACVC,UAAAA,QAAQ,EAAE,IAFL,CAEU;;AAFV;AAFF,OADA;AAQXC,MAAAA,OAAO,EAAE;AACLH,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,EADD;AAELC,UAAAA,QAAQ,EAAE;AAFL;AADJ,OARE;AAcXE,MAAAA,UAAU,EAAC;AACTJ,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,EADC;AAEPC,UAAAA,QAAQ,EAAE;AAFH;AADA;AAdA,KAHN;AAyBTG,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBN,QAAAA,IAAI,EAAE;AAAvB;AADF;AAzBC;AAHF,CAAf;;AAkCA,SAASO,GAAT,GAAe;AACX,sBACE,QAAC,KAAD,CAAO,UAAP;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEb,MAAxB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEI,QAAC,MAAD;AACE,UAAA,MAAM,eACN,QAAC,SAAD;AAAW,YAAA,UAAU,EAAE;AACrBc,cAAAA,WAAW,EAAE;AADQ;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAOE,UAAA,WAAW,eACT;AAAA,oCACA,QAAC,OAAD;AACF,cAAA,UAAU,EAAG;AADX;AAAA;AAAA;AAAA;AAAA,oBADA,eAIF,QAAC,KAAD;AACA,cAAA,KAAK,EAAC,QADN;AAEA,cAAA,KAAK,EAAC,QAFN;AAGA,cAAA,IAAI,EAAEC;AAHN;AAAA;AAAA;AAAA;AAAA,oBAJE;AAAA,0BARJ;AAmBE,UAAA,UAAU,eACR;AAAA,oCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,cAAD;AAAgB,cAAA,OAAO,EAAI,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR;AAA3B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,0BApBJ;AA0BE,UAAA,UAAU,eAAE,QAAE,MAAF;AAAA;AAAA;AAAA;AAAA;AA1Bd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCH;;KAtCQF,G;AAuCT,eAAeA,GAAf","sourcesContent":["// ============== importing necessary modules==============\n\nimport React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport {\n    PagingInfo,\n    ResultsPerPage,\n    Paging,\n    SearchProvider,\n    Results,\n    Facet,\n    SearchBox\n} from \"@elastic/react-search-ui\";\nimport {Layout} from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\n\n// ============== retrieving credentials from my account ==============\nconst connector = new AppSearchAPIConnector({\n  searchKey: \"search-j2upnixcxa1k28efrs8sugrv\", \n  engineName: \"play-search\", \n  endpointBase: \"https://play-search.ent.us-central1.gcp.cloud.es.io\", \n  cacheResponses: false});\n\n\n// ============== setting configurations for connection and searches ==============\n\nconst config = {\n    apiConnector: connector,\n\n    searchQuery: {\n      \n        //Results display: name of the play, its speaker, and text entry.\n        result_fields: {\n            play_name: {\n              // A snippet means that matching search terms will be highlighted via <em> tags.\n                snippet: {\n                    size: 35, // 35 characters highlighted max.\n                    fallback: true // Fallback to a \"raw\" result.\n                }\n            },\n            speaker: {\n                snippet: {\n                    size: 50, \n                    fallback: true \n                }\n            },\n            text_entry:{\n              snippet: {\n                size: 50, \n                fallback: true \n            }\n            }\n        },\n\n        facets: {\n          states: { type: \"value\", size: 30 }\n        }\n      }\n};\n\nfunction App() {\n    return (\n      <React.StrictMode>\n        <SearchProvider config={config}>\n            <div className=\"App\">\n              <h1 className=\"heading\">Shakespeare Work Library</h1>\n                <Layout \n                  header={\n                  <SearchBox inputProps={{\n                    placeholder: \"Search for characters or plays\"\n                  }}\n                   \n                    />}\n                  bodyContent={\n                    <> \n                    <Results \n                  titleField = \"play_name\"\n                  />\n                  <Facet \n                  field=\"states\" \n                  label=\"States\" \n                  view={MultiCheckboxFacet}/>\n                    </>\n                 \n                  }\n                  bodyHeader={\n                    <> \n                      <PagingInfo/> \n                      <ResultsPerPage options = {[5, 10, 20]}/> \n                    </>\n                  }\n                  \n                  bodyFooter={< Paging />}\n                />\n            </div>\n        </SearchProvider>\n      </React.StrictMode>\n    );\n}\nexport default App; \n"]},"metadata":{},"sourceType":"module"}