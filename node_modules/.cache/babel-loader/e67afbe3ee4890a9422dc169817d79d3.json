{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _crossFetch = require('cross-fetch');\n\nvar _crossFetch2 = _interopRequireDefault(_crossFetch);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar fetchGraphQL = function fetchGraphQL(requestOptions) {\n  var graphQLUrl = requestOptions.graphQLUrl,\n      url = requestOptions.url,\n      credentials = requestOptions.credentials,\n      app = requestOptions.app,\n      query = requestOptions.query,\n      headers = requestOptions.headers;\n  var fetchUrl = credentials ? url.replace('//', '//' + credentials + '@') : url;\n  return (0, _crossFetch2.default)(graphQLUrl, {\n    method: 'POST',\n    body: '\\n\\t\\t\\tquery{\\n\\t\\t\\t\\telastic77(host: \"' + fetchUrl + '\"){\\n\\t\\t\\t\\t\\tmsearch(\\n\\t\\t\\t\\t\\t\\tindex: \"' + app + '\"\\n\\t\\t\\t\\t\\t\\tbody: ' + JSON.stringify(query.map(function (item) {\n      return JSON.stringify(item);\n    })) + '\\n\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t',\n    headers: _extends({}, headers, {\n      'Content-Type': 'application/graphql'\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (jsonRes) {\n    return jsonRes.data.elastic77.msearch;\n  }).catch(function (error) {\n    console.error(error);\n  });\n};\n\nexports.default = fetchGraphQL;","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/test-api/node_modules/@appbaseio/reactivecore/lib/utils/graphQL.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_crossFetch","require","_crossFetch2","_interopRequireDefault","obj","__esModule","default","fetchGraphQL","requestOptions","graphQLUrl","url","credentials","app","query","headers","fetchUrl","replace","method","body","JSON","stringify","map","item","then","res","json","jsonRes","data","elastic77","msearch","catch","error","console"],"mappings":"AAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA8B,YAA9B,EAA2C;AAACC,EAAAA,KAAK,EAAC;AAAP,CAA3C;;AAAyD,IAAIC,QAAQ,GAACJ,MAAM,CAACK,MAAP,IAAe,UAASC,MAAT,EAAgB;AAAC,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,SAAS,CAACC,MAAxB,EAA+BF,CAAC,EAAhC,EAAmC;AAAC,QAAIG,MAAM,GAACF,SAAS,CAACD,CAAD,CAApB;;AAAwB,SAAI,IAAII,GAAR,IAAeD,MAAf,EAAsB;AAAC,UAAGV,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA4CC,GAA5C,CAAH,EAAoD;AAACL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAYD,MAAM,CAACC,GAAD,CAAlB;AAAyB;AAAC;AAAC;;AAAA,SAAOL,MAAP;AAAe,CAA/N;;AAAgO,IAAIS,WAAW,GAACC,OAAO,CAAC,aAAD,CAAvB;;AAAuC,IAAIC,YAAY,GAACC,sBAAsB,CAACH,WAAD,CAAvC;;AAAqD,SAASG,sBAAT,CAAgCC,GAAhC,EAAoC;AAAC,SAAOA,GAAG,IAAEA,GAAG,CAACC,UAAT,GAAoBD,GAApB,GAAwB;AAACE,IAAAA,OAAO,EAACF;AAAT,GAA/B;AAA8C;;AAAA,IAAIG,YAAY,GAAC,SAASA,YAAT,CAAsBC,cAAtB,EAAqC;AAAC,MAAIC,UAAU,GAACD,cAAc,CAACC,UAA9B;AAAA,MAAyCC,GAAG,GAACF,cAAc,CAACE,GAA5D;AAAA,MAAgEC,WAAW,GAACH,cAAc,CAACG,WAA3F;AAAA,MAAuGC,GAAG,GAACJ,cAAc,CAACI,GAA1H;AAAA,MAA8HC,KAAK,GAACL,cAAc,CAACK,KAAnJ;AAAA,MAAyJC,OAAO,GAACN,cAAc,CAACM,OAAhL;AAAwL,MAAIC,QAAQ,GAACJ,WAAW,GAACD,GAAG,CAACM,OAAJ,CAAY,IAAZ,EAAiB,OAAKL,WAAL,GAAiB,GAAlC,CAAD,GAAwCD,GAAhE;AAAoE,SAAM,CAAC,GAAER,YAAY,CAACI,OAAhB,EAAyBG,UAAzB,EAAoC;AAACQ,IAAAA,MAAM,EAAC,MAAR;AAAeC,IAAAA,IAAI,EAAC,8CAA4CH,QAA5C,GAAqD,+CAArD,GAAqGH,GAArG,GAAyG,uBAAzG,GAAiIO,IAAI,CAACC,SAAL,CAAeP,KAAK,CAACQ,GAAN,CAAU,UAASC,IAAT,EAAc;AAAC,aAAOH,IAAI,CAACC,SAAL,CAAeE,IAAf,CAAP;AAA6B,KAAtD,CAAf,CAAjI,GAAyM,yCAA7N;AAAuQR,IAAAA,OAAO,EAACzB,QAAQ,CAAC,EAAD,EAAIyB,OAAJ,EAAY;AAAC,sBAAe;AAAhB,KAAZ;AAAvR,GAApC,EAAiXS,IAAjX,CAAsX,UAASC,GAAT,EAAa;AAAC,WAAOA,GAAG,CAACC,IAAJ,EAAP;AAAmB,GAAvZ,EAAyZF,IAAzZ,CAA8Z,UAASG,OAAT,EAAiB;AAAC,WAAOA,OAAO,CAACC,IAAR,CAAaC,SAAb,CAAuBC,OAA9B;AAAuC,GAAvd,EAAydC,KAAzd,CAA+d,UAASC,KAAT,EAAe;AAACC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AAAsB,GAArgB,CAAN;AAA8gB,CAAj0B;;AAAk0B5C,OAAO,CAACmB,OAAR,GAAgBC,YAAhB","sourcesContent":["Object.defineProperty(exports,\"__esModule\",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _crossFetch=require('cross-fetch');var _crossFetch2=_interopRequireDefault(_crossFetch);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var fetchGraphQL=function fetchGraphQL(requestOptions){var graphQLUrl=requestOptions.graphQLUrl,url=requestOptions.url,credentials=requestOptions.credentials,app=requestOptions.app,query=requestOptions.query,headers=requestOptions.headers;var fetchUrl=credentials?url.replace('//','//'+credentials+'@'):url;return(0,_crossFetch2.default)(graphQLUrl,{method:'POST',body:'\\n\\t\\t\\tquery{\\n\\t\\t\\t\\telastic77(host: \"'+fetchUrl+'\"){\\n\\t\\t\\t\\t\\tmsearch(\\n\\t\\t\\t\\t\\t\\tindex: \"'+app+'\"\\n\\t\\t\\t\\t\\t\\tbody: '+JSON.stringify(query.map(function(item){return JSON.stringify(item);}))+'\\n\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t',headers:_extends({},headers,{'Content-Type':'application/graphql'})}).then(function(res){return res.json();}).then(function(jsonRes){return jsonRes.data.elastic77.msearch;}).catch(function(error){console.error(error);});};exports.default=fetchGraphQL;"]},"metadata":{},"sourceType":"script"}