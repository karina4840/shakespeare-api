{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _core = require('@emotion/core');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require('../../../utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return 'You have tried to stringify object returned from `css` function. It isn\\'t supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).';\n}\n/** @jsx jsx */\n\n\nvar highlightedStyling = process.env.NODE_ENV === 'production' ? {\n  name: '12fugvv-highlightedStyling',\n  styles: 'overflow:hidden;text-overflow:ellipsis;white-space:nowrap;.highlight{font-weight:600;padding:0;background-color:transparent;color:inherit;};label:highlightedStyling;'\n} : {\n  name: '12fugvv-highlightedStyling',\n  styles: 'overflow:hidden;text-overflow:ellipsis;white-space:nowrap;.highlight{font-weight:600;padding:0;background-color:transparent;color:inherit;};label:highlightedStyling;',\n  map: '',\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar Highlight = function Highlight(props) {\n  var textToHighlight = props.textToHighlight,\n      searchWords = props.searchWords,\n      autoEscape = props.autoEscape,\n      hasPredictiveSuggestion = props.hasPredictiveSuggestion,\n      categoryLabel = props.categoryLabel;\n  var modSearchWords = searchWords.map(function (word) {\n    return autoEscape ? (0, _utils.escapeRegExp)(word) : word;\n  }).filter(function (word) {\n    return word;\n  });\n  var stringToReplace = categoryLabel || modSearchWords.join('|');\n  return (0, _core.jsx)('div', {\n    css: highlightedStyling,\n    dangerouslySetInnerHTML: {\n      __html: hasPredictiveSuggestion ? textToHighlight : textToHighlight.replace(new RegExp(stringToReplace, 'ig'), function (matched) {\n        return '<mark class=\"highlight\">' + matched + '</mark>';\n      })\n    }\n  });\n};\n\nHighlight.propTypes = {\n  searchWords: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  textToHighlight: _propTypes2.default.string,\n  autoEscape: _propTypes2.default.bool,\n  hasPredictiveSuggestion: _propTypes2.default.bool,\n  categoryLabel: _propTypes2.default.string\n};\nHighlight.defaultProps = {\n  searchWords: [],\n  textToHighlight: '',\n  autoEscape: false,\n  hasPredictiveSuggestion: false\n};\nexports.default = Highlight;","map":{"version":3,"mappings":"AAM8B","names":[],"sources":["/Users/karina/Main/Study/Web Dev/test-api/node_modules/@appbaseio/reactivesearch/src/components/search/addons/Highlight.js"],"sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport PropTypes from 'prop-types';\n\nimport { escapeRegExp } from '../../../utils';\n\nconst highlightedStyling = css`\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\t.highlight {\n\t\tfont-weight: 600;\n\t\tpadding: 0;\n\t\tbackground-color: transparent;\n\t\tcolor: inherit;\n\t}\n`;\n\nconst Highlight = (props) => {\n\tconst {\n\t\ttextToHighlight, searchWords, autoEscape, hasPredictiveSuggestion, categoryLabel,\n\t}\n\t\t= props;\n\tconst modSearchWords = searchWords\n\t\t.map(word => (autoEscape ? escapeRegExp(word) : word))\n\t\t.filter(word => word);\n\tconst stringToReplace = categoryLabel || modSearchWords.join('|');\n\treturn (\n\t\t<div\n\t\t\tcss={highlightedStyling}\n\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t__html: hasPredictiveSuggestion\n\t\t\t\t\t? textToHighlight\n\t\t\t\t\t: textToHighlight.replace(\n\t\t\t\t\t\tnew RegExp(stringToReplace, 'ig'),\n\t\t\t\t\t\tmatched => `<mark class=\"highlight\">${matched}</mark>`,\n\t\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nHighlight.propTypes = {\n\tsearchWords: PropTypes.arrayOf(PropTypes.string),\n\ttextToHighlight: PropTypes.string,\n\tautoEscape: PropTypes.bool,\n\thasPredictiveSuggestion: PropTypes.bool,\n\tcategoryLabel: PropTypes.string,\n};\n\nHighlight.defaultProps = {\n\tsearchWords: [],\n\ttextToHighlight: '',\n\tautoEscape: false,\n\thasPredictiveSuggestion: false,\n};\n\nexport default Highlight;\n"]},"metadata":{},"sourceType":"script"}