{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/test-api/src/Components/App.jsx\";\nimport React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport { PagingInfo, ResultsPerPage, Paging, SearchProvider, Results, SearchBox, WithSearch } from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\"; // ============== retrieving credentials from my account ==============\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst connector = new AppSearchAPIConnector({\n  searchKey: \"search-j2upnixcxa1k28efrs8sugrv\",\n  engineName: \"play-search\",\n  endpointBase: \"https://play-search.ent.us-central1.gcp.cloud.es.io\",\n  cacheResponses: false\n}); // ============== setting configurations for connection and searches ==============\n\nconst config = {\n  apiConnector: connector,\n  searchQuery: {\n    //   query: {\n    //     match_all: {}\n    // },\n    search_fields: {\n      play_name: {},\n      text_entry: {}\n    },\n    //Results display: name of the play, its speaker, text entry, and speech number.\n    result_fields: {\n      play_name: {\n        snippet: {\n          size: 35,\n          fallback: true\n        }\n      },\n      speaker: {\n        snippet: {\n          size: 50,\n          fallback: true\n        }\n      },\n      text_entry: {\n        snippet: {\n          size: 70,\n          fallback: true\n        }\n      }\n    }\n  }\n};\n\nfunction App() {\n  /*#__PURE__*/\n  _jsxDEV(SearchProvider, {\n    config: config,\n    children: /*#__PURE__*/_jsxDEV(WithSearch, {\n      children: context => {\n        // Context contains state, like \"searchTerm\"\n        const searchTerm = context.searchTerm; // Context also contains actions, like \"setSearchTerm\"\n\n        const setSearchTerm = context.setSearchTerm;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"heading\",\n            children: \"Shakespeare Work Library\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Layout, {\n            header: /*#__PURE__*/_jsxDEV(SearchBox, {\n              inputProps: {\n                placeholder: \"type a character name or a text line\"\n              },\n              value: searchTerm,\n              onChange: setSearchTerm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this),\n            bodyContent: /*#__PURE__*/_jsxDEV(Results, {\n              titleField: \"play_name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 23\n            }, this),\n            bodyHeader: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(PagingInfo, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(ResultsPerPage, {\n                options: [5, 10, 20]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true),\n            bodyFooter: /*#__PURE__*/_jsxDEV(Paging, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/test-api/src/Components/App.jsx"],"names":["React","AppSearchAPIConnector","PagingInfo","ResultsPerPage","Paging","SearchProvider","Results","SearchBox","WithSearch","Layout","connector","searchKey","engineName","endpointBase","cacheResponses","config","apiConnector","searchQuery","search_fields","play_name","text_entry","result_fields","snippet","size","fallback","speaker","App","context","searchTerm","setSearchTerm","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,SACIC,UADJ,EAEIC,cAFJ,EAGIC,MAHJ,EAIIC,cAJJ,EAKIC,OALJ,EAMIC,SANJ,EAOIC,UAPJ,QAQO,0BARP;AASA,SAAQC,MAAR,QAAqB,gCAArB;AACA,OAAO,sDAAP,C,CAEA;;;;AACA,MAAMC,SAAS,GAAG,IAAIT,qBAAJ,CAA0B;AAACU,EAAAA,SAAS,EAAE,iCAAZ;AAA+CC,EAAAA,UAAU,EAAE,aAA3D;AAA0EC,EAAAA,YAAY,EAAE,qDAAxF;AAA+IC,EAAAA,cAAc,EAAE;AAA/J,CAA1B,CAAlB,C,CAIA;;AAGA,MAAMC,MAAM,GAAG;AACXC,EAAAA,YAAY,EAAEN,SADH;AAGXO,EAAAA,WAAW,EAAE;AAEX;AACA;AAEA;AACEC,IAAAA,aAAa,EAAC;AACZC,MAAAA,SAAS,EAAC,EADE;AAEZC,MAAAA,UAAU,EAAC;AAFC,KANL;AAUT;AACAC,IAAAA,aAAa,EAAE;AACXF,MAAAA,SAAS,EAAE;AACPG,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,EADD;AAELC,UAAAA,QAAQ,EAAE;AAFL;AADF,OADA;AAOXC,MAAAA,OAAO,EAAE;AACLH,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,EADD;AAELC,UAAAA,QAAQ,EAAE;AAFL;AADJ,OAPE;AAaXJ,MAAAA,UAAU,EAAE;AACRE,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,EADD;AAELC,UAAAA,QAAQ,EAAE;AAFL;AADD;AAbD;AAXN;AAHF,CAAf;;AAqCA,SAASE,GAAT,GAAe;AAEP;AAAA,UAAC,cAAD;AAAgB,IAAA,MAAM,EAAEX,MAAxB;AAAA,2BACE,QAAC,UAAD;AAAA,gBACDY,OAAO,IAAI;AACZ;AACA,cAAMC,UAAU,GAAGD,OAAO,CAACC,UAA3B,CAFY,CAGZ;;AACA,cAAMC,aAAa,GAAGF,OAAO,CAACE,aAA9B;AAEE,4BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEI,QAAC,MAAD;AACI,YAAA,MAAM,eACN,QAAC,SAAD;AACE,cAAA,UAAU,EAAE;AAAEC,gBAAAA,WAAW,EAAE;AAAf,eADd;AAEE,cAAA,KAAK,EAAEF,UAFT;AAEqB,cAAA,QAAQ,EAAEC;AAF/B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAOI,YAAA,WAAW,eACT,QAAC,OAAD;AAAS,cAAA,UAAU,EAAG;AAAtB;AAAA;AAAA;AAAA;AAAA,oBARN;AASQ,YAAA,UAAU,eACV;AAAA,sCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,cAAD;AAAgB,gBAAA,OAAO,EAAI,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR;AAA3B;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA,4BAVR;AAeQ,YAAA,UAAU,eAAE,QAAE,MAAF;AAAA;AAAA;AAAA;AAAA;AAfpB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAsBa;AA7Bb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAiCP;;KAnCQH,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport {\n    PagingInfo,\n    ResultsPerPage,\n    Paging,\n    SearchProvider,\n    Results,\n    SearchBox,\n    WithSearch\n} from \"@elastic/react-search-ui\";\nimport {Layout} from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\n// ============== retrieving credentials from my account ==============\nconst connector = new AppSearchAPIConnector({searchKey: \"search-j2upnixcxa1k28efrs8sugrv\", engineName: \"play-search\", endpointBase: \"https://play-search.ent.us-central1.gcp.cloud.es.io\", cacheResponses: false});\n\n\n\n// ============== setting configurations for connection and searches ==============\n\n\nconst config = {\n    apiConnector: connector,\n\n    searchQuery: {\n      \n      //   query: {\n      //     match_all: {}\n        \n      // },\n        search_fields:{\n          play_name:{},\n          text_entry:{}\n        },\n        //Results display: name of the play, its speaker, text entry, and speech number.\n        result_fields: {\n            play_name: {\n                snippet: {\n                    size: 35,\n                    fallback: true\n                }\n            },\n            speaker: {\n                snippet: {\n                    size: 50,\n                    fallback: true\n                }\n            },\n            text_entry: {\n                snippet: {\n                    size: 70,\n                    fallback: true\n                }\n            }\n        }\n    }\n};\n\nfunction App() {\n    \n        <SearchProvider config={config}>\n          <WithSearch>\n        {context => {\n        // Context contains state, like \"searchTerm\"\n        const searchTerm = context.searchTerm;\n        // Context also contains actions, like \"setSearchTerm\"\n        const setSearchTerm = context.setSearchTerm;\n\n          return (\n            <div className=\"App\">\n              <h1 className=\"heading\">Shakespeare Work Library</h1>\n                <Layout\n                    header={\n                    <SearchBox \n                      inputProps={{ placeholder: \"type a character name or a text line\"}}\n                      value={searchTerm} onChange={setSearchTerm}\n                    />}\n                     \n                    bodyContent={\n                      <Results titleField = \"play_name\"/>}\n                        bodyHeader={\n                        <> \n                          <PagingInfo/> \n                          <ResultsPerPage options = {[5, 10, 20]}/> \n                        </>\n                        }\n                        bodyFooter={< Paging />}\n                />\n            </div>\n          );\n                      }}\n            </WithSearch>\n        </SearchProvider>\n}\nexport default App; \n"]},"metadata":{},"sourceType":"module"}