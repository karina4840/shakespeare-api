{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx\",\n    _s = $RefreshSig$();\n\n// ============== importing necessary modules==============\nimport React, { useEffect } from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport { PagingInfo, ResultsPerPage, Paging, SearchProvider, Results, SearchBox } from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\"; // ============== retrieving credentials from my account ==============\n// const connector = new AppSearchAPIConnector({\n//   searchKey: \"search-j2upnixcxa1k28efrs8sugrv\", \n//   engineName: \"play-search\", \n//   endpointBase: \"https://play-search.ent.us-central1.gcp.cloud.es.io\", \n//   cacheResponses: false});\n// ============== setting configurations for connection and searches ==============\n// const config = {\n//     apiConnector: connector,\n//     searchQuery: {\n//         //Results display: name of the play, its speaker, and text entry.\n//         result_fields: {\n//             play_name: {\n//               // A snippet means that matching search terms will be highlighted via <em> tags.\n//                 snippet: {\n//                     size: 35, // 35 characters highlighted max.\n//                     fallback: true // Fallback to a \"raw\" result.\n//                 }\n//             },\n//             speaker: {\n//                 snippet: {\n//                     size: 50, \n//                     fallback: true \n//                 }\n//             },\n//             text_entry:{\n//               snippet: {\n//                 size: 50, \n//                 fallback: true \n//             }\n//             }\n//         }\n//     }\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  const [searchInput, setSearchInput] = useState([]);\n\n  const fetchItems = async () => {\n    const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search');\n    const items = await data.json();\n    console.log(items);\n    setItems();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(SearchProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading\",\n          children: \"Shakespeare Work Library\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Layout, {\n          header: /*#__PURE__*/_jsxDEV(SearchBox, {\n            inputProps: {\n              placeholder: \"Search for characters or plays\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this),\n          bodyContent: /*#__PURE__*/_jsxDEV(Results, {\n            titleField: \"play_name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 32\n          }, this),\n          bodyHeader: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(PagingInfo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(ResultsPerPage, {\n              options: [5, 10, 20]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true),\n          bodyFooter: /*#__PURE__*/_jsxDEV(Paging, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"mN21khrcUl65eZsEo3KreN6g0ww=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx"],"names":["React","useEffect","AppSearchAPIConnector","PagingInfo","ResultsPerPage","Paging","SearchProvider","Results","SearchBox","Layout","App","fetchItems","searchInput","setSearchInput","useState","data","fetch","items","json","console","log","setItems","placeholder"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,SACIC,UADJ,EAEIC,cAFJ,EAGIC,MAHJ,EAIIC,cAJJ,EAKIC,OALJ,EAMIC,SANJ,QAOO,0BAPP;AAQA,SAAQC,MAAR,QAAqB,gCAArB;AACA,OAAO,sDAAP,C,CAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACbT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMH,UAAU,GAAG,YAAY;AAC7B,UAAMI,IAAI,GAAG,MAAMC,KAAK,CAAC,uDAAD,CAAxB;AAEA,UAAMC,KAAK,GAAG,MAAMF,IAAI,CAACG,IAAL,EAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAI,IAAAA,QAAQ;AACT,GAND;;AAQE,sBACE,QAAC,KAAD,CAAO,UAAP;AAAA,2BACE,QAAC,cAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGI,QAAC,MAAD;AACE,UAAA,MAAM,eACN,QAAC,SAAD;AACA,YAAA,UAAU,EAAE;AACVC,cAAAA,WAAW,EAAE;AADH;AADZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAQE,UAAA,WAAW,eAAE,QAAC,OAAD;AAAS,YAAA,UAAU,EAAG;AAAtB;AAAA;AAAA;AAAA;AAAA,kBARf;AASE,UAAA,UAAU,eACR;AAAA,oCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,cAAD;AAAgB,cAAA,OAAO,EAAI,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR;AAA3B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,0BAVJ;AAeE,UAAA,UAAU,eAAE,QAAE,MAAF;AAAA;AAAA;AAAA;AAAA;AAfd;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BH;;GA1CQZ,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["// ============== importing necessary modules==============\n\nimport React, { useEffect } from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport {\n    PagingInfo,\n    ResultsPerPage,\n    Paging,\n    SearchProvider,\n    Results,\n    SearchBox\n} from \"@elastic/react-search-ui\";\nimport {Layout} from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\n\n// ============== retrieving credentials from my account ==============\n// const connector = new AppSearchAPIConnector({\n//   searchKey: \"search-j2upnixcxa1k28efrs8sugrv\", \n//   engineName: \"play-search\", \n//   endpointBase: \"https://play-search.ent.us-central1.gcp.cloud.es.io\", \n//   cacheResponses: false});\n\n\n// ============== setting configurations for connection and searches ==============\n\n// const config = {\n//     apiConnector: connector,\n\n//     searchQuery: {\n      \n//         //Results display: name of the play, its speaker, and text entry.\n//         result_fields: {\n//             play_name: {\n//               // A snippet means that matching search terms will be highlighted via <em> tags.\n//                 snippet: {\n//                     size: 35, // 35 characters highlighted max.\n//                     fallback: true // Fallback to a \"raw\" result.\n//                 }\n//             },\n//             speaker: {\n//                 snippet: {\n//                     size: 50, \n//                     fallback: true \n//                 }\n//             },\n//             text_entry:{\n//               snippet: {\n//                 size: 50, \n//                 fallback: true \n//             }\n//             }\n//         }\n//     }\n// };\n\nfunction App() {\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const [searchInput, setSearchInput] = useState([]);\n\n  const fetchItems = async () => {\n    const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search');\n\n    const items = await data.json();\n    console.log(items);\n    setItems();\n  }\n\n    return (\n      <React.StrictMode>\n        <SearchProvider >\n            <div className=\"App\">\n              <h1 className=\"heading\">Shakespeare Work Library</h1>\n               \n                <Layout \n                  header={\n                  <SearchBox \n                  inputProps={{\n                    placeholder: \"Search for characters or plays\"\n                  }}\n                   \n                    />}\n                  bodyContent={<Results titleField = \"play_name\"/>}\n                  bodyHeader={\n                    <> \n                      <PagingInfo/> \n                      <ResultsPerPage options = {[5, 10, 20]}/> \n                    </>\n                  }\n                  bodyFooter={< Paging />}\n                />\n            </div>\n        </SearchProvider>\n      </React.StrictMode>\n    );\n}\nexport default App; \n"]},"metadata":{},"sourceType":"module"}