{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"autocompleteMinimumCharacters\", \"autocompleteResults\", \"autocompleteSuggestions\", \"autocompletedResults\", \"autocompletedSuggestions\", \"className\", \"autocompleteView\", \"inputProps\", \"inputView\", \"onSelectAutocomplete\", \"onSubmit\", \"searchTerm\", \"view\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { SearchBox } from \"@elastic/react-search-ui-views\";\nimport { withSearch } from \"..\";\nimport { Result, Suggestion } from \"../types\";\nexport var SearchBoxContainer = /*#__PURE__*/function (_Component) {\n  _inherits(SearchBoxContainer, _Component);\n\n  var _super = _createSuper(SearchBoxContainer);\n\n  function SearchBoxContainer() {\n    var _this;\n\n    _classCallCheck(this, SearchBoxContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isFocused: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFocus\", function () {\n      _this.setState({\n        isFocused: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBlur\", function () {\n      _this.setState({\n        isFocused: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"completeSuggestion\", function (searchTerm) {\n      var _this$props = _this.props,\n          shouldClearFilters = _this$props.shouldClearFilters,\n          setSearchTerm = _this$props.setSearchTerm;\n      setSearchTerm(searchTerm, {\n        shouldClearFilters: shouldClearFilters\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      var _this$props2 = _this.props,\n          shouldClearFilters = _this$props2.shouldClearFilters,\n          searchTerm = _this$props2.searchTerm,\n          setSearchTerm = _this$props2.setSearchTerm;\n      e.preventDefault();\n      setSearchTerm(searchTerm, {\n        shouldClearFilters: shouldClearFilters\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (value) {\n      var _this$props3 = _this.props,\n          autocompleteMinimumCharacters = _this$props3.autocompleteMinimumCharacters,\n          autocompleteResults = _this$props3.autocompleteResults,\n          autocompleteSuggestions = _this$props3.autocompleteSuggestions,\n          shouldClearFilters = _this$props3.shouldClearFilters,\n          searchAsYouType = _this$props3.searchAsYouType,\n          setSearchTerm = _this$props3.setSearchTerm,\n          debounceLength = _this$props3.debounceLength;\n\n      var options = _objectSpread(_objectSpread({\n        autocompleteMinimumCharacters: autocompleteMinimumCharacters\n      }, (autocompleteResults || autocompleteSuggestions || searchAsYouType) && {\n        debounce: debounceLength || 200\n      }), {}, {\n        shouldClearFilters: shouldClearFilters,\n        refresh: !!searchAsYouType,\n        autocompleteResults: !!autocompleteResults,\n        autocompleteSuggestions: !!autocompleteSuggestions\n      });\n\n      setSearchTerm(value, options);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNotifyAutocompleteSelected\", function (selection) {\n      var _this$props4 = _this.props,\n          autocompleteResults = _this$props4.autocompleteResults,\n          trackAutocompleteClickThrough = _this$props4.trackAutocompleteClickThrough; // Because suggestions don't count as clickthroughs, only\n      // results\n\n      if (autocompleteResults && autocompleteResults.shouldTrackClickThrough !== false && !selection.suggestion) {\n        var _autocompleteResults$ = autocompleteResults.clickThroughTags,\n            clickThroughTags = _autocompleteResults$ === void 0 ? [] : _autocompleteResults$;\n        var id = selection.id.raw;\n        trackAutocompleteClickThrough(id, clickThroughTags);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"defaultOnSelectAutocomplete\", function (selection) {\n      if (!selection) return;\n      var autocompleteResults = _this.props.autocompleteResults;\n\n      _this.handleNotifyAutocompleteSelected(selection);\n\n      if (!selection.suggestion) {\n        var url = selection[autocompleteResults.urlField] ? selection[autocompleteResults.urlField].raw : \"\";\n\n        if (url) {\n          var target = autocompleteResults.linkTarget || \"_self\";\n          window.open(url, target);\n        }\n      } else {\n        _this.completeSuggestion(selection.suggestion);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(SearchBoxContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isFocused = this.state.isFocused;\n\n      var _this$props5 = this.props,\n          autocompleteMinimumCharacters = _this$props5.autocompleteMinimumCharacters,\n          autocompleteResults = _this$props5.autocompleteResults,\n          autocompleteSuggestions = _this$props5.autocompleteSuggestions,\n          autocompletedResults = _this$props5.autocompletedResults,\n          autocompletedSuggestions = _this$props5.autocompletedSuggestions,\n          className = _this$props5.className,\n          autocompleteView = _this$props5.autocompleteView,\n          inputProps = _this$props5.inputProps,\n          inputView = _this$props5.inputView,\n          onSelectAutocomplete = _this$props5.onSelectAutocomplete,\n          onSubmit = _this$props5.onSubmit,\n          searchTerm = _this$props5.searchTerm,\n          view = _this$props5.view,\n          rest = _objectWithoutProperties(_this$props5, _excluded);\n\n      var View = view || SearchBox;\n      var useAutocomplete = (!!autocompleteResults || !!autocompleteSuggestions) && searchTerm.length >= autocompleteMinimumCharacters;\n      var autocompletedSuggestionsCount = Object.entries(autocompletedSuggestions // eslint-disable-next-line no-unused-vars\n      ).reduce(function (acc, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            _ = _ref2[0],\n            value = _ref2[1];\n\n        return acc + value.length;\n      }, 0);\n      var allAutocompletedItemsCount = autocompletedSuggestionsCount + autocompletedResults.length;\n      var handleOnSelectAutocomplete;\n\n      if (onSelectAutocomplete) {\n        handleOnSelectAutocomplete = function handleOnSelectAutocomplete(selection) {\n          onSelectAutocomplete(selection, {\n            notifyAutocompleteSelected: _this2.handleNotifyAutocompleteSelected,\n            completeSuggestion: _this2.completeSuggestion,\n            autocompleteResults: _this2.props.autocompleteResults\n          }, _this2.defaultOnSelectAutocomplete);\n        };\n      }\n\n      var viewProps = _objectSpread({\n        allAutocompletedItemsCount: allAutocompletedItemsCount,\n        autocompleteView: autocompleteView,\n        autocompleteResults: autocompleteResults,\n        autocompleteSuggestions: autocompleteSuggestions,\n        autocompletedResults: autocompletedResults,\n        autocompletedSuggestions: autocompletedSuggestions,\n        className: className,\n        autocompletedSuggestionsCount: autocompletedSuggestionsCount,\n        completeSuggestion: this.completeSuggestion,\n        isFocused: isFocused,\n        notifyAutocompleteSelected: this.handleNotifyAutocompleteSelected,\n        onChange: function onChange(value) {\n          return _this2.handleChange(value);\n        },\n        onSelectAutocomplete: handleOnSelectAutocomplete || this.defaultOnSelectAutocomplete,\n        onSubmit: onSubmit ? function (e) {\n          e.preventDefault();\n          onSubmit(searchTerm);\n        } : this.handleSubmit,\n        useAutocomplete: useAutocomplete,\n        value: searchTerm,\n        inputProps: _objectSpread({\n          onFocus: this.handleFocus,\n          onBlur: this.handleBlur\n        }, inputProps),\n        inputView: inputView\n      }, rest);\n\n      return /*#__PURE__*/React.createElement(View, viewProps);\n    }\n  }]);\n\n  return SearchBoxContainer;\n}(Component);\n\n_defineProperty(SearchBoxContainer, \"propTypes\", {\n  // Props\n  autocompleteMinimumCharacters: PropTypes.number,\n  autocompleteResults: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    clickThroughTags: PropTypes.arrayOf(PropTypes.string),\n    linkTarget: PropTypes.string,\n    sectionTitle: PropTypes.string,\n    shouldTrackClickThrough: PropTypes.bool,\n    titleField: PropTypes.string.isRequired,\n    urlField: PropTypes.string.isRequired\n  })]),\n  autocompleteSuggestions: PropTypes.oneOfType([PropTypes.bool, PropTypes.exact({\n    sectionTitle: PropTypes.string\n  }), PropTypes.objectOf(PropTypes.exact({\n    sectionTitle: PropTypes.string\n  }))]),\n  autocompleteView: PropTypes.func,\n  className: PropTypes.string,\n  shouldClearFilters: PropTypes.bool,\n  debounceLength: PropTypes.number,\n  inputProps: PropTypes.object,\n  inputView: PropTypes.func,\n  onSelectAutocomplete: PropTypes.func,\n  onSubmit: PropTypes.func,\n  searchAsYouType: PropTypes.bool,\n  view: PropTypes.func,\n  // State\n  autocompletedResults: PropTypes.arrayOf(Result).isRequired,\n  autocompletedSuggestions: PropTypes.objectOf(PropTypes.arrayOf(Suggestion)).isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  // Actions\n  setSearchTerm: PropTypes.func.isRequired,\n  trackAutocompleteClickThrough: PropTypes.func.isRequired\n});\n\n_defineProperty(SearchBoxContainer, \"defaultProps\", {\n  autocompleteMinimumCharacters: 0,\n  shouldClearFilters: true\n});\n\nexport default withSearch(function (_ref3) {\n  var autocompletedResults = _ref3.autocompletedResults,\n      autocompletedSuggestions = _ref3.autocompletedSuggestions,\n      searchTerm = _ref3.searchTerm,\n      setSearchTerm = _ref3.setSearchTerm,\n      trackAutocompleteClickThrough = _ref3.trackAutocompleteClickThrough;\n  return {\n    autocompletedResults: autocompletedResults,\n    autocompletedSuggestions: autocompletedSuggestions,\n    searchTerm: searchTerm,\n    setSearchTerm: setSearchTerm,\n    trackAutocompleteClickThrough: trackAutocompleteClickThrough\n  };\n})(SearchBoxContainer);","map":{"version":3,"mappings":"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","names":["PropTypes","React","Component","SearchBox","withSearch","Result","Suggestion","SearchBoxContainer","_inherits","_classCallCheck","args","_this","_defineProperty","isFocused","setState","props","shouldClearFilters","setSearchTerm","searchTerm","e","preventDefault","autocompleteMinimumCharacters","autocompleteResults","autocompleteSuggestions","searchAsYouType","debounceLength","options","debounce","refresh","value","trackAutocompleteClickThrough","shouldTrackClickThrough","selection","suggestion","clickThroughTags","id","raw","handleNotifyAutocompleteSelected","url","urlField","target","linkTarget","window","open","completeSuggestion","_createClass","key","state","autocompletedResults","autocompletedSuggestions","className","autocompleteView","inputProps","inputView","onSelectAutocomplete","onSubmit","view","rest","View","useAutocomplete","length","autocompletedSuggestionsCount","Object","entries","reduce","acc","_","allAutocompletedItemsCount","handleOnSelectAutocomplete","notifyAutocompleteSelected","_this2","defaultOnSelectAutocomplete","viewProps","onChange","handleChange","handleSubmit","onFocus","handleFocus","onBlur","handleBlur","number","oneOfType","bool","shape","arrayOf","string","sectionTitle","titleField","isRequired","exact","objectOf","func","object"],"sources":["/Users/karina/Main/Study/Web Dev/elasticsearch-api-test/node_modules/@elastic/react-search-ui/src/containers/SearchBox.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { SearchBox } from \"@elastic/react-search-ui-views\";\n\nimport { withSearch } from \"..\";\nimport { Result, Suggestion } from \"../types\";\n\nexport class SearchBoxContainer extends Component {\n  static propTypes = {\n    // Props\n    autocompleteMinimumCharacters: PropTypes.number,\n    autocompleteResults: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.shape({\n        clickThroughTags: PropTypes.arrayOf(PropTypes.string),\n        linkTarget: PropTypes.string,\n        sectionTitle: PropTypes.string,\n        shouldTrackClickThrough: PropTypes.bool,\n        titleField: PropTypes.string.isRequired,\n        urlField: PropTypes.string.isRequired\n      })\n    ]),\n    autocompleteSuggestions: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.exact({\n        sectionTitle: PropTypes.string\n      }),\n      PropTypes.objectOf(\n        PropTypes.exact({\n          sectionTitle: PropTypes.string\n        })\n      )\n    ]),\n    autocompleteView: PropTypes.func,\n    className: PropTypes.string,\n    shouldClearFilters: PropTypes.bool,\n    debounceLength: PropTypes.number,\n    inputProps: PropTypes.object,\n    inputView: PropTypes.func,\n    onSelectAutocomplete: PropTypes.func,\n    onSubmit: PropTypes.func,\n    searchAsYouType: PropTypes.bool,\n    view: PropTypes.func,\n    // State\n    autocompletedResults: PropTypes.arrayOf(Result).isRequired,\n    autocompletedSuggestions: PropTypes.objectOf(PropTypes.arrayOf(Suggestion))\n      .isRequired,\n    searchTerm: PropTypes.string.isRequired,\n    // Actions\n    setSearchTerm: PropTypes.func.isRequired,\n    trackAutocompleteClickThrough: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    autocompleteMinimumCharacters: 0,\n    shouldClearFilters: true\n  };\n\n  state = {\n    isFocused: false\n  };\n\n  handleFocus = () => {\n    this.setState({\n      isFocused: true\n    });\n  };\n\n  handleBlur = () => {\n    this.setState({\n      isFocused: false\n    });\n  };\n\n  completeSuggestion = searchTerm => {\n    const { shouldClearFilters, setSearchTerm } = this.props;\n    setSearchTerm(searchTerm, {\n      shouldClearFilters\n    });\n  };\n\n  handleSubmit = e => {\n    const { shouldClearFilters, searchTerm, setSearchTerm } = this.props;\n\n    e.preventDefault();\n    setSearchTerm(searchTerm, {\n      shouldClearFilters\n    });\n  };\n\n  handleChange = value => {\n    const {\n      autocompleteMinimumCharacters,\n      autocompleteResults,\n      autocompleteSuggestions,\n      shouldClearFilters,\n      searchAsYouType,\n      setSearchTerm,\n      debounceLength\n    } = this.props;\n\n    const options = {\n      autocompleteMinimumCharacters,\n      ...((autocompleteResults ||\n        autocompleteSuggestions ||\n        searchAsYouType) && {\n        debounce: debounceLength || 200\n      }),\n      shouldClearFilters,\n      refresh: !!searchAsYouType,\n      autocompleteResults: !!autocompleteResults,\n      autocompleteSuggestions: !!autocompleteSuggestions\n    };\n\n    setSearchTerm(value, options);\n  };\n\n  handleNotifyAutocompleteSelected = selection => {\n    const { autocompleteResults, trackAutocompleteClickThrough } = this.props;\n    // Because suggestions don't count as clickthroughs, only\n    // results\n    if (\n      autocompleteResults &&\n      autocompleteResults.shouldTrackClickThrough !== false &&\n      !selection.suggestion\n    ) {\n      const { clickThroughTags = [] } = autocompleteResults;\n      const id = selection.id.raw;\n      trackAutocompleteClickThrough(id, clickThroughTags);\n    }\n  };\n\n  defaultOnSelectAutocomplete = selection => {\n    if (!selection) return;\n\n    const { autocompleteResults } = this.props;\n\n    this.handleNotifyAutocompleteSelected(selection);\n    if (!selection.suggestion) {\n      const url = selection[autocompleteResults.urlField]\n        ? selection[autocompleteResults.urlField].raw\n        : \"\";\n      if (url) {\n        const target = autocompleteResults.linkTarget || \"_self\";\n        window.open(url, target);\n      }\n    } else {\n      this.completeSuggestion(selection.suggestion);\n    }\n  };\n\n  render() {\n    const { isFocused } = this.state;\n    const {\n      autocompleteMinimumCharacters,\n      autocompleteResults,\n      autocompleteSuggestions,\n      autocompletedResults,\n      autocompletedSuggestions,\n      className,\n      autocompleteView,\n      inputProps,\n      inputView,\n      onSelectAutocomplete,\n      onSubmit,\n      searchTerm,\n      view,\n      ...rest\n    } = this.props;\n\n    const View = view || SearchBox;\n    const useAutocomplete =\n      (!!autocompleteResults || !!autocompleteSuggestions) &&\n      searchTerm.length >= autocompleteMinimumCharacters;\n    const autocompletedSuggestionsCount = Object.entries(\n      autocompletedSuggestions\n      // eslint-disable-next-line no-unused-vars\n    ).reduce((acc, [_, value]) => acc + value.length, 0);\n    const allAutocompletedItemsCount =\n      autocompletedSuggestionsCount + autocompletedResults.length;\n\n    let handleOnSelectAutocomplete;\n    if (onSelectAutocomplete) {\n      handleOnSelectAutocomplete = selection => {\n        onSelectAutocomplete(\n          selection,\n          {\n            notifyAutocompleteSelected: this.handleNotifyAutocompleteSelected,\n            completeSuggestion: this.completeSuggestion,\n            autocompleteResults: this.props.autocompleteResults\n          },\n          this.defaultOnSelectAutocomplete\n        );\n      };\n    }\n\n    const viewProps = {\n      allAutocompletedItemsCount: allAutocompletedItemsCount,\n      autocompleteView,\n      autocompleteResults: autocompleteResults,\n      autocompleteSuggestions: autocompleteSuggestions,\n      autocompletedResults: autocompletedResults,\n      autocompletedSuggestions: autocompletedSuggestions,\n      className,\n      autocompletedSuggestionsCount: autocompletedSuggestionsCount,\n      completeSuggestion: this.completeSuggestion,\n      isFocused: isFocused,\n      notifyAutocompleteSelected: this.handleNotifyAutocompleteSelected,\n      onChange: value => this.handleChange(value),\n      onSelectAutocomplete:\n        handleOnSelectAutocomplete || this.defaultOnSelectAutocomplete,\n      onSubmit: onSubmit\n        ? e => {\n            e.preventDefault();\n            onSubmit(searchTerm);\n          }\n        : this.handleSubmit,\n      useAutocomplete: useAutocomplete,\n      value: searchTerm,\n      inputProps: {\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        ...inputProps\n      },\n      inputView,\n      ...rest\n    };\n\n    return <View {...viewProps} />;\n  }\n}\n\nexport default withSearch(\n  ({\n    autocompletedResults,\n    autocompletedSuggestions,\n    searchTerm,\n    setSearchTerm,\n    trackAutocompleteClickThrough\n  }) => ({\n    autocompletedResults,\n    autocompletedSuggestions,\n    searchTerm,\n    setSearchTerm,\n    trackAutocompleteClickThrough\n  })\n)(SearchBoxContainer);\n"]},"metadata":{},"sourceType":"module"}