{"ast":null,"code":"var _jsxFileName = \"/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBox from './SearchBox';\nimport Pagination from './Pagination'; //import Pagination from '@mui/material/Pagination';\n//import usePagination from \"./Pagination\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // ============ setting the initial states for items and search ============\n  const [items, setItems] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10); // ============ fetching the data from API and store values ============\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const fetchItems = async () => {\n    const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search?size=100');\n    const itemsObj = await data.json();\n    const items = itemsObj.hits.hits; // ============ store just fetched items in an array ============   \n\n    setItems(items);\n  }; // ============ filtering the plays according to the input ============\n\n\n  const filteredPlays = items.filter(play => {\n    return play._source.text_entry.toLowerCase().includes(search.toLowerCase());\n  }); // // ============ pagination ============\n\n  const [page, setPage] = useState(1);\n  const perPage = 10; // const count = Math.ceil(items.length / perPage)\n  // const DATA = usePagination(items, perPage)\n  // const handleChange = (e, pg) => {\n  //     setPage(pg);\n  //     DATA.jump(pg);\n  //   }; \n  // ============ rendering the App ============\n\n  return !items.length ?\n  /*#__PURE__*/\n  // renders a loading page while fetching data       \n  _jsxDEV(\"div\", {\n    className: \"loading-page\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"loading-page-text\",\n      children: \" Loading, please wait... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 36\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 6\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Shakespeare Work Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-body\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: event => setSearch(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        plays: filteredPlays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"BNBJHEsOy3uuH+LfHUb7RMFKIJM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karina/Main/Study/Web Dev/fix-api-test/src/Components/App.jsx"],"names":["React","useState","useEffect","CardList","SearchBox","Pagination","App","items","setItems","search","setSearch","posts","setPosts","currentPage","setCurrentPage","postsPerPage","fetchItems","data","fetch","itemsObj","json","hits","filteredPlays","filter","play","_source","text_entry","toLowerCase","includes","page","setPage","perPage","length","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEF,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACc,YAAD,IAAiBd,QAAQ,CAAC,EAAD,CAA/B,CATa,CAWX;;AACAC,EAAAA,SAAS,CAAC,MAAM;AAACc,IAAAA,UAAU;AAAG,GAArB,EAAuB,EAAvB,CAAT;;AAEA,QAAMA,UAAU,GAAG,YAAW;AAC1B,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,gEAAD,CAAxB;AACA,UAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAvB;AACA,UAAMb,KAAK,GAAGY,QAAQ,CAACE,IAAT,CAAcA,IAA5B,CAH0B,CAK1B;;AACAb,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAPD,CAdW,CAwBX;;;AACA,QAAMe,aAAa,GAAGf,KAAK,CAACgB,MAAN,CAAcC,IAAD,IAAU;AACzC,WAAOA,IAAI,CAACC,OAAL,CAAaC,UAAb,CAAwBC,WAAxB,GAAsCC,QAAtC,CAA+CnB,MAAM,CAACkB,WAAP,EAA/C,CAAP;AACH,GAFqB,CAAtB,CAzBW,CA8BX;;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM8B,OAAO,GAAG,EAAhB,CAhCW,CAkCX;AACA;AAEA;AACA;AACA;AACA;AAGA;;AACA,SAAO,CAACxB,KAAK,CAACyB,MAAP;AAAA;AAEP;AACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BAA8B;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,UAHM,gBAMH;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,YAAY,EAAGC,KAAD,IAAWvB,SAAS,CAACuB,KAAK,CAACC,MAAN,CAAaC,KAAd;AADtC;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEb;AAAjB;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ;AA8BH;;GA1EQhB,G;;KAAAA,G;AA2ET,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBox from './SearchBox';\nimport Pagination from './Pagination';\n//import Pagination from '@mui/material/Pagination';\n//import usePagination from \"./Pagination\";\n\nfunction App() {\n\n    // ============ setting the initial states for items and search ============\n    const [items, setItems] = useState([]);\n    const [search, setSearch] = useState(\"\");\n\n    const [posts, setPosts] = useState([]);\n  \n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n    // ============ fetching the data from API and store values ============\n    useEffect(() => {fetchItems()}, []);\n\n    const fetchItems = async() => {\n        const data = await fetch('http://cosmic-elastic.eu.ngrok.io/shakespeare/_search?size=100');\n        const itemsObj = await data.json();\n        const items = itemsObj.hits.hits;\n    \n        // ============ store just fetched items in an array ============   \n        setItems(items);\n    }\n\n\n    // ============ filtering the plays according to the input ============\n    const filteredPlays = items.filter((play) => {\n        return play._source.text_entry.toLowerCase().includes(search.toLowerCase());\n    });\n \n\n    // // ============ pagination ============\n    const [page, setPage] = useState(1);\n    const perPage = 10;\n\n    // const count = Math.ceil(items.length / perPage)\n    // const DATA = usePagination(items, perPage)\n\n    // const handleChange = (e, pg) => {\n    //     setPage(pg);\n    //     DATA.jump(pg);\n    //   }; \n\n\n    // ============ rendering the App ============\n    return !items.length ? ( \n\n    // renders a loading page while fetching data       \n     <div className=\"loading-page\"><h1 className=\"loading-page-text\"> Loading, please wait... </h1></div> \n     ) : ( \n\n        <div className=\"App\">\n            <h1 className=\"heading\">Shakespeare Work Library</h1>\n            <div className=\"app-body\">\n                <SearchBox \n                    searchChange={(event) => setSearch(event.target.value)}\n                />\n\n              {/* {DATA.currentData().map(value => {\n                    return />\n                })} */}\n                \n                <CardList plays={filteredPlays} />\n                 {/* <Pagination \n                count={count}\n                size=\"large\"\n                page={page}\n                variant=\"outlined\"\n                shape=\"rounded\"\n                onChange={handleChange}\n                color=\"primary\" \n                 />  */}\n            </div>\n        </div> \n    );\n}\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}