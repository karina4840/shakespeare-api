{"ast":null,"code":"import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { FacetValue } from \"./types\";\nimport { appendClassName, getFilterValueDisplay } from \"./view-helpers\";\n\nfunction MultiCheckboxFacet(_ref) {\n  var className = _ref.className,\n      label = _ref.label,\n      onMoreClick = _ref.onMoreClick,\n      onRemove = _ref.onRemove,\n      onSelect = _ref.onSelect,\n      options = _ref.options,\n      showMore = _ref.showMore,\n      showSearch = _ref.showSearch,\n      onSearch = _ref.onSearch,\n      searchPlaceholder = _ref.searchPlaceholder;\n  return /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: appendClassName(\"sui-facet\", className)\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    className: \"sui-facet__title\"\n  }, label), showSearch && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-facet-search\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"sui-facet-search__text-input\",\n    type: \"search\",\n    placeholder: searchPlaceholder || \"Search\",\n    onChange: function onChange(e) {\n      onSearch(e.target.value);\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-multi-checkbox-facet\"\n  }, options.length < 1 && /*#__PURE__*/React.createElement(\"div\", null, \"No matching options\"), options.map(function (option) {\n    var checked = option.selected;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      key: \"\".concat(getFilterValueDisplay(option.value)),\n      htmlFor: \"example_facet_\".concat(label).concat(getFilterValueDisplay(option.value)),\n      className: \"sui-multi-checkbox-facet__option-label\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sui-multi-checkbox-facet__option-input-wrapper\"\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"example_facet_\".concat(label).concat(getFilterValueDisplay(option.value)),\n      type: \"checkbox\",\n      className: \"sui-multi-checkbox-facet__checkbox\",\n      checked: checked,\n      onChange: function onChange() {\n        return checked ? onRemove(option.value) : onSelect(option.value);\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sui-multi-checkbox-facet__input-text\"\n    }, getFilterValueDisplay(option.value))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sui-multi-checkbox-facet__option-count\"\n    }, option.count.toLocaleString(\"en\")));\n  })), showMore && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"sui-facet-view-more\",\n    onClick: onMoreClick,\n    \"aria-label\": \"Show more options\"\n  }, \"+ More\"));\n}\n\nMultiCheckboxFacet.propTypes = {\n  label: PropTypes.string.isRequired,\n  onMoreClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onSearch: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(FacetValue).isRequired,\n  showMore: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  showSearch: PropTypes.bool,\n  searchPlaceholder: PropTypes.string\n};\nexport default MultiCheckboxFacet;","map":{"version":3,"mappings":"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","names":["PropTypes","React","FacetValue","appendClassName","getFilterValueDisplay","MultiCheckboxFacet","className","label","onMoreClick","onRemove","onSelect","options","showMore","showSearch","onSearch","searchPlaceholder","type","placeholder","onChange","e","target","value","length","map","checked","option","selected","key","htmlFor","id","count","toLocaleString","onClick","propTypes","string","isRequired","func","arrayOf","bool"],"sources":["/Users/karina/Main/Study/Web Dev/elasticsearch-test-api/node_modules/@elastic/react-search-ui-views/src/MultiCheckboxFacet.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { FacetValue } from \"./types\";\nimport { appendClassName, getFilterValueDisplay } from \"./view-helpers\";\n\nfunction MultiCheckboxFacet({\n  className,\n  label,\n  onMoreClick,\n  onRemove,\n  onSelect,\n  options,\n  showMore,\n  showSearch,\n  onSearch,\n  searchPlaceholder\n}) {\n  return (\n    <fieldset className={appendClassName(\"sui-facet\", className)}>\n      <legend className=\"sui-facet__title\">{label}</legend>\n\n      {showSearch && (\n        <div className=\"sui-facet-search\">\n          <input\n            className=\"sui-facet-search__text-input\"\n            type=\"search\"\n            placeholder={searchPlaceholder || \"Search\"}\n            onChange={e => {\n              onSearch(e.target.value);\n            }}\n          />\n        </div>\n      )}\n\n      <div className=\"sui-multi-checkbox-facet\">\n        {options.length < 1 && <div>No matching options</div>}\n        {options.map(option => {\n          const checked = option.selected;\n          return (\n            <label\n              key={`${getFilterValueDisplay(option.value)}`}\n              htmlFor={`example_facet_${label}${getFilterValueDisplay(\n                option.value\n              )}`}\n              className=\"sui-multi-checkbox-facet__option-label\"\n            >\n              <div className=\"sui-multi-checkbox-facet__option-input-wrapper\">\n                <input\n                  id={`example_facet_${label}${getFilterValueDisplay(\n                    option.value\n                  )}`}\n                  type=\"checkbox\"\n                  className=\"sui-multi-checkbox-facet__checkbox\"\n                  checked={checked}\n                  onChange={() =>\n                    checked ? onRemove(option.value) : onSelect(option.value)\n                  }\n                />\n                <span className=\"sui-multi-checkbox-facet__input-text\">\n                  {getFilterValueDisplay(option.value)}\n                </span>\n              </div>\n              <span className=\"sui-multi-checkbox-facet__option-count\">\n                {option.count.toLocaleString(\"en\")}\n              </span>\n            </label>\n          );\n        })}\n      </div>\n\n      {showMore && (\n        <button\n          type=\"button\"\n          className=\"sui-facet-view-more\"\n          onClick={onMoreClick}\n          aria-label=\"Show more options\"\n        >\n          + More\n        </button>\n      )}\n    </fieldset>\n  );\n}\n\nMultiCheckboxFacet.propTypes = {\n  label: PropTypes.string.isRequired,\n  onMoreClick: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onSearch: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(FacetValue).isRequired,\n  showMore: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  showSearch: PropTypes.bool,\n  searchPlaceholder: PropTypes.string\n};\n\nexport default MultiCheckboxFacet;\n"]},"metadata":{},"sourceType":"module"}