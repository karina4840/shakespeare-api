import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
var _excluded = ["className", "clickThroughTags", "resultView", "results", "shouldTrackClickThrough", "titleField", "urlField", "thumbnailField", "view"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import PropTypes from "prop-types";
import React, { Component } from "react";
import { Result, Results } from "@elastic/react-search-ui-views";
import { withSearch } from "..";
import { Result as ResultContainer } from ".";
import { Result as ResultType } from "../types";

function getRaw(result, value) {
  if (!result[value] || !result[value].raw) return;
  return result[value].raw;
}

export var ResultsContainer = /*#__PURE__*/function (_Component) {
  _inherits(ResultsContainer, _Component);

  var _super = _createSuper(ResultsContainer);

  function ResultsContainer() {
    _classCallCheck(this, ResultsContainer);

    return _super.apply(this, arguments);
  }

  _createClass(ResultsContainer, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          clickThroughTags = _this$props.clickThroughTags,
          resultView = _this$props.resultView,
          results = _this$props.results,
          shouldTrackClickThrough = _this$props.shouldTrackClickThrough,
          titleField = _this$props.titleField,
          urlField = _this$props.urlField,
          thumbnailField = _this$props.thumbnailField,
          view = _this$props.view,
          rest = _objectWithoutProperties(_this$props, _excluded);

      var View = view || Results;
      var ResultView = resultView || Result;
      var children = results.map(function (result) {
        return /*#__PURE__*/React.createElement(ResultContainer, {
          key: "result-".concat(getRaw(result, "id")),
          titleField: titleField,
          urlField: urlField,
          thumbnailField: thumbnailField,
          view: ResultView,
          result: result,
          shouldTrackClickThrough: shouldTrackClickThrough,
          clickThroughTags: clickThroughTags
        });
      });

      var viewProps = _objectSpread({
        className: className,
        children: children
      }, rest);

      return /*#__PURE__*/React.createElement(View, viewProps);
    }
  }]);

  return ResultsContainer;
}(Component);

_defineProperty(ResultsContainer, "propTypes", {
  // Props
  className: PropTypes.string,
  clickThroughTags: PropTypes.arrayOf(PropTypes.string),
  resultView: PropTypes.func,
  titleField: PropTypes.string,
  urlField: PropTypes.string,
  thumbnailField: PropTypes.string,
  view: PropTypes.func,
  shouldTrackClickThrough: PropTypes.bool,
  // State
  results: PropTypes.arrayOf(ResultType).isRequired
});

_defineProperty(ResultsContainer, "defaultProps", {
  clickThroughTags: [],
  shouldTrackClickThrough: true
});

export default withSearch(function (_ref) {
  var results = _ref.results;
  return {
    results: results
  };
})(ResultsContainer);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb250YWluZXJzL1Jlc3VsdHMuanMiXSwibmFtZXMiOlsiUHJvcFR5cGVzIiwiUmVhY3QiLCJDb21wb25lbnQiLCJSZXN1bHQiLCJSZXN1bHRzIiwid2l0aFNlYXJjaCIsIlJlc3VsdENvbnRhaW5lciIsIlJlc3VsdFR5cGUiLCJnZXRSYXciLCJyZXN1bHQiLCJ2YWx1ZSIsInJhdyIsIlJlc3VsdHNDb250YWluZXIiLCJwcm9wcyIsImNsYXNzTmFtZSIsImNsaWNrVGhyb3VnaFRhZ3MiLCJyZXN1bHRWaWV3IiwicmVzdWx0cyIsInNob3VsZFRyYWNrQ2xpY2tUaHJvdWdoIiwidGl0bGVGaWVsZCIsInVybEZpZWxkIiwidGh1bWJuYWlsRmllbGQiLCJ2aWV3IiwicmVzdCIsIlZpZXciLCJSZXN1bHRWaWV3IiwiY2hpbGRyZW4iLCJtYXAiLCJ2aWV3UHJvcHMiLCJzdHJpbmciLCJhcnJheU9mIiwiZnVuYyIsImJvb2wiLCJpc1JlcXVpcmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU9BLFNBQVAsTUFBc0IsWUFBdEI7QUFDQSxPQUFPQyxLQUFQLElBQWdCQyxTQUFoQixRQUFpQyxPQUFqQztBQUNBLFNBQVNDLE1BQVQsRUFBaUJDLE9BQWpCLFFBQWdDLGdDQUFoQztBQUVBLFNBQVNDLFVBQVQsUUFBMkIsSUFBM0I7QUFDQSxTQUFTRixNQUFNLElBQUlHLGVBQW5CLFFBQTBDLEdBQTFDO0FBQ0EsU0FBU0gsTUFBTSxJQUFJSSxVQUFuQixRQUFxQyxVQUFyQzs7QUFFQSxTQUFTQyxNQUFULENBQWdCQyxNQUFoQixFQUF3QkMsS0FBeEIsRUFBK0I7QUFDN0IsTUFBSSxDQUFDRCxNQUFNLENBQUNDLEtBQUQsQ0FBUCxJQUFrQixDQUFDRCxNQUFNLENBQUNDLEtBQUQsQ0FBTixDQUFjQyxHQUFyQyxFQUEwQztBQUMxQyxTQUFPRixNQUFNLENBQUNDLEtBQUQsQ0FBTixDQUFjQyxHQUFyQjtBQUNEOztBQUVELFdBQWFDLGdCQUFiO0FBQUE7O0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSxXQW9CRSxrQkFBUztBQUNQLHdCQVdJLEtBQUtDLEtBWFQ7QUFBQSxVQUNFQyxTQURGLGVBQ0VBLFNBREY7QUFBQSxVQUVFQyxnQkFGRixlQUVFQSxnQkFGRjtBQUFBLFVBR0VDLFVBSEYsZUFHRUEsVUFIRjtBQUFBLFVBSUVDLE9BSkYsZUFJRUEsT0FKRjtBQUFBLFVBS0VDLHVCQUxGLGVBS0VBLHVCQUxGO0FBQUEsVUFNRUMsVUFORixlQU1FQSxVQU5GO0FBQUEsVUFPRUMsUUFQRixlQU9FQSxRQVBGO0FBQUEsVUFRRUMsY0FSRixlQVFFQSxjQVJGO0FBQUEsVUFTRUMsSUFURixlQVNFQSxJQVRGO0FBQUEsVUFVS0MsSUFWTDs7QUFhQSxVQUFNQyxJQUFJLEdBQUdGLElBQUksSUFBSWxCLE9BQXJCO0FBQ0EsVUFBTXFCLFVBQVUsR0FBR1QsVUFBVSxJQUFJYixNQUFqQztBQUVBLFVBQU11QixRQUFRLEdBQUdULE9BQU8sQ0FBQ1UsR0FBUixDQUFZLFVBQUFsQixNQUFNO0FBQUEsNEJBQ2pDLG9CQUFDLGVBQUQ7QUFDRSxVQUFBLEdBQUcsbUJBQVlELE1BQU0sQ0FBQ0MsTUFBRCxFQUFTLElBQVQsQ0FBbEIsQ0FETDtBQUVFLFVBQUEsVUFBVSxFQUFFVSxVQUZkO0FBR0UsVUFBQSxRQUFRLEVBQUVDLFFBSFo7QUFJRSxVQUFBLGNBQWMsRUFBRUMsY0FKbEI7QUFLRSxVQUFBLElBQUksRUFBRUksVUFMUjtBQU1FLFVBQUEsTUFBTSxFQUFFaEIsTUFOVjtBQU9FLFVBQUEsdUJBQXVCLEVBQUVTLHVCQVAzQjtBQVFFLFVBQUEsZ0JBQWdCLEVBQUVIO0FBUnBCLFVBRGlDO0FBQUEsT0FBbEIsQ0FBakI7O0FBYUEsVUFBTWEsU0FBUztBQUNiZCxRQUFBQSxTQUFTLEVBQVRBLFNBRGE7QUFFYlksUUFBQUEsUUFBUSxFQUFSQTtBQUZhLFNBR1ZILElBSFUsQ0FBZjs7QUFNQSwwQkFBTyxvQkFBQyxJQUFELEVBQVVLLFNBQVYsQ0FBUDtBQUNEO0FBekRIOztBQUFBO0FBQUEsRUFBc0MxQixTQUF0Qzs7Z0JBQWFVLGdCLGVBQ1E7QUFDakI7QUFDQUUsRUFBQUEsU0FBUyxFQUFFZCxTQUFTLENBQUM2QixNQUZKO0FBR2pCZCxFQUFBQSxnQkFBZ0IsRUFBRWYsU0FBUyxDQUFDOEIsT0FBVixDQUFrQjlCLFNBQVMsQ0FBQzZCLE1BQTVCLENBSEQ7QUFJakJiLEVBQUFBLFVBQVUsRUFBRWhCLFNBQVMsQ0FBQytCLElBSkw7QUFLakJaLEVBQUFBLFVBQVUsRUFBRW5CLFNBQVMsQ0FBQzZCLE1BTEw7QUFNakJULEVBQUFBLFFBQVEsRUFBRXBCLFNBQVMsQ0FBQzZCLE1BTkg7QUFPakJSLEVBQUFBLGNBQWMsRUFBRXJCLFNBQVMsQ0FBQzZCLE1BUFQ7QUFRakJQLEVBQUFBLElBQUksRUFBRXRCLFNBQVMsQ0FBQytCLElBUkM7QUFTakJiLEVBQUFBLHVCQUF1QixFQUFFbEIsU0FBUyxDQUFDZ0MsSUFUbEI7QUFVakI7QUFDQWYsRUFBQUEsT0FBTyxFQUFFakIsU0FBUyxDQUFDOEIsT0FBVixDQUFrQnZCLFVBQWxCLEVBQThCMEI7QUFYdEIsQzs7Z0JBRFJyQixnQixrQkFlVztBQUNwQkcsRUFBQUEsZ0JBQWdCLEVBQUUsRUFERTtBQUVwQkcsRUFBQUEsdUJBQXVCLEVBQUU7QUFGTCxDOztBQTZDeEIsZUFBZWIsVUFBVSxDQUFDO0FBQUEsTUFBR1ksT0FBSCxRQUFHQSxPQUFIO0FBQUEsU0FBa0I7QUFBRUEsSUFBQUEsT0FBTyxFQUFQQTtBQUFGLEdBQWxCO0FBQUEsQ0FBRCxDQUFWLENBQTJDTCxnQkFBM0MsQ0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFJlc3VsdCwgUmVzdWx0cyB9IGZyb20gXCJAZWxhc3RpYy9yZWFjdC1zZWFyY2gtdWktdmlld3NcIjtcblxuaW1wb3J0IHsgd2l0aFNlYXJjaCB9IGZyb20gXCIuLlwiO1xuaW1wb3J0IHsgUmVzdWx0IGFzIFJlc3VsdENvbnRhaW5lciB9IGZyb20gXCIuXCI7XG5pbXBvcnQgeyBSZXN1bHQgYXMgUmVzdWx0VHlwZSB9IGZyb20gXCIuLi90eXBlc1wiO1xuXG5mdW5jdGlvbiBnZXRSYXcocmVzdWx0LCB2YWx1ZSkge1xuICBpZiAoIXJlc3VsdFt2YWx1ZV0gfHwgIXJlc3VsdFt2YWx1ZV0ucmF3KSByZXR1cm47XG4gIHJldHVybiByZXN1bHRbdmFsdWVdLnJhdztcbn1cblxuZXhwb3J0IGNsYXNzIFJlc3VsdHNDb250YWluZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8vIFByb3BzXG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNsaWNrVGhyb3VnaFRhZ3M6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpLFxuICAgIHJlc3VsdFZpZXc6IFByb3BUeXBlcy5mdW5jLFxuICAgIHRpdGxlRmllbGQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdXJsRmllbGQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdGh1bWJuYWlsRmllbGQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdmlldzogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc2hvdWxkVHJhY2tDbGlja1Rocm91Z2g6IFByb3BUeXBlcy5ib29sLFxuICAgIC8vIFN0YXRlXG4gICAgcmVzdWx0czogUHJvcFR5cGVzLmFycmF5T2YoUmVzdWx0VHlwZSkuaXNSZXF1aXJlZFxuICB9O1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgY2xpY2tUaHJvdWdoVGFnczogW10sXG4gICAgc2hvdWxkVHJhY2tDbGlja1Rocm91Z2g6IHRydWVcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgY2xhc3NOYW1lLFxuICAgICAgY2xpY2tUaHJvdWdoVGFncyxcbiAgICAgIHJlc3VsdFZpZXcsXG4gICAgICByZXN1bHRzLFxuICAgICAgc2hvdWxkVHJhY2tDbGlja1Rocm91Z2gsXG4gICAgICB0aXRsZUZpZWxkLFxuICAgICAgdXJsRmllbGQsXG4gICAgICB0aHVtYm5haWxGaWVsZCxcbiAgICAgIHZpZXcsXG4gICAgICAuLi5yZXN0XG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBWaWV3ID0gdmlldyB8fCBSZXN1bHRzO1xuICAgIGNvbnN0IFJlc3VsdFZpZXcgPSByZXN1bHRWaWV3IHx8IFJlc3VsdDtcblxuICAgIGNvbnN0IGNoaWxkcmVuID0gcmVzdWx0cy5tYXAocmVzdWx0ID0+IChcbiAgICAgIDxSZXN1bHRDb250YWluZXJcbiAgICAgICAga2V5PXtgcmVzdWx0LSR7Z2V0UmF3KHJlc3VsdCwgXCJpZFwiKX1gfVxuICAgICAgICB0aXRsZUZpZWxkPXt0aXRsZUZpZWxkfVxuICAgICAgICB1cmxGaWVsZD17dXJsRmllbGR9XG4gICAgICAgIHRodW1ibmFpbEZpZWxkPXt0aHVtYm5haWxGaWVsZH1cbiAgICAgICAgdmlldz17UmVzdWx0Vmlld31cbiAgICAgICAgcmVzdWx0PXtyZXN1bHR9XG4gICAgICAgIHNob3VsZFRyYWNrQ2xpY2tUaHJvdWdoPXtzaG91bGRUcmFja0NsaWNrVGhyb3VnaH1cbiAgICAgICAgY2xpY2tUaHJvdWdoVGFncz17Y2xpY2tUaHJvdWdoVGFnc31cbiAgICAgIC8+XG4gICAgKSk7XG5cbiAgICBjb25zdCB2aWV3UHJvcHMgPSB7XG4gICAgICBjbGFzc05hbWUsXG4gICAgICBjaGlsZHJlbixcbiAgICAgIC4uLnJlc3RcbiAgICB9O1xuXG4gICAgcmV0dXJuIDxWaWV3IHsuLi52aWV3UHJvcHN9IC8+O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhTZWFyY2goKHsgcmVzdWx0cyB9KSA9PiAoeyByZXN1bHRzIH0pKShSZXN1bHRzQ29udGFpbmVyKTtcbiJdfQ==