import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
var _excluded = ["className", "label", "setSort", "sortDirection", "sortField", "sortList", "sortOptions", "view"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import PropTypes from "prop-types";
import React, { Component } from "react";
import { withSearch } from "..";
import { Sorting } from "@elastic/react-search-ui-views";
import SortList from "../types/SortList";
import { SortOption } from "../types";

function findSortOption(sortOptions, sortData) {
  if (sortData.indexOf("|||") === -1) {
    return sortOptions.find(function (option) {
      return JSON.stringify(option.value) === sortData;
    });
  }

  var _sortData$split = sortData.split("|||"),
      _sortData$split2 = _slicedToArray(_sortData$split, 2),
      value = _sortData$split2[0],
      direction = _sortData$split2[1];

  return sortOptions.find(function (option) {
    return option.value === value && option.direction === direction;
  });
}

function formatValue(sortField, sortDirection, sortList) {
  if (sortList && sortList.length > 0) {
    return JSON.stringify(sortList);
  }

  return "".concat(sortField, "|||").concat(sortDirection);
}

function formatSelectValues(sortOption) {
  if (Array.isArray(sortOption.value)) {
    // save value as string for comparison
    return JSON.stringify(sortOption.value);
  } else {
    return formatValue(sortOption.value, sortOption.direction);
  }
}

function formatSelectOption(sortOption) {
  return {
    label: sortOption.name,
    value: formatSelectValues(sortOption)
  };
}

export var SortingContainer = /*#__PURE__*/function (_Component) {
  _inherits(SortingContainer, _Component);

  var _super = _createSuper(SortingContainer);

  function SortingContainer() {
    _classCallCheck(this, SortingContainer);

    return _super.apply(this, arguments);
  }

  _createClass(SortingContainer, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          label = _this$props.label,
          setSort = _this$props.setSort,
          sortDirection = _this$props.sortDirection,
          sortField = _this$props.sortField,
          sortList = _this$props.sortList,
          sortOptions = _this$props.sortOptions,
          view = _this$props.view,
          rest = _objectWithoutProperties(_this$props, _excluded);

      var View = view || Sorting;

      var viewProps = _objectSpread({
        className: className,
        label: label,
        onChange: function onChange(o) {
          var sortOption = findSortOption(sortOptions, o);
          setSort(sortOption.value, sortOption.direction);
        },
        options: sortOptions.map(formatSelectOption),
        value: formatValue(sortField, sortDirection, sortList)
      }, rest);

      return /*#__PURE__*/React.createElement(View, viewProps);
    }
  }]);

  return SortingContainer;
}(Component);

_defineProperty(SortingContainer, "propTypes", {
  // Props
  className: PropTypes.string,
  label: PropTypes.string,
  sortOptions: PropTypes.arrayOf(SortOption).isRequired,
  view: PropTypes.func,
  // State
  sortDirection: PropTypes.oneOf(["asc", "desc", ""]),
  sortField: PropTypes.string,
  sortList: SortList,
  // Actions
  setSort: PropTypes.func.isRequired
});

export default withSearch(function (_ref) {
  var sortDirection = _ref.sortDirection,
      sortField = _ref.sortField,
      sortList = _ref.sortList,
      setSort = _ref.setSort;
  return {
    sortDirection: sortDirection,
    sortField: sortField,
    sortList: sortList,
    setSort: setSort
  };
})(SortingContainer);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb250YWluZXJzL1NvcnRpbmcuanMiXSwibmFtZXMiOlsiUHJvcFR5cGVzIiwiUmVhY3QiLCJDb21wb25lbnQiLCJ3aXRoU2VhcmNoIiwiU29ydGluZyIsIlNvcnRMaXN0IiwiU29ydE9wdGlvbiIsImZpbmRTb3J0T3B0aW9uIiwic29ydE9wdGlvbnMiLCJzb3J0RGF0YSIsImluZGV4T2YiLCJmaW5kIiwib3B0aW9uIiwiSlNPTiIsInN0cmluZ2lmeSIsInZhbHVlIiwic3BsaXQiLCJkaXJlY3Rpb24iLCJmb3JtYXRWYWx1ZSIsInNvcnRGaWVsZCIsInNvcnREaXJlY3Rpb24iLCJzb3J0TGlzdCIsImxlbmd0aCIsImZvcm1hdFNlbGVjdFZhbHVlcyIsInNvcnRPcHRpb24iLCJBcnJheSIsImlzQXJyYXkiLCJmb3JtYXRTZWxlY3RPcHRpb24iLCJsYWJlbCIsIm5hbWUiLCJTb3J0aW5nQ29udGFpbmVyIiwicHJvcHMiLCJjbGFzc05hbWUiLCJzZXRTb3J0IiwidmlldyIsInJlc3QiLCJWaWV3Iiwidmlld1Byb3BzIiwib25DaGFuZ2UiLCJvIiwib3B0aW9ucyIsIm1hcCIsInN0cmluZyIsImFycmF5T2YiLCJpc1JlcXVpcmVkIiwiZnVuYyIsIm9uZU9mIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxPQUFPQSxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsS0FBUCxJQUFnQkMsU0FBaEIsUUFBaUMsT0FBakM7QUFDQSxTQUFTQyxVQUFULFFBQTJCLElBQTNCO0FBQ0EsU0FBU0MsT0FBVCxRQUF3QixnQ0FBeEI7QUFDQSxPQUFPQyxRQUFQLE1BQXFCLG1CQUFyQjtBQUVBLFNBQVNDLFVBQVQsUUFBMkIsVUFBM0I7O0FBRUEsU0FBU0MsY0FBVCxDQUF3QkMsV0FBeEIsRUFBcUNDLFFBQXJDLEVBQStDO0FBQzdDLE1BQUlBLFFBQVEsQ0FBQ0MsT0FBVCxDQUFpQixLQUFqQixNQUE0QixDQUFDLENBQWpDLEVBQW9DO0FB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LGdCLGVBQ1E7QUFDakI7QUFDQUUsRUFBQUEsU0FBUyxFQUFFaEMsU0FBUyxDQUFDMEMsTUFGSjtBQUdqQmQsRUFBQUEsS0FBSyxFQUFFNUIsU0FBUyxDQUFDMEMsTUFIQTtBQUlqQmxDLEVBQUFBLFdBQVcsRUFBRVIsU0FBUyxDQUFDMkMsT0FBVixDQUFrQnJDLFVBQWxCLEVBQThCc0MsVUFKMUI7QUFLakJWLEVBQUFBLElBQUksRUFBRWxDLFNBQVMsQ0FBQzZDLElBTEM7QUFNakI7QUFDQXpCLEVBQUFBLGFBQWEsRUFBRXBCLFNBQVMsQ0FBQzhDLEtBQVYsQ0FBZ0IsQ0FBQyxLQUFELEVBQVEsTUFBUixFQUFnQixFQUFoQixDQUFoQixDQVBFO0FBUWpCM0IsRUFBQUEsU0FBUyxFQUFFbkIsU0FBUyxDQUFDMEMsTUFSSjtBQVNqQnJCLEVBQUFBLFFBQVEsRUFBRWhCLFFBVE87QUFVakI7QUFDQTRCLEVBQUFBLE9BQU8sRUFBRWpDLFNBQVMsQ0FBQzZDLElBQVYsQ0FBZUQ7QUFYUCxDOztBQTZDckIsZUFBZXpDLFVBQVUsQ0FDdkI7QUFBQSxNQUFHaUIsYUFBSCxRQUFHQSxhQUFIO0FBQUEsTUFBa0JELFNBQWxCLFFBQWtCQSxTQUFsQjtBQUFBLE1BQTZCRSxRQUE3QixRQUE2QkEsUUFBN0I7QUFBQSxNQUF1Q1ksT0FBdkMsUUFBdUNBLE9BQXZDO0FBQUEsU0FBc0Q7QUFDcERiLElBQUFBLGFBQWEsRUFBYkEsYUFEb0Q7QUFFcERELElBQUFBLFNBQVMsRUFBVEEsU0FGb0Q7QUFHcERFLElBQUFBLFFBQVEsRUFBUkEsUUFIb0Q7QUFJcERZLElBQUFBLE9BQU8sRUFBUEE7QUFKb0QsR0FBdEQ7QUFBQSxDQUR1QixDQUFWLENBT2JILGdCQVBhLENBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB3aXRoU2VhcmNoIH0gZnJvbSBcIi4uXCI7XG5pbXBvcnQgeyBTb3J0aW5nIH0gZnJvbSBcIkBlbGFzdGljL3JlYWN0LXNlYXJjaC11aS12aWV3c1wiO1xuaW1wb3J0IFNvcnRMaXN0IGZyb20gXCIuLi90eXBlcy9Tb3J0TGlzdFwiO1xuXG5pbXBvcnQgeyBTb3J0T3B0aW9uIH0gZnJvbSBcIi4uL3R5cGVzXCI7XG5cbmZ1bmN0aW9uIGZpbmRTb3J0T3B0aW9uKHNvcnRPcHRpb25zLCBzb3J0RGF0YSkge1xuICBpZiAoc29ydERhdGEuaW5kZXhPZihcInx8fFwiKSA9PT0gLTEpIHtcbiAgICByZXR1cm4gc29ydE9wdGlvbnMuZmluZChcbiAgICAgIG9wdGlvbiA9PiBKU09OLnN0cmluZ2lmeShvcHRpb24udmFsdWUpID09PSBzb3J0RGF0YVxuICAgICk7XG4gIH1cblxuICBjb25zdCBbdmFsdWUsIGRpcmVjdGlvbl0gPSBzb3J0RGF0YS5zcGxpdChcInx8fFwiKTtcblxuICByZXR1cm4gc29ydE9wdGlvbnMuZmluZChcbiAgICBvcHRpb24gPT4gb3B0aW9uLnZhbHVlID09PSB2YWx1ZSAmJiBvcHRpb24uZGlyZWN0aW9uID09PSBkaXJlY3Rpb25cbiAgKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VmFsdWUoc29ydEZpZWxkLCBzb3J0RGlyZWN0aW9uLCBzb3J0TGlzdCkge1xuICBpZiAoc29ydExpc3QgJiYgc29ydExpc3QubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShzb3J0TGlzdCk7XG4gIH1cbiAgcmV0dXJuIGAke3NvcnRGaWVsZH18fHwke3NvcnREaXJlY3Rpb259YDtcbn1cblxuZnVuY3Rpb24gZm9ybWF0U2VsZWN0VmFsdWVzKHNvcnRPcHRpb24pIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoc29ydE9wdGlvbi52YWx1ZSkpIHtcbiAgICAvLyBzYXZlIHZhbHVlIGFzIHN0cmluZyBmb3IgY29tcGFyaXNvblxuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShzb3J0T3B0aW9uLnZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZm9ybWF0VmFsdWUoc29ydE9wdGlvbi52YWx1ZSwgc29ydE9wdGlvbi5kaXJlY3Rpb24pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFNlbGVjdE9wdGlvbihzb3J0T3B0aW9uKSB7XG4gIHJldHVybiB7XG4gICAgbGFiZWw6IHNvcnRPcHRpb24ubmFtZSxcbiAgICB2YWx1ZTogZm9ybWF0U2VsZWN0VmFsdWVzKHNvcnRPcHRpb24pXG4gIH07XG59XG5leHBvcnQgY2xhc3MgU29ydGluZ0NvbnRhaW5lciBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLy8gUHJvcHNcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgbGFiZWw6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc29ydE9wdGlvbnM6IFByb3BUeXBlcy5hcnJheU9mKFNvcnRPcHRpb24pLmlzUmVxdWlyZWQsXG4gICAgdmlldzogUHJvcFR5cGVzLmZ1bmMsXG4gICAgLy8gU3RhdGVcbiAgICBzb3J0RGlyZWN0aW9uOiBQcm9wVHlwZXMub25lT2YoW1wiYXNjXCIsIFwiZGVzY1wiLCBcIlwiXSksXG4gICAgc29ydEZpZWxkOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHNvcnRMaXN0OiBTb3J0TGlzdCxcbiAgICAvLyBBY3Rpb25zXG4gICAgc2V0U29ydDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjbGFzc05hbWUsXG4gICAgICBsYWJlbCxcbiAgICAgIHNldFNvcnQsXG4gICAgICBzb3J0RGlyZWN0aW9uLFxuICAgICAgc29ydEZpZWxkLFxuICAgICAgc29ydExpc3QsXG4gICAgICBzb3J0T3B0aW9ucyxcbiAgICAgIHZpZXcsXG4gICAgICAuLi5yZXN0XG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBWaWV3ID0gdmlldyB8fCBTb3J0aW5nO1xuXG4gICAgY29uc3Qgdmlld1Byb3BzID0ge1xuICAgICAgY2xhc3NOYW1lLFxuICAgICAgbGFiZWwsXG4gICAgICBvbkNoYW5nZTogbyA9PiB7XG4gICAgICAgIGNvbnN0IHNvcnRPcHRpb24gPSBmaW5kU29ydE9wdGlvbihzb3J0T3B0aW9ucywgbyk7XG4gICAgICAgIHNldFNvcnQoc29ydE9wdGlvbi52YWx1ZSwgc29ydE9wdGlvbi5kaXJlY3Rpb24pO1xuICAgICAgfSxcbiAgICAgIG9wdGlvbnM6IHNvcnRPcHRpb25zLm1hcChmb3JtYXRTZWxlY3RPcHRpb24pLFxuICAgICAgdmFsdWU6IGZvcm1hdFZhbHVlKHNvcnRGaWVsZCwgc29ydERpcmVjdGlvbiwgc29ydExpc3QpLFxuICAgICAgLi4ucmVzdFxuICAgIH07XG5cbiAgICByZXR1cm4gPFZpZXcgey4uLnZpZXdQcm9wc30gLz47XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aFNlYXJjaChcbiAgKHsgc29ydERpcmVjdGlvbiwgc29ydEZpZWxkLCBzb3J0TGlzdCwgc2V0U29ydCB9KSA9PiAoe1xuICAgIHNvcnREaXJlY3Rpb24sXG4gICAgc29ydEZpZWxkLFxuICAgIHNvcnRMaXN0LFxuICAgIHNldFNvcnRcbiAgfSlcbikoU29ydGluZ0NvbnRhaW5lcik7XG4iXX0=