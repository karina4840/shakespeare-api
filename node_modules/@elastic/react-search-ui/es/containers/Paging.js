import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["className", "current", "resultsPerPage", "setCurrent", "totalPages", "view"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

import React from "react";
import PropTypes from "prop-types";
import { withSearch } from "..";
import { Paging } from "@elastic/react-search-ui-views";
export function PagingContainer(_ref) {
  var className = _ref.className,
      current = _ref.current,
      resultsPerPage = _ref.resultsPerPage,
      setCurrent = _ref.setCurrent,
      totalPages = _ref.totalPages,
      view = _ref.view,
      rest = _objectWithoutProperties(_ref, _excluded);

  if (totalPages === 0) return null;
  var View = view || Paging;

  var viewProps = _objectSpread({
    className: className,
    current: current,
    resultsPerPage: resultsPerPage,
    totalPages: totalPages,
    onChange: setCurrent
  }, rest);

  return /*#__PURE__*/React.createElement(View, viewProps);
}
PagingContainer.propTypes = {
  // Props
  className: PropTypes.string,
  view: PropTypes.func,
  // State
  current: PropTypes.number.isRequired,
  resultsPerPage: PropTypes.number.isRequired,
  totalPages: PropTypes.number.isRequired,
  // Action
  setCurrent: PropTypes.func.isRequired
};
export default withSearch(function (_ref2) {
  var current = _ref2.current,
      resultsPerPage = _ref2.resultsPerPage,
      totalPages = _ref2.totalPages,
      setCurrent = _ref2.setCurrent;
  return {
    current: current,
    resultsPerPage: resultsPerPage,
    totalPages: totalPages,
    setCurrent: setCurrent
  };
})(PagingContainer);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb250YWluZXJzL1BhZ2luZy5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsIlByb3BUeXBlcyIsIndpdGhTZWFyY2giLCJQYWdpbmciLCJQYWdpbmdDb250YWluZXIiLCJjbGFzc05hbWUiLCJjdXJyZW50IiwicmVzdWx0c1BlclBhZ2UiLCJzZXRDdXJyZW50IiwidG90YWxQYWdlcyIsInZpZXciLCJyZXN0IiwiVmlldyIsInZpZXdQcm9wcyIsIm9uQ2hhbmdlIiwicHJvcFR5cGVzIiwic3RyaW5nIiwiZnVuYyIsIm51bWJlciIsImlzUmVxdWlyZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsT0FBT0EsS0FBUCxNQUFrQixPQUFsQjtBQUNBLE9BQU9DLFNBQVAsTUFBc0IsWUFBdEI7QUFFQSxTQUFTQyxVQUFULFFBQTJCLElBQTNCO0FBQ0EsU0FBU0MsTUFBVCxRQUF1QixnQ0FBdkI7QUFFQSxPQUFPLFNBQVNDLGVBQVQsT0FRSjtBQUFBLE1BUERDLFNBT0MsUUFQREEsU0FPQztBQUFBLE1BTkRDLE9BTUMsUUFOREEsT0FNQztBQUFBLE1BTERDLGNBS0MsUUFMREEsY0FLQztBQUFBLE1BSkRDLFVBSUMsUUFKREEsVUFJQztBQUFBLE1BSERDLFVBR0MsUUFIREEsVUFHQztBQUFBLE1BRkRDLElBRUMsUUFGREEsSUFFQztBQUFBLE1BREVDLElBQ0Y7O0FBQ0QsTUFBSUYsVUFBVSxLQUFLLENBQW5CLEVBQXNCLE9BQU8sSUFBUDtBQUV0QixNQUFNRyxJQUFJLEdBQUdGLElBQUksSUFBSVAsTUFBckI7O0FBRUEsTUFBTVUsU0FBUztBQUNiUixJQUFBQSxTQUFTLEVBQVRBLFNBRGE7QUFFYkMsSUFBQUEsT0FBTyxFQUFQQSxPQUZhO0FBR2JDLElBQUFBLGNBQWMsRUFBZEEsY0FIYTtBQUliRSxJQUFBQSxVQUFVLEVBQVZBLFVBSmE7QUFLYkssSUFBQUEsUUFBUSxFQUFFTjtBQUxHLEtBTVZHLElBTlUsQ0FBZjs7QUFTQSxzQkFBTyxvQkFBQyxJQUFELEVBQVVFLFNBQVYsQ0FBUDtBQUNEO0FBRURULGVBQWUsQ0FBQ1csU0FBaEIsR0FBNEI7QUFDMUI7QUFDQVYsRUFBQUEsU0FBUyxFQUFFSixTQUFTLENBQUNlLE1BRks7QUFHMUJOLEVBQUFBLElBQUksRUFBRVQsU0FBUyxDQUFDZ0IsSUFIVTtBQUkxQjtBQUNBWCxFQUFBQSxPQUFPLEVBQUVMLFNBQVMsQ0FBQ2lCLE1BQVYsQ0FBaUJDLFVBTEE7QUFNMUJaLEVBQUFBLGNBQWMsRUFBRU4sU0FBUyxDQUFDaUIsTUFBVixDQUFpQkMsVUFOUDtBQU8xQlYsRUFBQUEsVUFBVSxFQUFFUixTQUFTLENBQUNpQixNQUFWLENBQWlCQyxVQVBIO0FBUTFCO0FBQ0FYLEVBQUFBLFVBQVUsRUFBRVAsU0FBUyxDQUFDZ0IsSUFBVixDQUFlRTtBQVRELENBQTVCO0FBWUEsZUFBZWpCLFVBQVUsQ0FDdkI7QUFBQSxNQUFHSSxPQUFILFNBQUdBLE9BQUg7QUFBQSxNQUFZQyxjQUFaLFNBQVlBLGNBQVo7QUFBQSxNQUE0QkUsVUFBNUIsU0FBNEJBLFVBQTVCO0FBQUEsTUFBd0NELFVBQXhDLFNBQXdDQSxVQUF4QztBQUFBLFNBQTBEO0FBQ3hERixJQUFBQSxPQUFPLEVBQVBBLE9BRHdEO0FBRXhEQyxJQUFBQSxjQUFjLEVBQWRBLGNBRndEO0FBR3hERSxJQUFBQSxVQUFVLEVBQVZBLFVBSHdEO0FBSXhERCxJQUFBQSxVQUFVLEVBQVZBO0FBSndELEdBQTFEO0FBQUEsQ0FEdUIsQ0FBVixDQU9iSixlQVBhLENBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmltcG9ydCB7IHdpdGhTZWFyY2ggfSBmcm9tIFwiLi5cIjtcbmltcG9ydCB7IFBhZ2luZyB9IGZyb20gXCJAZWxhc3RpYy9yZWFjdC1zZWFyY2gtdWktdmlld3NcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIFBhZ2luZ0NvbnRhaW5lcih7XG4gIGNsYXNzTmFtZSxcbiAgY3VycmVudCxcbiAgcmVzdWx0c1BlclBhZ2UsXG4gIHNldEN1cnJlbnQsXG4gIHRvdGFsUGFnZXMsXG4gIHZpZXcsXG4gIC4uLnJlc3Rcbn0pIHtcbiAgaWYgKHRvdGFsUGFnZXMgPT09IDApIHJldHVybiBudWxsO1xuXG4gIGNvbnN0IFZpZXcgPSB2aWV3IHx8IFBhZ2luZztcblxuICBjb25zdCB2aWV3UHJvcHMgPSB7XG4gICAgY2xhc3NOYW1lLFxuICAgIGN1cnJlbnQsXG4gICAgcmVzdWx0c1BlclBhZ2UsXG4gICAgdG90YWxQYWdlcyxcbiAgICBvbkNoYW5nZTogc2V0Q3VycmVudCxcbiAgICAuLi5yZXN0XG4gIH07XG5cbiAgcmV0dXJuIDxWaWV3IHsuLi52aWV3UHJvcHN9IC8+O1xufVxuXG5QYWdpbmdDb250YWluZXIucHJvcFR5cGVzID0ge1xuICAvLyBQcm9wc1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHZpZXc6IFByb3BUeXBlcy5mdW5jLFxuICAvLyBTdGF0ZVxuICBjdXJyZW50OiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIHJlc3VsdHNQZXJQYWdlOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIHRvdGFsUGFnZXM6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgLy8gQWN0aW9uXG4gIHNldEN1cnJlbnQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhTZWFyY2goXG4gICh7IGN1cnJlbnQsIHJlc3VsdHNQZXJQYWdlLCB0b3RhbFBhZ2VzLCBzZXRDdXJyZW50IH0pID0+ICh7XG4gICAgY3VycmVudCxcbiAgICByZXN1bHRzUGVyUGFnZSxcbiAgICB0b3RhbFBhZ2VzLFxuICAgIHNldEN1cnJlbnRcbiAgfSlcbikoUGFnaW5nQ29udGFpbmVyKTtcbiJdfQ==