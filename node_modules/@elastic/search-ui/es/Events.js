import _createClass from "@babel/runtime/helpers/createClass";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";

function wireUpEventHandler(handlerName, apiConnector, handlerParam) {
  if (handlerParam) {
    // Passes a 'next' parameter which allows a handler to work as
    // middleware for a connector
    if (apiConnector) {
      var next = apiConnector[handlerName].bind(apiConnector);
      return function () {
        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {
          params[_key] = arguments[_key];
        }

        return handlerParam.apply(void 0, params.concat([next]));
      };
    }

    return handlerParam;
  }

  if (apiConnector && apiConnector[handlerName]) return apiConnector[handlerName].bind(apiConnector);
  return function () {
    throw "No ".concat(handlerName, " handler provided and no Connector provided. You must configure one or the other.");
  };
}
/*
 * This class encapsulates the logic for Events. Events are events that occur
 * within Search UI that require integration with an external service to
 * either fetch / search for data, or notify analytics services of interesting
 * events that occur within a UI.
 *
 * Handlers for these events can either be passed directly, or by providing
 * an API Connector. The events that are passed directly can also be used
 * to override or proxy handlers provided by API Connectors.
 */


var Events = /*#__PURE__*/_createClass(function Events() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      apiConnector = _ref.apiConnector,
      onSearch = _ref.onSearch,
      onAutocomplete = _ref.onAutocomplete,
      onResultClick = _ref.onResultClick,
      onAutocompleteResultClick = _ref.onAutocompleteResultClick;

  _classCallCheck(this, Events);

  this.search = wireUpEventHandler("onSearch", apiConnector, onSearch);
  this.autocomplete = wireUpEventHandler("onAutocomplete", apiConnector, onAutocomplete);
  this.resultClick = wireUpEventHandler("onResultClick", apiConnector, onResultClick);
  this.autocompleteResultClick = wireUpEventHandler("onAutocompleteResultClick", apiConnector, onAutocompleteResultClick);
});

export { Events as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9FdmVudHMuanMiXSwibmFtZXMiOlsid2lyZVVwRXZlbnRIYW5kbGVyIiwiaGFuZGxlck5hbWUiLCJhcGlDb25uZWN0b3IiLCJoYW5kbGVyUGFyYW0iLCJuZXh0IiwiYmluZCIsInBhcmFtcyIsIkV2ZW50cyIsIm9uU2VhcmNoIiwib25BdXRvY29tcGxldGUiLCJvblJlc3VsdENsaWNrIiwib25BdXRvY29tcGxldGVSZXN1bHRDbGljayIsInNlYXJjaCIsImF1dG9jb21wbGV0ZSIsInJlc3VsdENsaWNrIiwiYXV0b2NvbXBsZXRlUmVzdWx0Q2xpY2siXSwibWFwcGluZ3MiOiI7OztBQUFBLFNBQVNBLGtCQUFULENBQTRCQyxXQUE1QixFQUF5Q0MsWUFBekMsRUFBdURDLFlBQXZELEVBQXFFO0FBQ25FLE1BQUlBLFlBQUosRUFBa0I7QUFDaEI7QUFDQTtBQUNBLFFBQUlELFlBQUosRUFBa0I7QUFDaEIsVUFBTUUsSUFBSSxHQUFHRixZQUFZLENBQUNELFdBQUQsQ0FBWixDQUEwQkksSUFBMUIsQ0FBK0JILFlBQS9CLENBQWI7QUFDQSxhQUFPLFlBQWU7QUFBQSwwQ0FBWEksTUFBVztBQUFYQSxVQUFBQSxNQUFXO0FBQUE7O0FBQ3BCLGVBQU9ILFlBQVksTUFBWixTQUFnQkcsTUFBaEIsU0FBd0JGLElBQXhCLEdBQVA7QUFDRCxPQUZEO0FBR0Q7O0FBQ0QsV0FBT0QsWUFBUDtBQUNEOztBQUNELE1BQUlELFlBQVksSUFBSUEsWUFBWSxDQUFDRCxXQUFELENBQWhDLEVBQ0UsT0FBT0MsWUFBWSxDQUFDRCxXQUFELENBQVosQ0FBMEJJLElBQTFCLENBQStCSCxZQUEvQixDQUFQO0FBQ0YsU0FBTyxZQUFNO0FBQ1gsdUJBQVlELFdBQVo7QUFDRCxHQUZEO0FBR0Q7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0lBQ3FCTSxNLDZCQUNuQixrQkFNUTtBQUFBLGlGQUFKLEVBQUk7QUFBQSxNQUxOTCxZQUtNLFFBTE5BLFlBS007QUFBQSxNQUpOTSxRQUlNLFFBSk5BLFFBSU07QUFBQSxNQUhOQyxjQUdNLFFBSE5BLGNBR007QUFBQSxNQUZOQyxhQUVNLFFBRk5BLGFBRU07QUFBQSxNQUROQyx5QkFDTSxRQUROQSx5QkFDTTs7QUFBQTs7QUFDTixPQUFLQyxNQUFMLEdBQWNaLGtCQUFrQixDQUFDLFVBQUQsRUFBYUUsWUFBYixFQUEyQk0sUUFBM0IsQ0FBaEM7QUFDQSxPQUFLSyxZQUFMLEdBQW9CYixrQkFBa0IsQ0FDcEMsZ0JBRG9DLEVBRXBDRSxZQUZvQyxFQUdwQ08sY0FIb0MsQ0FBdEM7QUFLQSxPQUFLSyxXQUFMLEdBQW1CZCxrQkFBa0IsQ0FDbkMsZUFEbUMsRUFFbkNFLFlBRm1DLEVBR25DUSxhQUhtQyxDQUFyQztBQUtBLE9BQUtLLHVCQUFMLEdBQStCZixrQkFBa0IsQ0FDL0MsMkJBRCtDLEVBRS9DRSxZQUYrQyxFQUcvQ1MseUJBSCtDLENBQWpEO0FBS0QsQzs7U0F4QmtCSixNIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gd2lyZVVwRXZlbnRIYW5kbGVyKGhhbmRsZXJOYW1lLCBhcGlDb25uZWN0b3IsIGhhbmRsZXJQYXJhbSkge1xuICBpZiAoaGFuZGxlclBhcmFtKSB7XG4gICAgLy8gUGFzc2VzIGEgJ25leHQnIHBhcmFtZXRlciB3aGljaCBhbGxvd3MgYSBoYW5kbGVyIHRvIHdvcmsgYXNcbiAgICAvLyBtaWRkbGV3YXJlIGZvciBhIGNvbm5lY3RvclxuICAgIGlmIChhcGlDb25uZWN0b3IpIHtcbiAgICAgIGNvbnN0IG5leHQgPSBhcGlDb25uZWN0b3JbaGFuZGxlck5hbWVdLmJpbmQoYXBpQ29ubmVjdG9yKTtcbiAgICAgIHJldHVybiAoLi4ucGFyYW1zKSA9PiB7XG4gICAgICAgIHJldHVybiBoYW5kbGVyUGFyYW0oLi4ucGFyYW1zLCBuZXh0KTtcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBoYW5kbGVyUGFyYW07XG4gIH1cbiAgaWYgKGFwaUNvbm5lY3RvciAmJiBhcGlDb25uZWN0b3JbaGFuZGxlck5hbWVdKVxuICAgIHJldHVybiBhcGlDb25uZWN0b3JbaGFuZGxlck5hbWVdLmJpbmQoYXBpQ29ubmVjdG9yKTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICB0aHJvdyBgTm8gJHtoYW5kbGVyTmFtZX0gaGFuZGxlciBwcm92aWRlZCBhbmQgbm8gQ29ubmVjdG9yIHByb3ZpZGVkLiBZb3UgbXVzdCBjb25maWd1cmUgb25lIG9yIHRoZSBvdGhlci5gO1xuICB9O1xufVxuXG4vKlxuICogVGhpcyBjbGFzcyBlbmNhcHN1bGF0ZXMgdGhlIGxvZ2ljIGZvciBFdmVudHMuIEV2ZW50cyBhcmUgZXZlbnRzIHRoYXQgb2NjdXJcbiAqIHdpdGhpbiBTZWFyY2ggVUkgdGhhdCByZXF1aXJlIGludGVncmF0aW9uIHdpdGggYW4gZXh0ZXJuYWwgc2VydmljZSB0b1xuICogZWl0aGVyIGZldGNoIC8gc2VhcmNoIGZvciBkYXRhLCBvciBub3RpZnkgYW5hbHl0aWNzIHNlcnZpY2VzIG9mIGludGVyZXN0aW5nXG4gKiBldmVudHMgdGhhdCBvY2N1ciB3aXRoaW4gYSBVSS5cbiAqXG4gKiBIYW5kbGVycyBmb3IgdGhlc2UgZXZlbnRzIGNhbiBlaXRoZXIgYmUgcGFzc2VkIGRpcmVjdGx5LCBvciBieSBwcm92aWRpbmdcbiAqIGFuIEFQSSBDb25uZWN0b3IuIFRoZSBldmVudHMgdGhhdCBhcmUgcGFzc2VkIGRpcmVjdGx5IGNhbiBhbHNvIGJlIHVzZWRcbiAqIHRvIG92ZXJyaWRlIG9yIHByb3h5IGhhbmRsZXJzIHByb3ZpZGVkIGJ5IEFQSSBDb25uZWN0b3JzLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFdmVudHMge1xuICBjb25zdHJ1Y3Rvcih7XG4gICAgYXBpQ29ubmVjdG9yLFxuICAgIG9uU2VhcmNoLFxuICAgIG9uQXV0b2NvbXBsZXRlLFxuICAgIG9uUmVzdWx0Q2xpY2ssXG4gICAgb25BdXRvY29tcGxldGVSZXN1bHRDbGlja1xuICB9ID0ge30pIHtcbiAgICB0aGlzLnNlYXJjaCA9IHdpcmVVcEV2ZW50SGFuZGxlcihcIm9uU2VhcmNoXCIsIGFwaUNvbm5lY3Rvciwgb25TZWFyY2gpO1xuICAgIHRoaXMuYXV0b2NvbXBsZXRlID0gd2lyZVVwRXZlbnRIYW5kbGVyKFxuICAgICAgXCJvbkF1dG9jb21wbGV0ZVwiLFxuICAgICAgYXBpQ29ubmVjdG9yLFxuICAgICAgb25BdXRvY29tcGxldGVcbiAgICApO1xuICAgIHRoaXMucmVzdWx0Q2xpY2sgPSB3aXJlVXBFdmVudEhhbmRsZXIoXG4gICAgICBcIm9uUmVzdWx0Q2xpY2tcIixcbiAgICAgIGFwaUNvbm5lY3RvcixcbiAgICAgIG9uUmVzdWx0Q2xpY2tcbiAgICApO1xuICAgIHRoaXMuYXV0b2NvbXBsZXRlUmVzdWx0Q2xpY2sgPSB3aXJlVXBFdmVudEhhbmRsZXIoXG4gICAgICBcIm9uQXV0b2NvbXBsZXRlUmVzdWx0Q2xpY2tcIixcbiAgICAgIGFwaUNvbm5lY3RvcixcbiAgICAgIG9uQXV0b2NvbXBsZXRlUmVzdWx0Q2xpY2tcbiAgICApO1xuICB9XG59XG4iXX0=